# ESTRUTURA DO PROJETO INSANYCK

üìÑ .eslintrc.json

============================================================
FILE: .eslintrc.json
============================================================
{
  "extends": ["next/core-web-vitals"],
  "rules": {
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "@next/next/no-img-element": "off",
    "prefer-const": "warn",
    "no-unused-vars": ["warn", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }],
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "next/document",
            "message": "Import Html from next/document is only allowed in pages/_document.tsx. Use Html as DreiHtml from @react-three/drei for 3D components."
          }
        ],
        "patterns": [
          {
            "group": ["**/next/document"],
            "message": "Import Html from next/document is only allowed in pages/_document.tsx. Use Html as DreiHtml from @react-three/drei for 3D components."
          }
        ]
      }
    ]
  },
  "overrides": [
    {
      "files": ["src/pages/_document.tsx"],
      "rules": {
        "no-restricted-imports": "off"
      }
    },
    {
      "files": ["src/pages/_document.tsx", "src/pages/**/api/*.ts", "src/pages/404.tsx", "src/pages/_error.tsx"],
      "rules": {
        "no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "@react-three/fiber",
                "message": "3D imports are not allowed in error pages, API routes, or _document to prevent bundle bloat and SSR conflicts."
              },
              {
                "name": "@react-three/drei",
                "message": "3D imports are not allowed in error pages, API routes, or _document to prevent bundle bloat and SSR conflicts."
              },
              {
                "name": "three",
                "message": "3D imports are not allowed in error pages, API routes, or _document to prevent bundle bloat and SSR conflicts."
              }
            ],
            "patterns": [
              {
                "group": ["**/three/**"],
                "message": "3D component imports are not allowed in error pages, API routes, or _document to prevent bundle bloat and SSR conflicts."
              }
            ]
          }
        ]
      }
    }
  ]
}



üìÑ .lintstagedrc.json

============================================================
FILE: .lintstagedrc.json
============================================================
{
  "*.{js,jsx,ts,tsx}": [
    "eslint --fix"
  ],
  "*.{ts,tsx,js,jsx,css,md,json,yml,yaml}": [
    "prettier --write"
  ]
}


üìÑ ARCHITECTURE.md

============================================================
FILE: ARCHITECTURE.md
============================================================
## Rotas principais
- /, /loja, /produto/[slug], /checkout, /conta/*, /favoritos, /buscar

## Arquivos-chave reais
- i18n: `next-i18next.config.js`
- Stripe server: `src/lib/stripeServer.ts` (l√™ STRIPE_API_VERSION do .env)
- Estilos: `src/styles/globals.css`
- P√°ginas: `src/pages/**`



üìÑ CLAUDE.md

============================================================
FILE: CLAUDE.md
============================================================
# INSANYCK ‚Äî HANDSHAKE MASTER (v3)
**MODE: DESIGN_QA_ONLY = false**   <!-- mude para false quando for hora de implementar -->

## Projeto e Stack
- Next.js (Pages Router) + React **19** + TypeScript estrito
- Tailwind v4 (tokens via CSS vars), **lucide-react**
- i18n: next-i18next (PT/EN), A11y b√°sico
- Stripe: **apiVersion obrigat√≥ria por .env (ex.: 2025-07-30.basil)** ‚Äî n√£o alterar, sem hardcode
- Est√©tica: INSANYCK glass/hairline/tokens ‚Äî **n√£o mudar tipografia/spacing nem 1px** sem autoriza√ß√£o



üìÑ DEPLOYMENT.md

============================================================
FILE: DEPLOYMENT.md
============================================================
# INSANYCK ‚Äî Deploy Guide & Stripe Integration

## üìã Pre-Deploy Checklist

### Environment Variables
**‚ö†Ô∏è CRITICAL: Never commit `.env.local` to version control! Contains real secrets.**

Ensure all required variables are set in your deployment platform:

```bash
# Core Application
DATABASE_URL="postgresql://..." 
NEXTAUTH_URL="https://yourdomain.com"
NEXTAUTH_SECRET="your-32-char-secret" # Generate: openssl rand -base64 32
NEXT_PUBLIC_URL="https://yourdomain.com"

# Stripe Integration (REQUIRED for Block 1)
# Client-side key (public, used in browser)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_live_..." # Client access
# Server-side keys (private, never expose)
STRIPE_SECRET_KEY="sk_live_..."                   # Server-only
STRIPE_WEBHOOK_SECRET="whsec_..."                 # Server-only  
STRIPE_API_VERSION="2025-07-30.basil"            # Pinned version

# Optional
NODE_ENV="production"
```

### Build Validation
```bash
npm run typecheck  # Check TypeScript
npm run build      # Production build
npm run start      # Test production server
```

## üöÄ Deployment Steps

### 1. Vercel (Recommended)
```bash
# Install Vercel CLI
npm i -g vercel

# Deploy
vercel

# Set environment variables via dashboard or CLI:
vercel env add DATABASE_URL
vercel env add NEXTAUTH_SECRET
vercel env add STRIPE_SECRET_KEY
vercel env add NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
vercel env add STRIPE_WEBHOOK_SECRET
vercel env add STRIPE_API_VERSION
# ... (add all other vars)

# Redeploy with env vars
vercel --prod
```

### 2. Other Platforms
- **Railway**: Connect GitHub, set env vars in dashboard
- **Render**: Auto-deploy from GitHub, configure build settings
- **Digital Ocean**: Use App Platform with environment variables

### 3. Stripe Webhook Configuration
After deploy, configure your webhook endpoint:

1. Go to https://dashboard.stripe.com/webhooks
2. Add endpoint: `https://yourdomain.com/api/stripe/webhook`
3. Select events:
   - `checkout.session.completed`
   - `payment_intent.payment_failed`
4. Copy webhook secret to `STRIPE_WEBHOOK_SECRET`

## üß™ Development Testing

### Local Stripe Webhook (Development)
```bash
# Install Stripe CLI
# Windows: scoop install stripe
# Mac: brew install stripe/stripe-cli/stripe
# Linux: https://stripe.com/docs/stripe-cli#install

# Login to Stripe
stripe login

# Start local webhook forwarding
stripe listen --forward-to http://localhost:3000/api/stripe/webhook

# In another terminal, trigger test events
stripe trigger checkout.session.completed
stripe trigger payment_intent.payment_failed

# Expected: Orders created in DB, logs in console
```

### Production Testing (Safe Mode)
1. Use Stripe test keys in production initially
2. Test complete flow: add to cart ‚Üí checkout ‚Üí success
3. Verify orders appear in admin panel: `/admin/orders`
4. Check webhook logs in Stripe dashboard
5. Switch to live keys when ready

## üîí Security Considerations

### Environment Protection
- Never commit `.env.local` or `.env.production`
- Use different secrets for each environment
- Rotate `NEXTAUTH_SECRET` regularly

### Stripe Security
- Use webhook secrets for verification
- Never trust client-side price data
- All pricing comes from DB/Stripe
- Implement rate limiting if needed

## üìä Monitoring & Logs

### Key Metrics to Monitor
- Checkout success rate
- Webhook processing time
- Database connection health
- Order creation failures

### Log Patterns to Watch
```bash
# Success patterns
[INSANYCK][ENV] Environment validation successful
[INSANYCK][Stripe] Initialized with API version: 2025-07-30.basil

# Error patterns
[INSANYCK][Checkout] Server environment not ready
[INSANYCK][Webhook] Server environment not ready
```

## üîÑ Updates & Maintenance

### Stripe API Version Updates
1. Test new version in development
2. Update `STRIPE_API_VERSION` in env
3. Monitor for breaking changes
4. Update webhook handling if needed

### Database Migrations
- Use Prisma migrations: `npx prisma migrate deploy`
- Backup before major schema changes
- Test in staging environment first

## üÜò Troubleshooting

### Common Issues

**Build Fails**
- Check TypeScript errors: `npm run typecheck`
- Verify all environment variables are set
- Clear Next.js cache: `rm -rf .next`

**Webhook Not Working**
- Verify endpoint URL in Stripe dashboard
- Check webhook secret matches environment
- Review webhook logs in Stripe dashboard
- Ensure proper event selection

**Orders Not Creating**
- Check database connection
- Verify Prisma schema matches DB
- Review server logs for errors
- Test with Stripe CLI locally

---

**Support**: Check server logs and Stripe dashboard for detailed error messages.


üìÅ docs/
  üìÑ ci-proof.md

============================================================
FILE: docs\ci-proof.md
============================================================
# INSANYCK CI + Lighthouse CI - Proof of Function

**Date**: 2025-01-03  
**Engineer**: INSANYCK Staff Engineer via Claude Code

## Pipeline Overview

This document serves as proof of functioning for the INSANYCK CI/CD quality pipeline implementation.

### Components Implemented

1. **CI Workflow** (`.github/workflows/ci.yml`)
   - Triggers: Push to any branch + Pull Requests
   - Quality checks: Lint ‚Üí TypeScript ‚Üí Build
   - Artifacts: Build traces on failure
   - Status: `CI / build`

2. **Lighthouse CI Workflow** (`.github/workflows/lighthouse.yml`)  
   - Triggers: Pull Requests only
   - Performance auditing with PR comments
   - Artifacts: Lighthouse reports (always) + failure traces
   - Status: `Lighthouse CI / lighthouse`

## How to Read Lighthouse Comments on PRs

When you open a pull request, the Lighthouse CI bot will automatically post a comment with:

### 1. **Score Summary**
```
Performance: 85 (+2)  üü¢
Accessibility: 94 (0)  üü¢  
Best Practices: 91 (-1)  üü°
SEO: 95 (+1)  üü¢
```

**Reading the scores**:
- **Number**: Current score percentage
- **(+/-N)**: Change compared to target branch
- **üü¢**: Passing (above threshold)
- **üü°**: Warning (close to threshold)  
- **üî¥**: Failing (below threshold)

### 2. **Detailed Metrics**

The comment includes detailed breakdowns for each page tested:
- **FCP** (First Contentful Paint): Time to first content render
- **LCP** (Largest Contentful Paint): Time to largest content element
- **SI** (Speed Index): Visual loading completeness
- **TTI** (Time to Interactive): When page becomes fully interactive
- **TBT** (Total Blocking Time): Main thread blocking time
- **CLS** (Cumulative Layout Shift): Visual stability metric

### 3. **Report Links**

Each comment includes links to:
- **Full HTML Reports**: Complete Lighthouse audit with recommendations
- **JSON Data**: Raw metrics for programmatic analysis  
- **Temporary Public Storage**: Hosted reports (available for 30 days)

### 4. **Action Items**

The comment may include:
- **Opportunities**: Specific performance improvements with estimated impact
- **Diagnostics**: Issues found with debugging information
- **Passed Audits**: Successfully validated checks

## Pipeline Validation

### Current Status
- ‚úÖ **Lint**: Passes with warnings (non-blocking)
- ‚úÖ **TypeScript**: Zero type errors  
- ‚úÖ **Build**: Production build successful
- ‚úÖ **Lighthouse Config**: 5 URLs tested, 2 runs each
- ‚úÖ **Thresholds**: Performance 80%, A11y 90%, Best Practices 90%, SEO 90%

### Artifacts Available

**On CI Failure**:
- `next-trace`: Next.js build trace files for debugging

**On Lighthouse Run** (always):  
- `lighthouse-ci-results`: Complete HTML and JSON reports

**On Lighthouse Failure**:
- `lighthouse-failure-reports`: Detailed failure analysis

### Environment Safety

Both pipelines use production-like but CI-safe environment:
- Dummy Stripe keys prevent real payments
- Sentry disabled prevents error spam
- Telemetry disabled reduces external calls
- NextAuth uses dummy secrets

## Testing the Pipeline

### To Trigger CI Workflow:
```bash
# Any push triggers CI
git push origin main

# Or create a PR
git checkout -b test/ci-validation  
git push -u origin test/ci-validation
# Open PR via GitHub UI
```

### To Trigger Lighthouse CI:
```bash
# Must create a PR (push alone won't trigger)
git checkout -b test/lighthouse-validation
git commit --allow-empty -m "test: trigger lighthouse ci"
git push -u origin test/lighthouse-validation  
# Open PR via GitHub UI - lighthouse comment appears in ~2-3 minutes
```

## Expected Outcomes

### Successful PR Flow:
1. **Push commits** ‚Üí CI workflow starts
2. **CI passes** ‚Üí Green check mark appears
3. **PR created** ‚Üí Lighthouse workflow starts  
4. **Lighthouse runs** ‚Üí Automatic comment posted with scores
5. **Both pass** ‚Üí PR is ready for review/merge

### Failure Scenarios:
1. **Lint/Type/Build fails** ‚Üí Red X, download `next-trace` artifact  
2. **Lighthouse fails threshold** ‚Üí Red X, comment shows failing scores
3. **Flaky lighthouse results** ‚Üí Re-run workflow, review if consistently failing

## Governance Integration

- **CODEOWNERS**: `@nickchagass` owns all files requiring review
- **Branch Protection**: Ready for GitHub UI setup (see `docs/quality-gates.md`)
- **Status Checks**: Both workflows provide required status checks for PR blocking

## Maintenance Notes

**Pipeline Health Monitoring**:
- Watch for consistent lighthouse failures (may indicate perf regression)
- Monitor CI runtime (should complete in <3 minutes typically)  
- Review artifacts monthly to identify build optimization opportunities

**Configuration Updates**:
- Lighthouse thresholds in `lighthouserc.json`
- CI environment variables in workflow YAML files
- Tested URLs can be modified in `lighthouserc.json`

This pipeline ensures zero-regression deployment with automated quality gates and comprehensive performance monitoring.


  üìÑ ci.md

============================================================
FILE: docs\ci.md
============================================================
# CI + Lighthouse CI Documentation

## Overview

This project uses two GitHub Actions workflows for continuous integration:

1. **CI workflow** (`.github/workflows/ci.yml`) - Basic quality checks on push/PR
2. **Lighthouse CI workflow** (`.github/workflows/lighthouse.yml`) - Performance audits on PR

## Local Development

### Running CI Checks Locally

```bash
# Run lint check
npm run lint

# Run type check
npm run typecheck

# Run build
npm run build
```

### Running Lighthouse CI Locally

**Option 1: Manual setup**
```bash
# Terminal 1: Build and start server
npm run build
npm run start

# Terminal 2: Run LHCI after server is ready
npx wait-on http://localhost:3000
npx lhci autorun
```

**Option 2: Using the configured script**
```bash
# This runs the same as above but automated
npm run lhci:ci
```

## Configuration

### Lighthouse CI Settings (`lighthouserc.json`)

- **URLs tested**:
  - `http://localhost:3000/pt` - Homepage PT
  - `http://localhost:3000/pt/sacola` - Shopping bag
  - `http://localhost:3000/pt/checkout` - Checkout page
  - `http://localhost:3000/pt/favoritos` - Favorites page
  - `http://localhost:3000/pt/produto/slug-exemplo` - Product page (may 404, won't fail job)

- **Thresholds** (conservative, evidence-based changes only):
  - Performance: ‚â• 80%
  - Accessibility: ‚â• 90%
  - Best Practices: ‚â• 90%
  - SEO: ‚â• 90%

- **Settings**:
  - Desktop preset with devtools throttling
  - 2 runs per URL (reduces flakiness)
  - Results uploaded to temporary public storage

## Interpreting Failures

### CI Workflow Failures

1. **Lint errors**: Run `npm run lint` locally to see detailed output
2. **Type errors**: Run `npm run typecheck` locally to see specific issues
3. **Build errors**: Run `npm run build` locally to debug build issues

### Lighthouse CI Failures

1. **Threshold failures**: Check the PR comment for detailed metrics
2. **URL failures**: Some URLs (like product pages) may 404 - this won't fail the job
3. **Flakiness**: If scores are borderline, re-run the workflow

### Anti-Flakiness Tips

1. **Reduce URLs**: Comment out problematic URLs in `lighthouserc.json` temporarily
2. **Increase runs**: Change `numberOfRuns` from 2 to 3 for more stable results
3. **Check network**: Lighthouse CI can be affected by external resource loading

## Workflows

### CI Workflow
- **Triggers**: Push to any branch, Pull Requests
- **Jobs**: lint ‚Üí typecheck ‚Üí build (in that order)
- **Node version**: 20.x
- **Environment**: Production-like with dummy secrets for CI safety

### Lighthouse CI Workflow  
- **Triggers**: Pull Requests only
- **Features**:
  - Automatic PR comments with metrics
  - Artifacts uploaded (HTML/JSON reports)
  - Links to temporary public storage for detailed reports
  - Will fail PR if thresholds not met

## Environment Variables

Both workflows use safe CI environment variables:
- `NODE_ENV=production`
- `NEXT_PUBLIC_URL=http://localhost:3000`
- `SENTRY_DSN=""` (disabled for CI)
- `STRIPE_API_VERSION="2025-07-30.basil"`
- `STRIPE_SECRET_KEY="sk_test_dummy"`
- `NEXTAUTH_SECRET="dummysecretforci"`

## Branch Protection (Recommended Setup)

To enable these as required checks:

1. Go to repository Settings ‚Üí Branches
2. Add branch protection rule for `main`
3. Require status checks to pass:
   - `CI / build`
   - `Lighthouse CI / lighthouse`

## Troubleshooting

### Common Issues

1. **Server not starting**: Check build errors first with `npm run build`
2. **LHCI hanging**: Ensure server is accessible at `http://localhost:3000`
3. **Permission errors**: Lighthouse CI workflow has `pull-requests: write` permission for PR comments

### Local Development Tips

- Always run `npm run build` before testing LHCI locally
- Use `npx wait-on http://localhost:3000` to ensure server readiness
- Check `.lighthouseci/` directory for local HTML reports


  üìÑ e2e.md

============================================================
FILE: docs\e2e.md
============================================================
# E2E Testing com Playwright

Este documento descreve como executar e manter os testes end-to-end (E2E) do projeto INSANYCK usando Playwright.

## üéØ Objetivo

Os testes E2E garantem que as funcionalidades cr√≠ticas da aplica√ß√£o funcionem corretamente:

- **Smoke tests**: Verificam que as rotas principais carregam sem erro
- **Visual regression**: Detectam mudan√ßas indesejadas na UI atrav√©s de snapshots
- **Integra√ß√£o**: Testam fluxos completos como navega√ß√£o e intera√ß√µes b√°sicas

## üèóÔ∏è Estrutura

```
tests/e2e/
‚îú‚îÄ‚îÄ __screenshots__/          # Snapshots visuais (baseline)
‚îú‚îÄ‚îÄ home.spec.ts             # Testes da p√°gina inicial
‚îú‚îÄ‚îÄ sacola.spec.ts           # Testes da p√°gina do carrinho
‚îú‚îÄ‚îÄ favoritos.spec.ts        # Testes da lista de desejos
‚îú‚îÄ‚îÄ pdp.spec.ts              # Testes da p√°gina de produto
‚îî‚îÄ‚îÄ checkout.spec.ts         # Testes do checkout
```

## üöÄ Como executar

### Desenvolvimento local

1. **Build e start da aplica√ß√£o:**
   ```bash
   npm run build
   npm run start
   ```

2. **Executar os testes:**
   ```bash
   # Com servidor j√° rodando
   BASE_URL=http://localhost:3000 npm run test:e2e
   
   # Ou deixar o Playwright gerenciar o servidor (modo dev)
   npm run test:e2e
   ```

3. **Executar com interface gr√°fica:**
   ```bash
   npx playwright test --ui
   ```

### Comandos √∫teis

```bash
# Executar testes espec√≠ficos
npx playwright test home.spec.ts

# Executar em modo debug
npx playwright test --debug

# Executar com relat√≥rio HTML
npm run test:e2e:ci
npx playwright show-report

# Ver traces de execu√ß√£o
npx playwright show-trace test-results/[pasta-do-teste]/trace.zip
```

## üì∏ Visual Snapshots

### Criando baseline inicial

‚ö†Ô∏è **Execute em `main` para criar a baseline oficial:**

```bash
# 1. Certifique-se de estar em main
git checkout main
git pull origin main

# 2. Gere os snapshots de refer√™ncia
npm run build && npm run start &
BASE_URL=http://localhost:3000 npm run test:e2e:update

# 3. Commit da baseline
git add tests/e2e/__screenshots__
git commit -m "test: baseline visual snapshots"
git push
```

### Atualizando snapshots

Quando mudan√ßas intencionais na UI s√£o feitas:

```bash
# Atualizar todos os snapshots
npm run test:e2e:update

# Atualizar snapshots espec√≠ficos
npx playwright test home.spec.ts --update-snapshots

# Revisar diferen√ßas antes de atualizar
npx playwright test --reporter=html
npx playwright show-report
```

## üîß Configura√ß√£o

### playwright.config.ts

- **Timeout:** 30s por teste, 5s para expects
- **Retries:** 2x no CI, 0x localmente  
- **Browser:** Chrome desktop (1366x900)
- **Snapshots:** Threshold de 0.3% para toler√¢ncia
- **Traces/Videos:** Apenas em falhas

### Vari√°veis de ambiente

Para desenvolvimento local, definir em `.env.local`:

```bash
BASE_URL=http://localhost:3000
NODE_ENV=production
```

## üîç Debugging

### Traces e videos

Quando um teste falha, s√£o gerados:

- **Trace:** `test-results/[teste]/trace.zip`
- **Video:** `test-results/[teste]/video.webm` 
- **Screenshots:** `test-results/[teste]/test-failed-1.png`

```bash
# Ver trace interativo
npx playwright show-trace test-results/home-Home-Page-should-load-home-page-successfully-chromium/trace.zip
```

### Modo debug

```bash
# Abre browser com DevTools
npx playwright test --debug home.spec.ts

# Debug de um teste espec√≠fico
npx playwright test --debug --grep "should load home page"
```

## üé≠ CI/CD

### GitHub Actions

Os testes rodam automaticamente:

- **Trigger:** PRs para `main` e pushes para `main`
- **Ambiente:** Ubuntu + Node 20 + Chromium
- **Artifacts:** HTML report e traces/videos em caso de falha

### Estrat√©gia de falhas

1. **Flakiness:** Max 2 retries no CI
2. **Timeout:** 20min total por job
3. **Artifacts:** Mantidos por 7 dias
4. **Reports:** HTML sempre gerado, mesmo em sucesso

## üìä Interpretando resultados

### Status de sa√≠da

- ‚úÖ **0:** Todos os testes passaram
- ‚ùå **1:** H√° testes falhando
- ‚ö†Ô∏è **2:** Alguns testes foram skipados

### Relat√≥rio HTML

```bash
npx playwright show-report
```

Mostra:
- Timeline de execu√ß√£o
- Screenshots de falhas
- Compara√ß√£o de visual diffs
- Traces interativos

## üõ†Ô∏è Manuten√ß√£o

### Quando atualizar snapshots

- ‚úÖ Mudan√ßas intencionais de design/layout
- ‚úÖ Corre√ß√µes de bugs visuais  
- ‚úÖ Novos componentes ou features
- ‚ùå Diferen√ßas causadas por fonts/rendering do sistema
- ‚ùå Pequenas varia√ß√µes de pixels sem impacto

### Pol√≠tica de threshold

- **0.2%:** Componentes est√°veis (header, footer)
- **0.3%:** Componentes com anima√ß√µes/3D
- **0.5%:** P√°ginas complexas (PDP, checkout)

Ajustar em `playwright.config.ts` conforme necessidade.

### Troubleshooting comum

**"Snapshot comparison failed":**
```bash
# Ver a diferen√ßa
npx playwright test --reporter=html
# Se leg√≠tima, atualizar
npx playwright test --update-snapshots
```

**"Timeout waiting for element":**
- Aumentar `actionTimeout` para elementos lentos
- Usar `page.waitForLoadState('networkidle')` para SPAs
- Adicionar `data-testid` se seletores forem inst√°veis

**"Browser not found":**
```bash
npx playwright install chromium
```

## üîó Links √∫teis

- [Playwright Docs](https://playwright.dev/)
- [Visual Comparisons](https://playwright.dev/docs/test-screenshots)
- [Debugging Guide](https://playwright.dev/docs/debug)
- [CI/CD Best Practices](https://playwright.dev/docs/ci)


  üìÑ quality-gates.md

============================================================
FILE: docs\quality-gates.md
============================================================
# Quality Gates Documentation

## Overview

This document explains the quality gates implemented in the INSANYCK project to ensure code quality, performance, and reliability through automated CI/CD pipelines.

## CI Workflow (`.github/workflows/ci.yml`)

### What It Validates

The CI workflow runs on every push and pull request and validates:

1. **Lint Check** (`npm run lint`)
   - ESLint rules compliance
   - Code style consistency  
   - Import/export validation
   - React Hooks rules
   - TypeScript-aware linting

2. **Type Check** (`npm run typecheck`)
   - TypeScript compilation without emit
   - Type safety validation
   - Interface compliance
   - Generic constraints

3. **Build Process** (`npm run build`)
   - Next.js production build
   - Static page generation (SSG)
   - Bundle optimization
   - Asset processing and optimization

### Failure Handling

When the CI workflow fails:
- **Artifacts**: Build trace files (`.next/trace`) are uploaded as `next-trace` artifact
- **Debugging**: Download artifacts from the failed workflow to analyze build issues
- **Environment**: Safe CI environment with dummy secrets prevents external service calls

## Lighthouse CI Workflow (`.github/workflows/lighthouse.yml`)

### What It Validates

The Lighthouse CI workflow runs on pull requests and measures:

1. **Performance Metrics**
   - First Contentful Paint (FCP)
   - Largest Contentful Paint (LCP)
   - Speed Index
   - Time to Interactive (TTI)
   - Total Blocking Time (TBT)
   - Cumulative Layout Shift (CLS)

2. **Accessibility Audits**
   - ARIA attributes
   - Color contrast ratios
   - Keyboard navigation
   - Screen reader compatibility
   - Form labels and semantics

3. **Best Practices**
   - HTTPS usage
   - Security headers
   - Image optimization
   - JavaScript best practices
   - Modern web standards compliance

4. **SEO Checks**
   - Meta tags presence
   - Structured data
   - Mobile friendliness
   - Crawlability
   - Content quality indicators

### Tested URLs

The workflow tests these key pages (2 runs each for stability):
- `/pt` - Homepage (Portuguese)
- `/pt/sacola` - Shopping bag page
- `/pt/checkout` - Checkout flow
- `/pt/favoritos` - Favorites/wishlist page  
- `/pt/produto/slug-exemplo` - Product detail page (may 404, non-blocking)

### Thresholds & Policy

**Current Thresholds (Conservative)**:
- Performance: ‚â• 80%
- Accessibility: ‚â• 90%  
- Best Practices: ‚â• 90%
- SEO: ‚â• 90%

**Non-Regression Policy**:
- These thresholds MUST NOT be reduced without proper justification
- Evidence-based improvements may increase thresholds
- Any threshold changes require documentation and team approval

### PR Comments

The Lighthouse CI automatically posts comments on pull requests with:
- Score comparison vs. base branch
- Detailed metrics for each category
- Links to full HTML reports via temporary public storage
- Specific recommendations for improvements

### Failure Artifacts

When Lighthouse CI fails:
- **Always**: All Lighthouse reports uploaded as `lighthouse-ci-results`
- **On Failure**: Detailed failure reports uploaded as `lighthouse-failure-reports`
- **Reports**: HTML and JSON formats for analysis
- **Build Trace**: `.next/trace` files if build fails during lighthouse setup

## Running Quality Gates Locally

### Prerequisites
```bash
# Ensure dependencies are installed
npm ci
```

### CI Checks Locally

```bash
# Run all CI checks in sequence
npm run lint          # Check code style and rules
npm run typecheck     # Validate TypeScript types
npm run build         # Create production build
```

### Lighthouse CI Locally

**Method 1: Manual Setup**
```bash
# Terminal 1: Build and start server
npm run build
npm run start

# Terminal 2: Wait for server and run LHCI
npx wait-on http://localhost:3000
npx lhci autorun
```

**Method 2: Using npm script**
```bash
# Automated approach (recommended)
npm run lhci:ci
```

**Viewing Local Reports**:
- HTML reports: `.lighthouseci/lhci_reports/*.html`
- JSON data: `.lighthouseci/lhci_reports/*.json`
- Summary: Console output shows pass/fail status

## Troubleshooting

### Common CI Failures

1. **Lint Errors**
   ```bash
   npm run lint -- --fix  # Auto-fix simple issues
   ```

2. **Type Errors**
   ```bash
   npm run typecheck  # See detailed type errors
   # Fix types manually - no auto-fix available
   ```

3. **Build Failures**
   ```bash
   npm run clean && npm run build  # Clean rebuild
   # Check .next/trace files in artifacts for details
   ```

### Common Lighthouse CI Failures

1. **Performance Issues**
   - Check bundle size: `npm run build` and review build output
   - Analyze unused JavaScript with build trace
   - Review image optimization and lazy loading

2. **Accessibility Issues**
   - Validate ARIA attributes and roles
   - Check color contrast ratios
   - Ensure keyboard navigation works
   - Add alt text to images

3. **Flaky Results**
   - Network conditions can affect scores
   - Re-run the workflow if scores are borderline
   - Consider increasing `numberOfRuns` in `lighthouserc.json` from 2 to 3

### Debug Artifacts

**Download CI Artifacts**:
1. Go to failed workflow in GitHub Actions
2. Scroll to "Artifacts" section
3. Download `next-trace` for build issues
4. Download `lighthouse-failure-reports` for performance issues

**Analyzing Build Traces**:
- Open `.next/trace` files with Chrome DevTools Performance tab
- Look for long tasks and optimization opportunities

## Branch Protection Setup (GitHub UI)

**Recommended Settings**:
1. Go to Repository Settings ‚Üí Branches
2. Add protection rule for `main` branch
3. Enable required status checks:
   - `CI / build` 
   - `Lighthouse CI / lighthouse`
4. Enable "Require branches to be up to date"
5. Enable "Include administrators" for consistency

**Status Check Names**:
- CI workflow: `CI / build`  
- Lighthouse workflow: `Lighthouse CI / lighthouse`

These checks will block merging if quality gates fail.

## Environment Variables

**CI-Safe Environment**:
Both workflows use production-like settings with safe dummy values:

```yaml
NODE_ENV: production
NEXT_PUBLIC_URL: http://localhost:3000
NEXT_TELEMETRY_DISABLED: "1"      # Disable Next.js telemetry
SENTRY_DSN: ""                    # Disable error reporting
NEXT_PUBLIC_SENTRY_DSN: ""        # Disable client-side error reporting  
SENTRY_ENVIRONMENT: "ci"          # Mark as CI environment
STRIPE_API_VERSION: "2025-07-30.basil"  # Fixed API version
STRIPE_SECRET_KEY: "sk_test_dummy"       # Safe dummy key
NEXTAUTH_SECRET: "dummysecretforci"      # Safe dummy secret
```

## Performance Optimizations

**Concurrency Control**:
- Both workflows use `cancel-in-progress: true`
- This cancels outdated runs when new commits are pushed
- Saves CI minutes and provides faster feedback

**Caching**:
- Node.js setup uses `cache: 'npm'` for dependency caching
- Reduces install time from ~30s to ~5s on cache hit

**Parallel Execution**:
- CI steps run sequentially (lint ‚Üí typecheck ‚Üí build)
- Multiple PR workflows can run concurrently
- Lighthouse runs only on PR (not push) to save resources

## Maintenance

### Regular Tasks

- **Monthly**: Review Lighthouse thresholds for opportunities to improve
- **Per release**: Validate CI passes on main branch
- **When performance degrades**: Analyze build traces and lighthouse reports

### Updating Dependencies

When updating CI-related dependencies:
- `@lhci/cli`: Update in `devDependencies`  
- `actions/*`: Update workflow action versions
- `treosh/lighthouse-ci-action`: Update lighthouse action version

Test locally before merging dependency updates.

### Threshold Adjustments

**Before reducing thresholds**:
1. Document the reason (external factors, intentional trade-offs)
2. Get team approval
3. Update this documentation
4. Consider temporary reduction with timeline to restore

**For increasing thresholds**:
1. Ensure consistent passing over multiple PRs
2. Gradually increase (5% increments)
3. Monitor for false failures after adjustment


  üìÑ spec-hero.md

============================================================
FILE: docs\spec-hero.md
============================================================
# INSANYCK ‚Äî Spec do Wordmark (TEMP)

> Tempor√°rio: SVG com `<text>` (Inter, 170px, letter-spacing: 20 unidades, baseline Y=170).  
> Quando recebermos o vetor final (um `<path>` √∫nico com `fill="currentColor"`), substituir `public/brand/logo.svg` e manter as dimens√µes.

- viewBox: `0 0 1200 240`
- altura visual usada no Navbar: **96px** (`size="sm"`)
- cor padr√£o: `currentColor` (herda do CSS)
- variantes: `primary` (currentColor), `mono` (#fff), `outline` (stroke 8px)

## Overlay / verifica√ß√£o
1. Abra `ref-hero-home.png` numa camada base.
2. Sobreponha `logo.svg` rasterizado a **96px**: alinhamento perfeito com kerning de 20.
3. Eventuais micro-deltas (< 1px) v√™m da engine de texto; ser√£o eliminadas ao trocar por `<path>`.




  üìÑ spec-logo.md

============================================================
FILE: docs\spec-logo.md
============================================================
# Hero (Home) ‚Äî Medidas 1:1

- Container: max-width 1200, padding lateral 24
- H1: `INSANYCK` ‚Äî 120px, uppercase, tracking 0.25em, weight 600, color `#ffffffE6`
- Manifesto: 28px, leading 1.4, color `#ffffffCC`, quebra em duas linhas
- CTA prim√°rio: 48px altura, bg branco, texto preto, raio 12, sombra leve
- CTA ghost: 48px altura, border 1px `#ffffff33`, hover `bg-white/5`
- "Role para explorar": texto 14‚Äì16px `#ffffffB2`
- Carrossel: cards 220√ó140, `bg #0f0f10`, border `#ffffff1A`, raio 16, imagem com overlay gradiente
- Halos: `radial-gradient` com 6‚Äì8% de branco no miolo, m√°scara pra cair para 0

# Hero (Produto)
- T√≠tulo: 64px, semibold
- Subt√≠tulo: 20px `#ffffffCC` com separador `‚Ä¢`
- 3D: canvas 520px de altura, fundo `#0a0a0a`, pedestal 1.6 de raio / 0.18 de altura
- Variantes: Frente/Verso/Detalhes ‚Üí rota√ß√£o Y: 0 / œÄ / œÄ/6
- OrbitControls: sem pan/zoom, minPolar ~ 75¬∞, max ~ 90¬∞
- ‚Äú60 FPS‚Äù: canto superior direito, 12px `#ffffff99`



üìÑ lighthouserc.json

============================================================
FILE: lighthouserc.json
============================================================
{
  "ci": {
    "collect": {
      "startServerCommand": "npm run start",
      "url": [
        "http://localhost:3000/pt",
        "http://localhost:3000/pt/sacola",
        "http://localhost:3000/pt/checkout",
        "http://localhost:3000/pt/favoritos",
        "http://localhost:3000/pt/produto/slug-exemplo"
      ],
      "numberOfRuns": 2,
      "settings": {
        "preset": "desktop",
        "throttlingMethod": "devtools",
        "formFactor": "desktop"
      }
    },
    "upload": {
      "target": "temporary-public-storage"
    },
    "assert": {
      "assertions": {
        "categories:performance": [
          ">=",
          0.8
        ],
        "categories:accessibility": [
          ">=",
          0.9
        ],
        "categories:best-practices": [
          ">=",
          0.9
        ],
        "categories:seo": [
          ">=",
          0.9
        ]
      }
    }
  }
}


üìÑ next-env.d.ts

============================================================
FILE: next-env.d.ts
============================================================
/// <reference types="next" />
/// <reference types="next/image-types/global" />
/// <reference path="./.next/types/routes.d.ts" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/pages/api-reference/config/typescript for more information.



üìÑ next-i18next.config.js

============================================================
FILE: next-i18next.config.js
============================================================
// INSANYCK STEP 4
// next-i18next configuration centralizada para Pages Router (SSR/SSG)
const path = require('path');

const config = {
  // Parte lida pelo Next (routing / locale prefix)
  i18n: {
    defaultLocale: 'pt',
    locales: ['pt', 'en'],
  },

  // Parte lida pelo i18next/next-i18next
  // Namespaces e op√ß√µes de fallback
  defaultNS: 'common',
  ns: ['common', 'nav', 'home', 'product'],
  fallbackLng: 'en', // EN √© o fallback global
  reloadOnPrerender: process.env.NODE_ENV === 'development',
  localePath: path.resolve('./public/locales'),
  returnNull: false, // evita retornar null em chaves n√£o encontradas
};

module.exports = config;



üìÑ next.config.ts

============================================================
FILE: next.config.ts
============================================================
// INSANYCK STEP 9 ‚Äî withPWA + i18n (next-i18next) + NetworkOnly para APIs sens√≠veis
import withPWA from "@ducanh2912/next-pwa";
import type { NextConfig } from "next";
import type { RuntimeCaching } from "workbox-build";

// Reaproveita sua config real do next-i18next (n√£o inline)
const { i18n } = require("./next-i18next.config.js");

const isProd = process.env.NODE_ENV === "production";

const runtimeCaching: RuntimeCaching[] = [
  // HTML
  {
    urlPattern: ({ request }: any) => request.mode === "navigate",
    handler: "NetworkFirst" as const,
    options: {
      cacheName: "html",
      networkTimeoutSeconds: 3,
      expiration: { maxEntries: 50, maxAgeSeconds: 60 * 60 * 24 },
    },
  },
  // APIs sens√≠veis ‚Äî NetworkOnly
  { urlPattern: /^\/api\/auth\/?.*/i, handler: "NetworkOnly" as const },
  { urlPattern: /^\/api\/account\/?.*/i, handler: "NetworkOnly" as const },
  { urlPattern: /^\/api\/stripe\/?.*/i, handler: "NetworkOnly" as const },
  // INSANYCK STEP 10 ‚Äî Admin APIs tamb√©m em NetworkOnly
  { urlPattern: /^\/api\/admin\/?.*/i, handler: "NetworkOnly" as const },

  // Imagens
  {
    urlPattern: ({ request }: any) => request.destination === "image",
    handler: "CacheFirst" as const,
    options: {
      cacheName: "images",
      expiration: { maxEntries: 200, maxAgeSeconds: 60 * 60 * 24 * 30 },
    },
  },
  // 3D/Fontes
  {
    urlPattern: ({ url }: any) => url.pathname.match(/\.(glb|gltf|hdr|bin|woff2?|ttf)$/),
    handler: "StaleWhileRevalidate" as const,
    options: { cacheName: "assets-3d-fonts" },
  },
  // Outros GET
  {
    urlPattern: ({ request }: any) => request.method === "GET",
    handler: "StaleWhileRevalidate" as const,
    options: { cacheName: "misc" },
  },
];

const allowTsErrors = process.env.INSANYCK_ALLOW_TS_ERRORS === "1";
const baseConfig: NextConfig = {
  reactStrictMode: true,
  images: { remotePatterns: [] },
  i18n,
  // Mant√©m o build fluindo em dev/preview; travamos no CI/produ√ß√£o quando quisermos
  typescript: { ignoreBuildErrors: allowTsErrors || !isProd },
  eslint: { ignoreDuringBuilds: allowTsErrors || !isProd },
};

export default withPWA({
  dest: "public",
  register: true,
  skipWaiting: true,
  disable: !isProd,
  cacheOnFrontEndNav: true,
  workboxOptions: { runtimeCaching, navigateFallback: "/offline.html" },
})(baseConfig);



üìÑ OPERATIONS_LOG.md

============================================================
FILE: OPERATIONS_LOG.md
============================================================
# INSANYCK ‚Äî Operations Log
# Um bloco por STEP (o Claude L√ä isto)

## STEP <X> ‚Äî <t√≠tulo> ‚Äî <data>
- O que foi feito:
- Arquivos tocados:
- Riscos e mitiga√ß√£o:
- Resultados typecheck/build:
- Pend√™ncias / pr√≥ximos passos:



üìÑ package-lock.json

============================================================
FILE: package-lock.json
============================================================
{
  "name": "insanyck-luxury",
  "version": "0.1.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "insanyck-luxury",
      "version": "0.1.0",
      "hasInstallScript": true,
      "dependencies": {
        "@ducanh2912/next-pwa": "^10.2.9",
        "@hookform/resolvers": "^5.2.1",
        "@next-auth/prisma-adapter": "^1.0.7",
        "@prisma/client": "^6.13.0",
        "@react-three/drei": "9.112.0",
        "@react-three/fiber": "^9.3.0",
        "@react-three/xr": "^6.6.20",
        "@stripe/react-stripe-js": "^3.9.0",
        "@stripe/stripe-js": "^7.8.0",
        "@tanstack/react-virtual": "^3.13.12",
        "@tensorflow/tfjs": "^4.22.0",
        "@tensorflow/tfjs-vis": "^1.1.0",
        "@upstash/redis": "^1.35.3",
        "bcrypt": "^6.0.0",
        "framer-motion": "^12.23.12",
        "i18next": "^25.3.4",
        "i18next-browser-languagedetector": "^8.2.0",
        "idb-keyval": "^6.2.2",
        "lucide-react": "^0.539.0",
        "micro": "^10.0.1",
        "mongodb": "^6.18.0",
        "mongoose": "^8.17.0",
        "next": "^15.4.5",
        "next-auth": "^4.24.11",
        "next-i18next": "^15.4.2",
        "next-seo": "^6.8.0",
        "pino": "^9.7.0",
        "react": "^19.1.0",
        "react-dom": "^19.1.0",
        "react-hook-form": "^7.62.0",
        "react-i18next": "^15.6.1",
        "react-toastify": "^11.0.5",
        "react-virtuoso": "^4.13.0",
        "react-window": "^1.8.11",
        "stripe": "^18.4.0",
        "swr": "^2.3.4",
        "three": "^0.179.1",
        "workbox-window": "^7.3.0",
        "zod": "^4.0.17",
        "zustand": "^5.0.7"
      },
      "devDependencies": {
        "@axe-core/playwright": "^4.10.2",
        "@lhci/cli": "^0.14.0",
        "@next/bundle-analyzer": "^15.4.6",
        "@playwright/test": "^1.55.0",
        "@react-email/components": "^0.5.3",
        "@tailwindcss/postcss": "^4",
        "@types/micro": "^7.3.7",
        "@types/node": "^20",
        "@types/pino": "^7.0.4",
        "@types/react": "^19.1.9",
        "@types/react-dom": "^19.1.7",
        "@types/react-window": "^1.8.8",
        "eslint": "9.34.0",
        "eslint-config-next": "15.5.2",
        "playwright": "^1.55.0",
        "prisma": "^6.13.0",
        "sharp": "^0.34.3",
        "tailwindcss": "^4",
        "tsx": "^4.20.4",
        "typescript": "5.5.4"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@axe-core/playwright": {
      "version": "4.10.2",
      "resolved": "https://registry.npmjs.org/@axe-core/playwright/-/playwright-4.10.2.tgz",
      "integrity": "sha512-6/b5BJjG6hDaRNtgzLIfKr5DfwyiLHO4+ByTLB0cJgWSM8Ll7KqtdblIS6bEkwSF642/Ex91vNqIl3GLXGlceg==",
      "dev": true,
      "license": "MPL-2.0",
      "dependencies": {
        "axe-core": "~4.10.3"
      },
      "peerDependencies": {
        "playwright-core": ">= 1.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.27.1",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.1.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz",
      "integrity": "sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.3.tgz",
      "integrity": "sha512-yDBHV9kQNcr2/sUr9jghVyz9C3Y5G2zUM2H2lo+9mKv4sFgbA8s8Z9t8D1jiTkGoO/NoIfKMyKWr4s6CN23ZwQ==",
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-module-transforms": "^7.28.3",
        "@babel/helpers": "^7.28.3",
        "@babel/parser": "^7.28.3",
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.28.3",
        "@babel/types": "^7.28.2",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/core/node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@babel/core/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.3.tgz",
      "integrity": "sha512-3lSpxGgvnmZznmBkCRnVREPUFJv2wrv9iAoFDvADJc0ypmdOxdUtcLeBgBJ6zE0PMeTKnxeQzyk0xTBq4Ep7zw==",
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.28.3",
        "@babel/types": "^7.28.2",
        "@jridgewell/gen-mapping": "^0.3.12",
        "@jridgewell/trace-mapping": "^0.3.28",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-annotate-as-pure": {
      "version": "7.27.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.27.3.tgz",
      "integrity": "sha512-fXSwMQqitTGeHLBC08Eq5yXz2m37E4pJX1qAU1+2cNedz/ifv/bVXft90VeSav5nFO61EcNgwr0aJxbyPaWBPg==",
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.3"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.27.2",
        "@babel/helper-validator-option": "^7.27.1",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-compilation-targets/node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "license": "ISC"
    },
    "node_modules/@babel/helper-create-class-features-plugin": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.28.3.tgz",
      "integrity": "sha512-V9f6ZFIYSLNEbuGA/92uOvYsGCJNsuA8ESZ4ldc09bWk/j8H8TKiPw8Mk1eG6olpnO0ALHJmYfZvF4MEE4gajg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.3",
        "@babel/helper-member-expression-to-functions": "^7.27.1",
        "@babel/helper-optimise-call-expression": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1",
        "@babel/traverse": "^7.28.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-create-regexp-features-plugin": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.27.1.tgz",
      "integrity": "sha512-uVDC72XVf8UbrH5qQTc18Agb8emwjTiZrQE11Nv3CuBEZmVvTwwE9CBUEvHku06gQCAyYf8Nv6ja1IN+6LMbxQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "regexpu-core": "^6.2.0",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-regexp-features-plugin/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/helper-define-polyfill-provider": {
      "version": "0.6.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.6.5.tgz",
      "integrity": "sha512-uJnGFcPsWQK8fvjgGP5LZUZZsYGIoPeRjSF5PGwrelYgq7Q15/Ft9NGFp1zglwgIv//W0uG4BevRuSJRyylZPg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "debug": "^4.4.1",
        "lodash.debounce": "^4.0.8",
        "resolve": "^1.22.10"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/@babel/helper-globals": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-member-expression-to-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.27.1.tgz",
      "integrity": "sha512-E5chM8eWjTp/aNoVpcbfM7mLxu9XGLWYise2eBKGQomAk/Mb4XoxyqXTZbuTohbsl8EKqdlMhnDI2CCLfcs9wA==",
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.28.3.tgz",
      "integrity": "sha512-gytXUbs8k2sXS9PnQptz5o0QnpLL51SwASIORY6XaBKF88nsOT0Zw9szLqlSGQDP/4TljBAD5y98p2U1fqkdsw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-optimise-call-expression": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.27.1.tgz",
      "integrity": "sha512-URMGH08NzYFhubNSGJrpUEphGKQwMQYBySzat5cAByY1/YgIRkULnIy3tAMeszlL/so2HbeilYloUmSpd7GdVw==",
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-remap-async-to-generator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.27.1.tgz",
      "integrity": "sha512-7fiA521aVw8lSPeI4ZOD3vRFkoqkJcS+z4hFo82bFSH/2tNd6eJ5qCVMS5OzDmZh/kaHQeBaeyxK6wljcPtveA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "@babel/helper-wrap-function": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-replace-supers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.27.1.tgz",
      "integrity": "sha512-7EHz6qDZc8RYS5ElPoShMheWvEgERonFCs7IAonWLLUTXW59DP14bCZt89/GKyreYn8g3S83m21FelHKbeDCKA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-member-expression-to-functions": "^7.27.1",
        "@babel/helper-optimise-call-expression": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-skip-transparent-expression-wrappers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.27.1.tgz",
      "integrity": "sha512-Tub4ZKEXqbPjXgWLl2+3JpQAYBJ8+ikpQ2Ocj/q/r0LwE3UhENh7EUabyHjz2kCEsrRY83ew2DQdHluuiDQFzg==",
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-wrap-function": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.28.3.tgz",
      "integrity": "sha512-zdf983tNfLZFletc0RRXYrHrucBEg95NIFMkn6K9dbeMYnsgHaSBGcQqdsCSStG2PYwRre0Qc2NNSCXbG+xc6g==",
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.28.3",
        "@babel/types": "^7.28.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.3.tgz",
      "integrity": "sha512-PTNtvUQihsAsDHMOP5pfobP8C6CM4JWXmP8DrEIt46c3r2bf87Ua1zoqevsMo9g+tWDwgWrFP5EIxuBx5RudAw==",
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.3.tgz",
      "integrity": "sha512-7+Ey1mAgYqFAx2h0RuoxcQT5+MlG3GTV0TQrgr7/ZliKsm/MNDxVVutlWaziMq7wJNAz8MTqz55XLpWvva6StA==",
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.28.2"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-firefox-class-in-computed-class-key": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-firefox-class-in-computed-class-key/-/plugin-bugfix-firefox-class-in-computed-class-key-7.27.1.tgz",
      "integrity": "sha512-QPG3C9cCVRQLxAVwmefEmwdTanECuUBMQZ/ym5kiw3XKCGA7qkuQLcjWWHcrD/GKbn/WmJwaezfuuAOcyKlRPA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-safari-class-field-initializer-scope": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-class-field-initializer-scope/-/plugin-bugfix-safari-class-field-initializer-scope-7.27.1.tgz",
      "integrity": "sha512-qNeq3bCKnGgLkEXUuFry6dPlGfCdQNZbn7yUAPCInwAJHMU7THJfrBSozkcWq5sNM6RcF3S8XyQL2A52KNR9IA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.27.1.tgz",
      "integrity": "sha512-g4L7OYun04N1WyqMNjldFwlfPCLVkgB54A/YCXICZYBsvJJE3kByKv9c9+R/nAfmIfjl2rKYLNyMHboYbZaWaA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.27.1.tgz",
      "integrity": "sha512-oO02gcONcD5O1iTLi/6frMJBIwWEHceWGSGqrpCmEL8nogiS6J9PBlE48CaK20/Jx1LuRml9aDftLgdjXT8+Cw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1",
        "@babel/plugin-transform-optional-chaining": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.13.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly/-/plugin-bugfix-v8-static-class-fields-redefine-readonly-7.28.3.tgz",
      "integrity": "sha512-b6YTX108evsvE4YgWyQ921ZAFFQm3Bn+CA3+ZXlNVnPhx+UfsVURoPjfGAPCjBgrqo30yX/C2nZGX96DxvR9Iw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-proposal-private-property-in-object": {
      "version": "7.21.0-placeholder-for-preset-env.2",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0-placeholder-for-preset-env.2.tgz",
      "integrity": "sha512-SOSkfJDddaM7mak6cPEpswyTRnuRltl429hMraQEglW+OkovnCzsiszTmsrlY//qLFjCpQDFRvjdm2wA5pPm9w==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-assertions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.27.1.tgz",
      "integrity": "sha512-UT/Jrhw57xg4ILHLFnzFpPDlMbcdEicaAtjPQpbj9wa8T4r5KVWCimHcL/460g8Ht0DMxDyjsLgiWSkVjnwPFg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-attributes": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.27.1.tgz",
      "integrity": "sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-unicode-sets-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-unicode-sets-regex/-/plugin-syntax-unicode-sets-regex-7.18.6.tgz",
      "integrity": "sha512-727YkEAPwSIQTv5im8QHz3upqp92JTWhidIC81Tdx4VJYIte/VndKf1qKrfnnhPLiPghStWfvC/iFaMCQu7Nqg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-arrow-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.27.1.tgz",
      "integrity": "sha512-8Z4TGic6xW70FKThA5HYEKKyBpOOsucTOD1DjU3fZxDg+K3zBJcXMFnt/4yQiZnf5+MiOMSXQ9PaEK/Ilh1DeA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-generator-functions": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-generator-functions/-/plugin-transform-async-generator-functions-7.28.0.tgz",
      "integrity": "sha512-BEOdvX4+M765icNPZeidyADIvQ1m1gmunXufXxvRESy/jNNyfovIqUyE7MVgGBjWktCoJlzvFA1To2O4ymIO3Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-remap-async-to-generator": "^7.27.1",
        "@babel/traverse": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-to-generator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.27.1.tgz",
      "integrity": "sha512-NREkZsZVJS4xmTr8qzE5y8AfIPqsdQfRuUiLRTEzb7Qii8iFWCyDKaUV2c0rCuh4ljDZ98ALHP/PetiBV2nddA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-remap-async-to-generator": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoped-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.27.1.tgz",
      "integrity": "sha512-cnqkuOtZLapWYZUYM5rVIdv1nXYuFVIltZ6ZJ7nIj585QsjKM5dhL2Fu/lICXZ1OyIAFc7Qy+bvDAtTXqGrlhg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoping": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.28.0.tgz",
      "integrity": "sha512-gKKnwjpdx5sER/wl0WN0efUBFzF/56YZO0RJrSYP4CljXnP31ByY7fol89AzomdlLNzI36AvOTmYHsnZTCkq8Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-class-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-properties/-/plugin-transform-class-properties-7.27.1.tgz",
      "integrity": "sha512-D0VcalChDMtuRvJIu3U/fwWjf8ZMykz5iZsg77Nuj821vCKI3zCyRLwRdWbsuJ/uRwZhZ002QtCqIkwC/ZkvbA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-class-static-block": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-static-block/-/plugin-transform-class-static-block-7.28.3.tgz",
      "integrity": "sha512-LtPXlBbRoc4Njl/oh1CeD/3jC+atytbnf/UqLoqTDcEYGUPj022+rvfkbDYieUrSj3CaV4yHDByPE+T2HwfsJg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.28.3",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.12.0"
      }
    },
    "node_modules/@babel/plugin-transform-classes": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.28.3.tgz",
      "integrity": "sha512-DoEWC5SuxuARF2KdKmGUq3ghfPMO6ZzR12Dnp5gubwbeWJo4dbNWXJPVlwvh4Zlq6Z7YVvL8VFxeSOJgjsx4Sg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-globals": "^7.28.0",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-computed-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.27.1.tgz",
      "integrity": "sha512-lj9PGWvMTVksbWiDT2tW68zGS/cyo4AkZ/QTp0sQT0mjPopCmrSkzxeXkznjqBxzDI6TclZhOJbBmbBLjuOZUw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/template": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-destructuring": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.28.0.tgz",
      "integrity": "sha512-v1nrSMBiKcodhsyJ4Gf+Z0U/yawmJDBOTpEB3mcQY52r9RIyPneGyAS/yM6seP/8I+mWI3elOMtT5dB8GJVs+A==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-dotall-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.27.1.tgz",
      "integrity": "sha512-gEbkDVGRvjj7+T1ivxrfgygpT7GUd4vmODtYpbs0gZATdkX8/iSnOtZSxiZnsgm1YjTgjI6VKBGSJJevkrclzw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-duplicate-keys": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.27.1.tgz",
      "integrity": "sha512-MTyJk98sHvSs+cvZ4nOauwTTG1JeonDjSGvGGUNHreGQns+Mpt6WX/dVzWBHgg+dYZhkC4X+zTDfkTU+Vy9y7Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-duplicate-named-capturing-groups-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-named-capturing-groups-regex/-/plugin-transform-duplicate-named-capturing-groups-regex-7.27.1.tgz",
      "integrity": "sha512-hkGcueTEzuhB30B3eJCbCYeCaaEQOmQR0AdvzpD4LoN0GXMWzzGSuRrxR2xTnCrvNbVwK9N6/jQ92GSLfiZWoQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-dynamic-import": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dynamic-import/-/plugin-transform-dynamic-import-7.27.1.tgz",
      "integrity": "sha512-MHzkWQcEmjzzVW9j2q8LGjwGWpG2mjwaaB0BNQwst3FIjqsg8Ct/mIZlvSPJvfi9y2AC8mi/ktxbFVL9pZ1I4A==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-explicit-resource-management": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-explicit-resource-management/-/plugin-transform-explicit-resource-management-7.28.0.tgz",
      "integrity": "sha512-K8nhUcn3f6iB+P3gwCv/no7OdzOZQcKchW6N389V6PD8NUWKZHzndOd9sPDVbMoBsbmjMqlB4L9fm+fEFNVlwQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-exponentiation-operator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.27.1.tgz",
      "integrity": "sha512-uspvXnhHvGKf2r4VVtBpeFnuDWsJLQ6MF6lGJLC89jBR1uoVeqM416AZtTuhTezOfgHicpJQmoD5YUakO/YmXQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-export-namespace-from": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-export-namespace-from/-/plugin-transform-export-namespace-from-7.27.1.tgz",
      "integrity": "sha512-tQvHWSZ3/jH2xuq/vZDy0jNn+ZdXJeM8gHvX4lnJmsc3+50yPlWdZXIc5ay+umX+2/tJIqHqiEqcJvxlmIvRvQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-for-of": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.27.1.tgz",
      "integrity": "sha512-BfbWFFEJFQzLCQ5N8VocnCtA8J1CLkNTe2Ms2wocj75dd6VpiqS5Z5quTYcUoo4Yq+DN0rtikODccuv7RU81sw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-function-name": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.27.1.tgz",
      "integrity": "sha512-1bQeydJF9Nr1eBCMMbC+hdwmRlsv5XYOMu03YSWFwNs0HsAmtSxxF1fyuYPqemVldVyFmlCU7w8UE14LupUSZQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-json-strings": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-json-strings/-/plugin-transform-json-strings-7.27.1.tgz",
      "integrity": "sha512-6WVLVJiTjqcQauBhn1LkICsR2H+zm62I3h9faTDKt1qP4jn2o72tSvqMwtGFKGTpojce0gJs+76eZ2uCHRZh0Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.27.1.tgz",
      "integrity": "sha512-0HCFSepIpLTkLcsi86GG3mTUzxV5jpmbv97hTETW3yzrAij8aqlD36toB1D0daVFJM8NK6GvKO0gslVQmm+zZA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-logical-assignment-operators": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-logical-assignment-operators/-/plugin-transform-logical-assignment-operators-7.27.1.tgz",
      "integrity": "sha512-SJvDs5dXxiae4FbSL1aBJlG4wvl594N6YEVVn9e3JGulwioy6z3oPjx/sQBO3Y4NwUu5HNix6KJ3wBZoewcdbw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-member-expression-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.27.1.tgz",
      "integrity": "sha512-hqoBX4dcZ1I33jCSWcXrP+1Ku7kdqXf1oeah7ooKOIiAdKQ+uqftgCFNOSzA5AMS2XIHEYeGFg4cKRCdpxzVOQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-amd": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.27.1.tgz",
      "integrity": "sha512-iCsytMg/N9/oFq6n+gFTvUYDZQOMK5kEdeYxmxt91fcJGycfxVP9CnrxoliM0oumFERba2i8ZtwRUCMhvP1LnA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-commonjs": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.27.1.tgz",
      "integrity": "sha512-OJguuwlTYlN0gBZFRPqwOGNWssZjfIUdS7HMYtN8c1KmwpwHFBwTeFZrg9XZa+DFTitWOW5iTAG7tyCUPsCCyw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-systemjs": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.27.1.tgz",
      "integrity": "sha512-w5N1XzsRbc0PQStASMksmUeqECuzKuTJer7kFagK8AXgpCMkeDMO5S+aaFb7A51ZYDF7XI34qsTX+fkHiIm5yA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-umd": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.27.1.tgz",
      "integrity": "sha512-iQBE/xC5BV1OxJbp6WG7jq9IWiD+xxlZhLrdwpPkTX3ydmXdvoCpyfJN7acaIBZaOqTfr76pgzqBJflNbeRK+w==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.27.1.tgz",
      "integrity": "sha512-SstR5JYy8ddZvD6MhV0tM/j16Qds4mIpJTOd1Yu9J9pJjH93bxHECF7pgtc28XvkzTD6Pxcm/0Z73Hvk7kb3Ng==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-new-target": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.27.1.tgz",
      "integrity": "sha512-f6PiYeqXQ05lYq3TIfIDu/MtliKUbNwkGApPUvyo6+tc7uaR4cPjPe7DFPr15Uyycg2lZU6btZ575CuQoYh7MQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-nullish-coalescing-operator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-nullish-coalescing-operator/-/plugin-transform-nullish-coalescing-operator-7.27.1.tgz",
      "integrity": "sha512-aGZh6xMo6q9vq1JGcw58lZ1Z0+i0xB2x0XaauNIUXd6O1xXc3RwoWEBlsTQrY4KQ9Jf0s5rgD6SiNkaUdJegTA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-numeric-separator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-numeric-separator/-/plugin-transform-numeric-separator-7.27.1.tgz",
      "integrity": "sha512-fdPKAcujuvEChxDBJ5c+0BTaS6revLV7CJL08e4m3de8qJfNIuCc2nc7XJYOjBoTMJeqSmwXJ0ypE14RCjLwaw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-rest-spread": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-rest-spread/-/plugin-transform-object-rest-spread-7.28.0.tgz",
      "integrity": "sha512-9VNGikXxzu5eCiQjdE4IZn8sb9q7Xsk5EXLDBKUYg1e/Tve8/05+KJEtcxGxAgCY5t/BpKQM+JEL/yT4tvgiUA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0",
        "@babel/plugin-transform-parameters": "^7.27.7",
        "@babel/traverse": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-super": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.27.1.tgz",
      "integrity": "sha512-SFy8S9plRPbIcxlJ8A6mT/CxFdJx/c04JEctz4jf8YZaVS2px34j7NXRrlGlHkN/M2gnpL37ZpGRGVFLd3l8Ng==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-optional-catch-binding": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-catch-binding/-/plugin-transform-optional-catch-binding-7.27.1.tgz",
      "integrity": "sha512-txEAEKzYrHEX4xSZN4kJ+OfKXFVSWKB2ZxM9dpcE3wT7smwkNmXo5ORRlVzMVdJbD+Q8ILTgSD7959uj+3Dm3Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-optional-chaining": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-chaining/-/plugin-transform-optional-chaining-7.27.1.tgz",
      "integrity": "sha512-BQmKPPIuc8EkZgNKsv0X4bPmOoayeu4F1YCwx2/CfmDSXDbp7GnzlUH+/ul5VGfRg1AoFPsrIThlEBj2xb4CAg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-parameters": {
      "version": "7.27.7",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.27.7.tgz",
      "integrity": "sha512-qBkYTYCb76RRxUM6CcZA5KRu8K4SM8ajzVeUgVdMVO9NN9uI/GaVmBg/WKJJGnNokV9SY8FxNOVWGXzqzUidBg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-private-methods": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.27.1.tgz",
      "integrity": "sha512-10FVt+X55AjRAYI9BrdISN9/AQWHqldOeZDUoLyif1Kn05a56xVBXb8ZouL8pZ9jem8QpXaOt8TS7RHUIS+GPA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-private-property-in-object": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-property-in-object/-/plugin-transform-private-property-in-object-7.27.1.tgz",
      "integrity": "sha512-5J+IhqTi1XPa0DXF83jYOaARrX+41gOewWbkPyjMNRDqgOCqdffGh8L3f/Ek5utaEBZExjSAzcyjmV9SSAWObQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-property-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.27.1.tgz",
      "integrity": "sha512-oThy3BCuCha8kDZ8ZkgOg2exvPYUlprMukKQXI1r1pJ47NCvxfkEy8vK+r/hT9nF0Aa4H1WUPZZjHTFtAhGfmQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-regenerator": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.28.3.tgz",
      "integrity": "sha512-K3/M/a4+ESb5LEldjQb+XSrpY0nF+ZBFlTCbSnKaYAMfD8v33O6PMs4uYnOk19HlcsI8WMu3McdFPTiQHF/1/A==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-regexp-modifiers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regexp-modifiers/-/plugin-transform-regexp-modifiers-7.27.1.tgz",
      "integrity": "sha512-TtEciroaiODtXvLZv4rmfMhkCv8jx3wgKpL68PuiPh2M4fvz5jhsA7697N1gMvkvr/JTF13DrFYyEbY9U7cVPA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-reserved-words": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.27.1.tgz",
      "integrity": "sha512-V2ABPHIJX4kC7HegLkYoDpfg9PVmuWy/i6vUM5eGK22bx4YVFD3M5F0QQnWQoDs6AGsUWTVOopBiMFQgHaSkVw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-shorthand-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.27.1.tgz",
      "integrity": "sha512-N/wH1vcn4oYawbJ13Y/FxcQrWk63jhfNa7jef0ih7PHSIHX2LB7GWE1rkPrOnka9kwMxb6hMl19p7lidA+EHmQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-spread": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.27.1.tgz",
      "integrity": "sha512-kpb3HUqaILBJcRFVhFUs6Trdd4mkrzcGXss+6/mxUd273PfbWqSDHRzMT2234gIg2QYfAjvXLSquP1xECSg09Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-sticky-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.27.1.tgz",
      "integrity": "sha512-lhInBO5bi/Kowe2/aLdBAawijx+q1pQzicSgnkB6dUPc1+RC8QmJHKf2OjvU+NZWitguJHEaEmbV6VWEouT58g==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-template-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.27.1.tgz",
      "integrity": "sha512-fBJKiV7F2DxZUkg5EtHKXQdbsbURW3DZKQUWphDum0uRP6eHGGa/He9mc0mypL680pb+e/lDIthRohlv8NCHkg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-typeof-symbol": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.27.1.tgz",
      "integrity": "sha512-RiSILC+nRJM7FY5srIyc4/fGIwUhyDuuBSdWn4y6yT6gm652DpCHZjIipgn6B7MQ1ITOUnAKWixEUjQRIBIcLw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-escapes": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.27.1.tgz",
      "integrity": "sha512-Ysg4v6AmF26k9vpfFuTZg8HRfVWzsh1kVfowA23y9j/Gu6dOuahdUVhkLqpObp3JIv27MLSii6noRnuKN8H0Mg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-property-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-property-regex/-/plugin-transform-unicode-property-regex-7.27.1.tgz",
      "integrity": "sha512-uW20S39PnaTImxp39O5qFlHLS9LJEmANjMG7SxIhap8rCHqu0Ik+tLEPX5DKmHn6CsWQ7j3lix2tFOa5YtL12Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.27.1.tgz",
      "integrity": "sha512-xvINq24TRojDuyt6JGtHmkVkrfVV3FPT16uytxImLeBZqW3/H52yN+kM1MGuyPkIQxrzKwPHs5U/MP3qKyzkGw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-sets-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-sets-regex/-/plugin-transform-unicode-sets-regex-7.27.1.tgz",
      "integrity": "sha512-EtkOujbc4cgvb0mlpQefi4NTPBzhSIevblFevACNLUspmrALgmEBdL/XfnyyITfd8fKBZrZys92zOWcik7j9Tw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/preset-env": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.28.3.tgz",
      "integrity": "sha512-ROiDcM+GbYVPYBOeCR6uBXKkQpBExLl8k9HO1ygXEyds39j+vCCsjmj7S8GOniZQlEs81QlkdJZe76IpLSiqpg==",
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.28.0",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-validator-option": "^7.27.1",
        "@babel/plugin-bugfix-firefox-class-in-computed-class-key": "^7.27.1",
        "@babel/plugin-bugfix-safari-class-field-initializer-scope": "^7.27.1",
        "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": "^7.27.1",
        "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": "^7.27.1",
        "@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly": "^7.28.3",
        "@babel/plugin-proposal-private-property-in-object": "7.21.0-placeholder-for-preset-env.2",
        "@babel/plugin-syntax-import-assertions": "^7.27.1",
        "@babel/plugin-syntax-import-attributes": "^7.27.1",
        "@babel/plugin-syntax-unicode-sets-regex": "^7.18.6",
        "@babel/plugin-transform-arrow-functions": "^7.27.1",
        "@babel/plugin-transform-async-generator-functions": "^7.28.0",
        "@babel/plugin-transform-async-to-generator": "^7.27.1",
        "@babel/plugin-transform-block-scoped-functions": "^7.27.1",
        "@babel/plugin-transform-block-scoping": "^7.28.0",
        "@babel/plugin-transform-class-properties": "^7.27.1",
        "@babel/plugin-transform-class-static-block": "^7.28.3",
        "@babel/plugin-transform-classes": "^7.28.3",
        "@babel/plugin-transform-computed-properties": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0",
        "@babel/plugin-transform-dotall-regex": "^7.27.1",
        "@babel/plugin-transform-duplicate-keys": "^7.27.1",
        "@babel/plugin-transform-duplicate-named-capturing-groups-regex": "^7.27.1",
        "@babel/plugin-transform-dynamic-import": "^7.27.1",
        "@babel/plugin-transform-explicit-resource-management": "^7.28.0",
        "@babel/plugin-transform-exponentiation-operator": "^7.27.1",
        "@babel/plugin-transform-export-namespace-from": "^7.27.1",
        "@babel/plugin-transform-for-of": "^7.27.1",
        "@babel/plugin-transform-function-name": "^7.27.1",
        "@babel/plugin-transform-json-strings": "^7.27.1",
        "@babel/plugin-transform-literals": "^7.27.1",
        "@babel/plugin-transform-logical-assignment-operators": "^7.27.1",
        "@babel/plugin-transform-member-expression-literals": "^7.27.1",
        "@babel/plugin-transform-modules-amd": "^7.27.1",
        "@babel/plugin-transform-modules-commonjs": "^7.27.1",
        "@babel/plugin-transform-modules-systemjs": "^7.27.1",
        "@babel/plugin-transform-modules-umd": "^7.27.1",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.27.1",
        "@babel/plugin-transform-new-target": "^7.27.1",
        "@babel/plugin-transform-nullish-coalescing-operator": "^7.27.1",
        "@babel/plugin-transform-numeric-separator": "^7.27.1",
        "@babel/plugin-transform-object-rest-spread": "^7.28.0",
        "@babel/plugin-transform-object-super": "^7.27.1",
        "@babel/plugin-transform-optional-catch-binding": "^7.27.1",
        "@babel/plugin-transform-optional-chaining": "^7.27.1",
        "@babel/plugin-transform-parameters": "^7.27.7",
        "@babel/plugin-transform-private-methods": "^7.27.1",
        "@babel/plugin-transform-private-property-in-object": "^7.27.1",
        "@babel/plugin-transform-property-literals": "^7.27.1",
        "@babel/plugin-transform-regenerator": "^7.28.3",
        "@babel/plugin-transform-regexp-modifiers": "^7.27.1",
        "@babel/plugin-transform-reserved-words": "^7.27.1",
        "@babel/plugin-transform-shorthand-properties": "^7.27.1",
        "@babel/plugin-transform-spread": "^7.27.1",
        "@babel/plugin-transform-sticky-regex": "^7.27.1",
        "@babel/plugin-transform-template-literals": "^7.27.1",
        "@babel/plugin-transform-typeof-symbol": "^7.27.1",
        "@babel/plugin-transform-unicode-escapes": "^7.27.1",
        "@babel/plugin-transform-unicode-property-regex": "^7.27.1",
        "@babel/plugin-transform-unicode-regex": "^7.27.1",
        "@babel/plugin-transform-unicode-sets-regex": "^7.27.1",
        "@babel/preset-modules": "0.1.6-no-external-plugins",
        "babel-plugin-polyfill-corejs2": "^0.4.14",
        "babel-plugin-polyfill-corejs3": "^0.13.0",
        "babel-plugin-polyfill-regenerator": "^0.6.5",
        "core-js-compat": "^3.43.0",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-env/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/@babel/preset-modules": {
      "version": "0.1.6-no-external-plugins",
      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.6-no-external-plugins.tgz",
      "integrity": "sha512-HrcgcIESLm9aIR842yhJ5RWan/gebQUJ6E/E5+rf0y9o6oj7w0Br+sWuL6kEQ/o/AdfvR1Je9jG18/gnpwjEyA==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/types": "^7.4.4",
        "esutils": "^2.0.2"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.3.tgz",
      "integrity": "sha512-9uIQ10o0WGdpP6GDhXcdOJPJuDgFtIDtN/9+ArJQ2NAfAmiuhTQdzkaTGR33v43GYS2UrSA0eX2pPPHoFVvpxA==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/parser": "^7.27.2",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.3.tgz",
      "integrity": "sha512-7w4kZYHneL3A6NP2nxzHvT3HCZ7puDZZjFMqDpBPECub79sTtSO5CGXDkKrTQq8ksAwfD/XI2MRFX23njdDaIQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-globals": "^7.28.0",
        "@babel/parser": "^7.28.3",
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.2",
        "debug": "^4.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.28.2",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.2.tgz",
      "integrity": "sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@bufbuild/protobuf": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/@bufbuild/protobuf/-/protobuf-2.7.0.tgz",
      "integrity": "sha512-qn6tAIZEw5i/wiESBF4nQxZkl86aY4KoO0IkUa2Lh+rya64oTOdJQFlZuMwI1Qz9VBJQrQC4QlSA2DNek5gCOA==",
      "license": "(Apache-2.0 AND BSD-3-Clause)"
    },
    "node_modules/@dimforge/rapier3d-compat": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/@dimforge/rapier3d-compat/-/rapier3d-compat-0.12.0.tgz",
      "integrity": "sha512-uekIGetywIgopfD97oDL5PfeezkFpNhwlzlaEYNOA0N6ghdsOvh/HYjSMek5Q2O1PYvRSDFcqFVJl4r4ZBwOow==",
      "license": "Apache-2.0"
    },
    "node_modules/@discoveryjs/json-ext": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/@discoveryjs/json-ext/-/json-ext-0.5.7.tgz",
      "integrity": "sha512-dBVuXR082gk3jsFp7Rd/JI4kytwGHecnCoTtXFb7DB6CNHp4rg5k1bhg0nWdLGLnOV71lmDzGQaLMy8iPLY0pw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/@ducanh2912/next-pwa": {
      "version": "10.2.9",
      "resolved": "https://registry.npmjs.org/@ducanh2912/next-pwa/-/next-pwa-10.2.9.tgz",
      "integrity": "sha512-Wtu823+0Ga1owqSu1I4HqKgeRYarduCCKwsh1EJmJiJqgbt+gvVf5cFwFH8NigxYyyEvriAro4hzm0pMSrXdRQ==",
      "license": "MIT",
      "dependencies": {
        "fast-glob": "3.3.2",
        "semver": "7.6.3",
        "workbox-build": "7.1.1",
        "workbox-core": "7.1.0",
        "workbox-webpack-plugin": "7.1.0",
        "workbox-window": "7.1.0"
      },
      "peerDependencies": {
        "next": ">=14.0.0",
        "webpack": ">=5.9.0"
      }
    },
    "node_modules/@ducanh2912/next-pwa/node_modules/workbox-window": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-window/-/workbox-window-7.1.0.tgz",
      "integrity": "sha512-ZHeROyqR+AS5UPzholQRDttLFqGMwP0Np8MKWAdyxsDETxq3qOAyXvqessc3GniohG6e0mAqSQyKOHmT8zPF7g==",
      "license": "MIT",
      "dependencies": {
        "@types/trusted-types": "^2.0.2",
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/@emnapi/core": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.5.0.tgz",
      "integrity": "sha512-sbP8GzB1WDzacS8fgNPpHlp6C9VZe+SJP3F90W9rLemaQj2PzIuTEl1qDOYQf58YIpyjViI24y9aPWCjEzY2cg==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/wasi-threads": "1.1.0",
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@emnapi/runtime": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.5.0.tgz",
      "integrity": "sha512-97/BJ3iXHww3djw6hYIfErCZFee7qCtrneuLa20UXFCOTCfBM2cvQHjWJ2EG0s0MtdNwInarqCTz35i4wWXHsQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@emnapi/wasi-threads": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@emnapi/wasi-threads/-/wasi-threads-1.1.0.tgz",
      "integrity": "sha512-WI0DdZ8xFSbgMjR1sFsKABJ/C5OnRrjT06JXbZKexJGrDuPTzZdDYfFlsgcCXCyf+suG5QU2e/y1Wo2V/OapLQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@emotion/is-prop-valid": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@emotion/is-prop-valid/-/is-prop-valid-1.2.2.tgz",
      "integrity": "sha512-uNsoYd37AFmaCdXlg6EYD1KaPOaRWRByMCYzbKUX4+hhMfrxdVSelShywL4JVaAeM/eHUOSprYBQls+/neX3pw==",
      "license": "MIT",
      "dependencies": {
        "@emotion/memoize": "^0.8.1"
      }
    },
    "node_modules/@emotion/memoize": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.1.tgz",
      "integrity": "sha512-W2P2c/VRW1/1tLox0mVUalvnWXxavmv/Oum2aPsRcoDJuob75FC3Y8FbpfLwUegRcxINtGUMPq0tFCvYNTBXNA==",
      "license": "MIT"
    },
    "node_modules/@emotion/unitless": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.8.1.tgz",
      "integrity": "sha512-KOEGMu6dmJZtpadb476IsZBclKvILjopjUii3V+7MnXIQCYh8W3NgNcgwo21n9LXZX6EDIKvqfjYxXebDwxKmQ==",
      "license": "MIT"
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.9.tgz",
      "integrity": "sha512-OaGtL73Jck6pBKjNIe24BnFE6agGl+6KxDtTfHhy1HmhthfKouEcOhqpSL64K4/0WCtbKFLOdzD/44cJ4k9opA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.9.tgz",
      "integrity": "sha512-5WNI1DaMtxQ7t7B6xa572XMXpHAaI/9Hnhk8lcxF4zVN4xstUgTlvuGDorBguKEnZO70qwEcLpfifMLoxiPqHQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.9.tgz",
      "integrity": "sha512-IDrddSmpSv51ftWslJMvl3Q2ZT98fUSL2/rlUXuVqRXHCs5EUF1/f+jbjF5+NG9UffUDMCiTyh8iec7u8RlTLg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.9.tgz",
      "integrity": "sha512-I853iMZ1hWZdNllhVZKm34f4wErd4lMyeV7BLzEExGEIZYsOzqDWDf+y082izYUE8gtJnYHdeDpN/6tUdwvfiw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.9.tgz",
      "integrity": "sha512-XIpIDMAjOELi/9PB30vEbVMs3GV1v2zkkPnuyRRURbhqjyzIINwj+nbQATh4H9GxUgH1kFsEyQMxwiLFKUS6Rg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.9.tgz",
      "integrity": "sha512-jhHfBzjYTA1IQu8VyrjCX4ApJDnH+ez+IYVEoJHeqJm9VhG9Dh2BYaJritkYK3vMaXrf7Ogr/0MQ8/MeIefsPQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.9.tgz",
      "integrity": "sha512-z93DmbnY6fX9+KdD4Ue/H6sYs+bhFQJNCPZsi4XWJoYblUqT06MQUdBCpcSfuiN72AbqeBFu5LVQTjfXDE2A6Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.9.tgz",
      "integrity": "sha512-mrKX6H/vOyo5v71YfXWJxLVxgy1kyt1MQaD8wZJgJfG4gq4DpQGpgTB74e5yBeQdyMTbgxp0YtNj7NuHN0PoZg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.9.tgz",
      "integrity": "sha512-HBU2Xv78SMgaydBmdor38lg8YDnFKSARg1Q6AT0/y2ezUAKiZvc211RDFHlEZRFNRVhcMamiToo7bDx3VEOYQw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.9.tgz",
      "integrity": "sha512-BlB7bIcLT3G26urh5Dmse7fiLmLXnRlopw4s8DalgZ8ef79Jj4aUcYbk90g8iCa2467HX8SAIidbL7gsqXHdRw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.9.tgz",
      "integrity": "sha512-e7S3MOJPZGp2QW6AK6+Ly81rC7oOSerQ+P8L0ta4FhVi+/j/v2yZzx5CqqDaWjtPFfYz21Vi1S0auHrap3Ma3A==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.9.tgz",
      "integrity": "sha512-Sbe10Bnn0oUAB2AalYztvGcK+o6YFFA/9829PhOCUS9vkJElXGdphz0A3DbMdP8gmKkqPmPcMJmJOrI3VYB1JQ==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.9.tgz",
      "integrity": "sha512-YcM5br0mVyZw2jcQeLIkhWtKPeVfAerES5PvOzaDxVtIyZ2NUBZKNLjC5z3/fUlDgT6w89VsxP2qzNipOaaDyA==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.9.tgz",
      "integrity": "sha512-++0HQvasdo20JytyDpFvQtNrEsAgNG2CY1CLMwGXfFTKGBGQT3bOeLSYE2l1fYdvML5KUuwn9Z8L1EWe2tzs1w==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.9.tgz",
      "integrity": "sha512-uNIBa279Y3fkjV+2cUjx36xkx7eSjb8IvnL01eXUKXez/CBHNRw5ekCGMPM0BcmqBxBcdgUWuUXmVWwm4CH9kg==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.9.tgz",
      "integrity": "sha512-Mfiphvp3MjC/lctb+7D287Xw1DGzqJPb/J2aHHcHxflUo+8tmN/6d4k6I2yFR7BVo5/g7x2Monq4+Yew0EHRIA==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.9.tgz",
      "integrity": "sha512-iSwByxzRe48YVkmpbgoxVzn76BXjlYFXC7NvLYq+b+kDjyyk30J0JY47DIn8z1MO3K0oSl9fZoRmZPQI4Hklzg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.9.tgz",
      "integrity": "sha512-9jNJl6FqaUG+COdQMjSCGW4QiMHH88xWbvZ+kRVblZsWrkXlABuGdFJ1E9L7HK+T0Yqd4akKNa/lO0+jDxQD4Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.9.tgz",
      "integrity": "sha512-RLLdkflmqRG8KanPGOU7Rpg829ZHu8nFy5Pqdi9U01VYtG9Y0zOG6Vr2z4/S+/3zIyOxiK6cCeYNWOFR9QP87g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.9.tgz",
      "integrity": "sha512-YaFBlPGeDasft5IIM+CQAhJAqS3St3nJzDEgsgFixcfZeyGPCd6eJBWzke5piZuZ7CtL656eOSYKk4Ls2C0FRQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.9.tgz",
      "integrity": "sha512-1MkgTCuvMGWuqVtAvkpkXFmtL8XhWy+j4jaSO2wxfJtilVCi0ZE37b8uOdMItIHz4I6z1bWWtEX4CJwcKYLcuA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openharmony-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/openharmony-arm64/-/openharmony-arm64-0.25.9.tgz",
      "integrity": "sha512-4Xd0xNiMVXKh6Fa7HEJQbrpP3m3DDn43jKxMjxLLRjWnRsfxjORYJlXPO4JNcXtOyfajXorRKY9NkOpTHptErg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openharmony"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.9.tgz",
      "integrity": "sha512-WjH4s6hzo00nNezhp3wFIAfmGZ8U7KtrJNlFMRKxiI9mxEK1scOMAaa9i4crUtu+tBr+0IN6JCuAcSBJZfnphw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.9.tgz",
      "integrity": "sha512-mGFrVJHmZiRqmP8xFOc6b84/7xa5y5YvR1x8djzXpJBSv/UsNK6aqec+6JDjConTgvvQefdGhFDAs2DLAds6gQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.9.tgz",
      "integrity": "sha512-b33gLVU2k11nVx1OhX3C8QQP6UHQK4ZtN56oFWvVXvz2VkDoe6fbG8TOgHFxEvqeqohmRnIHe5A1+HADk4OQww==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.9.tgz",
      "integrity": "sha512-PPOl1mi6lpLNQxnGoyAfschAodRFYXJ+9fs6WHXz7CSWKbOqiMZsubC+BQsVKuul+3vKLuwTHsS2c2y9EoKwxQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.21.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz",
      "integrity": "sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/object-schema": "^2.1.6",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/config-helpers": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.1.tgz",
      "integrity": "sha512-xR93k9WhrDYpXHORXpxVL5oHj3Era7wo6k/Wd8/IsQNnZUTzkGS29lyn3nAT05v6ltUuTFVCCYDEGfy2Or/sPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.15.2",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.2.tgz",
      "integrity": "sha512-78Md3/Rrxh83gCxoUc0EiciuOHsIITzLy53m3d9UyiW8y9Dj2D29FeETqyKA+BRK76tnTp6RXWb3pCay8Oyomg==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
      "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true,
      "license": "Python-2.0"
    },
    "node_modules/@eslint/eslintrc/node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.34.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.34.0.tgz",
      "integrity": "sha512-EoyvqQnBNsV1CWaEJ559rxXL4c8V92gxirbawSmVUOWXlsRxxQXl6LmCpdUblgxgSkDIqKnhzba2SjRTI/A5Rw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.5.tgz",
      "integrity": "sha512-Z5kJ+wU3oA7MMIqVR9tyZRtjYPr4OC004Q4Rw7pgOKUOKkJfZ3O24nz3WYfGRpMDNmcOi3TwQOmgm7B7Tpii0w==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/core": "^0.15.2",
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@formatjs/ecma402-abstract": {
      "version": "2.3.4",
      "resolved": "https://registry.npmjs.org/@formatjs/ecma402-abstract/-/ecma402-abstract-2.3.4.tgz",
      "integrity": "sha512-qrycXDeaORzIqNhBOx0btnhpD1c+/qFIHAN9znofuMJX6QBwtbrmlpWfD4oiUUD2vJUOIYFA/gYtg2KAMGG7sA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@formatjs/fast-memoize": "2.2.7",
        "@formatjs/intl-localematcher": "0.6.1",
        "decimal.js": "^10.4.3",
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@formatjs/fast-memoize": {
      "version": "2.2.7",
      "resolved": "https://registry.npmjs.org/@formatjs/fast-memoize/-/fast-memoize-2.2.7.tgz",
      "integrity": "sha512-Yabmi9nSvyOMrlSeGGWDiH7rf3a7sIwplbvo/dlz9WCIjzIQAfy1RMf4S0X3yG724n5Ghu2GmEl5NJIV6O9sZQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@formatjs/icu-messageformat-parser": {
      "version": "2.11.2",
      "resolved": "https://registry.npmjs.org/@formatjs/icu-messageformat-parser/-/icu-messageformat-parser-2.11.2.tgz",
      "integrity": "sha512-AfiMi5NOSo2TQImsYAg8UYddsNJ/vUEv/HaNqiFjnI3ZFfWihUtD5QtuX6kHl8+H+d3qvnE/3HZrfzgdWpsLNA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@formatjs/ecma402-abstract": "2.3.4",
        "@formatjs/icu-skeleton-parser": "1.8.14",
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@formatjs/icu-skeleton-parser": {
      "version": "1.8.14",
      "resolved": "https://registry.npmjs.org/@formatjs/icu-skeleton-parser/-/icu-skeleton-parser-1.8.14.tgz",
      "integrity": "sha512-i4q4V4qslThK4Ig8SxyD76cp3+QJ3sAqr7f6q9VVfeGtxG9OhiAk3y9XF6Q41OymsKzsGQ6OQQoJNY4/lI8TcQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@formatjs/ecma402-abstract": "2.3.4",
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@formatjs/intl-localematcher": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/@formatjs/intl-localematcher/-/intl-localematcher-0.6.1.tgz",
      "integrity": "sha512-ePEgLgVCqi2BBFnTMWPfIghu6FkbZnnBVhO2sSxvLfrdFw7wCHAHiDoM2h4NRgjbaY7+B7HgOLZGkK187pZTZg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@fortawesome/fontawesome-common-types": {
      "version": "6.6.0",
      "resolved": "https://registry.npmjs.org/@fortawesome/fontawesome-common-types/-/fontawesome-common-types-6.6.0.tgz",
      "integrity": "sha512-xyX0X9mc0kyz9plIyryrRbl7ngsA9jz77mCZJsUkLl+ZKs0KWObgaEBoSgQiYWAsSmjz/yjl0F++Got0Mdp4Rw==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@fortawesome/fontawesome-svg-core": {
      "version": "6.6.0",
      "resolved": "https://registry.npmjs.org/@fortawesome/fontawesome-svg-core/-/fontawesome-svg-core-6.6.0.tgz",
      "integrity": "sha512-KHwPkCk6oRT4HADE7smhfsKudt9N/9lm6EJ5BVg0tD1yPA5hht837fB87F8pn15D8JfTqQOjhKTktwmLMiD7Kg==",
      "license": "MIT",
      "dependencies": {
        "@fortawesome/fontawesome-common-types": "6.6.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@fortawesome/free-solid-svg-icons": {
      "version": "6.6.0",
      "resolved": "https://registry.npmjs.org/@fortawesome/free-solid-svg-icons/-/free-solid-svg-icons-6.6.0.tgz",
      "integrity": "sha512-IYv/2skhEDFc2WGUcqvFJkeK39Q+HyPf5GHUrT/l2pKbtgEIv1al1TKd6qStR5OIwQdN1GZP54ci3y4mroJWjA==",
      "license": "(CC-BY-4.0 AND MIT)",
      "dependencies": {
        "@fortawesome/fontawesome-common-types": "6.6.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@fortawesome/react-fontawesome": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/@fortawesome/react-fontawesome/-/react-fontawesome-0.2.2.tgz",
      "integrity": "sha512-EnkrprPNqI6SXJl//m29hpaNzOp1bruISWaOiRtkMi/xSvHJlzc2j2JAYS7egxt/EbjSNV/k6Xy0AQI6vB2+1g==",
      "license": "MIT",
      "dependencies": {
        "prop-types": "^15.8.1"
      },
      "peerDependencies": {
        "@fortawesome/fontawesome-svg-core": "~1 || ~6",
        "react": ">=16.3"
      }
    },
    "node_modules/@hookform/resolvers": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/@hookform/resolvers/-/resolvers-5.2.1.tgz",
      "integrity": "sha512-u0+6X58gkjMcxur1wRWokA7XsiiBJ6aK17aPZxhkoYiK5J+HcTx0Vhu9ovXe6H+dVpO6cjrn2FkJTryXEMlryQ==",
      "license": "MIT",
      "dependencies": {
        "@standard-schema/utils": "^0.3.0"
      },
      "peerDependencies": {
        "react-hook-form": "^7.55.0"
      }
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
      "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@img/sharp-darwin-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.3.tgz",
      "integrity": "sha512-ryFMfvxxpQRsgZJqBd4wsttYQbCxsJksrv9Lw/v798JcQ8+w84mBWuXwl+TT0WJ/WrYOLaYpwQXi3sA9nTIaIg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-darwin-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-darwin-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.34.3.tgz",
      "integrity": "sha512-yHpJYynROAj12TA6qil58hmPmAwxKKC7reUqtGLzsOHfP7/rniNGTL8tjWX6L3CTV4+5P4ypcS7Pp+7OB+8ihA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-darwin-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-libvips-darwin-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.2.0.tgz",
      "integrity": "sha512-sBZmpwmxqwlqG9ueWFXtockhsxefaV6O84BMOrhtg/YqbTaRdqDE7hxraVE3y6gVM4eExmfzW4a8el9ArLeEiQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "darwin"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-darwin-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.2.0.tgz",
      "integrity": "sha512-M64XVuL94OgiNHa5/m2YvEQI5q2cl9d/wk0qFTDVXcYzi43lxuiFTftMR1tOnFQovVXNZJ5TURSDK2pNe9Yzqg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "darwin"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-arm": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.2.0.tgz",
      "integrity": "sha512-mWd2uWvDtL/nvIzThLq3fr2nnGfyr/XMXlq8ZJ9WMR6PXijHlC3ksp0IpuhK6bougvQrchUAfzRLnbsen0Cqvw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.2.0.tgz",
      "integrity": "sha512-RXwd0CgG+uPRX5YYrkzKyalt2OJYRiJQ8ED/fi1tq9WQW2jsQIn0tqrlR5l5dr/rjqq6AHAxURhj2DVjyQWSOA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-ppc64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-ppc64/-/sharp-libvips-linux-ppc64-1.2.0.tgz",
      "integrity": "sha512-Xod/7KaDDHkYu2phxxfeEPXfVXFKx70EAFZ0qyUdOjCcxbjqyJOEUpDe6RIyaunGxT34Anf9ue/wuWOqBW2WcQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-s390x": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.2.0.tgz",
      "integrity": "sha512-eMKfzDxLGT8mnmPJTNMcjfO33fLiTDsrMlUVcp6b96ETbnJmd4uvZxVJSKPQfS+odwfVaGifhsB07J1LynFehw==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.2.0.tgz",
      "integrity": "sha512-ZW3FPWIc7K1sH9E3nxIGB3y3dZkpJlMnkk7z5tu1nSkBoCgw2nSRTFHI5pB/3CQaJM0pdzMF3paf9ckKMSE9Tg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linuxmusl-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.2.0.tgz",
      "integrity": "sha512-UG+LqQJbf5VJ8NWJ5Z3tdIe/HXjuIdo4JeVNADXBFuG7z9zjoegpzzGIyV5zQKi4zaJjnAd2+g2nna8TZvuW9Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linuxmusl-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.2.0.tgz",
      "integrity": "sha512-SRYOLR7CXPgNze8akZwjoGBoN1ThNZoqpOgfnOxmWsklTGVfJiGJoC/Lod7aNMGA1jSsKWM1+HRX43OP6p9+6Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-linux-arm": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.34.3.tgz",
      "integrity": "sha512-oBK9l+h6KBN0i3dC8rYntLiVfW8D8wH+NPNT3O/WBHeW0OQWCjfWksLUaPidsrDKpJgXp3G3/hkmhptAW0I3+A==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-arm": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.34.3.tgz",
      "integrity": "sha512-QdrKe3EvQrqwkDrtuTIjI0bu6YEJHTgEeqdzI3uWJOH6G1O8Nl1iEeVYRGdj1h5I21CqxSvQp1Yv7xeU3ZewbA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-ppc64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-ppc64/-/sharp-linux-ppc64-0.34.3.tgz",
      "integrity": "sha512-GLtbLQMCNC5nxuImPR2+RgrviwKwVql28FWZIW1zWruy6zLgA5/x2ZXk3mxj58X/tszVF69KK0Is83V8YgWhLA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-ppc64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-s390x": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.34.3.tgz",
      "integrity": "sha512-3gahT+A6c4cdc2edhsLHmIOXMb17ltffJlxR0aC2VPZfwKoTGZec6u5GrFgdR7ciJSsHT27BD3TIuGcuRT0KmQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-s390x": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.34.3.tgz",
      "integrity": "sha512-8kYso8d806ypnSq3/Ly0QEw90V5ZoHh10yH0HnrzOCr6DKAPI6QVHvwleqMkVQ0m+fc7EH8ah0BB0QPuWY6zJQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linuxmusl-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.34.3.tgz",
      "integrity": "sha512-vAjbHDlr4izEiXM1OTggpCcPg9tn4YriK5vAjowJsHwdBIdx0fYRsURkxLG2RLm9gyBq66gwtWI8Gx0/ov+JKQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linuxmusl-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.34.3.tgz",
      "integrity": "sha512-gCWUn9547K5bwvOn9l5XGAEjVTTRji4aPTqLzGXHvIr6bIDZKNTA34seMPgM0WmSf+RYBH411VavCejp3PkOeQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linuxmusl-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-wasm32": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.34.3.tgz",
      "integrity": "sha512-+CyRcpagHMGteySaWos8IbnXcHgfDn7pO2fiC2slJxvNq9gDipYBN42/RagzctVRKgxATmfqOSulgZv5e1RdMg==",
      "cpu": [
        "wasm32"
      ],
      "dev": true,
      "license": "Apache-2.0 AND LGPL-3.0-or-later AND MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/runtime": "^1.4.4"
      },
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-arm64/-/sharp-win32-arm64-0.34.3.tgz",
      "integrity": "sha512-MjnHPnbqMXNC2UgeLJtX4XqoVHHlZNd+nPt1kRPmj63wURegwBhZlApELdtxM2OIZDRv/DFtLcNhVbd1z8GYXQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-ia32": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.34.3.tgz",
      "integrity": "sha512-xuCdhH44WxuXgOM714hn4amodJMZl3OEvf0GVTm0BEyMeA2to+8HEdRPShH0SLYptJY1uBw+SCFP9WVQi1Q/cw==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.34.3.tgz",
      "integrity": "sha512-OWwz05d++TxzLEv4VnsTz5CmZ6mI6S05sfQGEMrNrQcOEERbX46332IvE7pO/EUiw7jUrrS40z/M7kPyjfl04g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@isaacs/fs-minipass": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "minipass": "^7.0.4"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@iwer/devui": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@iwer/devui/-/devui-1.1.2.tgz",
      "integrity": "sha512-ggF1lXSX14BTYP0QzB4xaurySr2PC+3+rtK/dpCR++giWquzFv2mBw3LW/PaCtdl5mqkZMrQ2GSwfUNg9ZoO+w==",
      "license": "MIT",
      "dependencies": {
        "@fortawesome/fontawesome-svg-core": "6.6.0",
        "@fortawesome/free-solid-svg-icons": "6.6.0",
        "@fortawesome/react-fontawesome": "0.2.2",
        "@pmndrs/handle": "^6.6.17",
        "@pmndrs/pointer-events": "^6.6.17",
        "react": ">=18.3.1",
        "react-dom": ">=18.3.1",
        "styled-components": "^6.1.13",
        "three": "^0.165.0"
      },
      "peerDependencies": {
        "iwer": "^2.0.1"
      }
    },
    "node_modules/@iwer/devui/node_modules/three": {
      "version": "0.165.0",
      "resolved": "https://registry.npmjs.org/three/-/three-0.165.0.tgz",
      "integrity": "sha512-cc96IlVYGydeceu0e5xq70H8/yoVT/tXBxV/W8A/U6uOq7DXc4/s1Mkmnu6SqoYGhSRWWYFOhVwvq6V0VtbplA==",
      "license": "MIT"
    },
    "node_modules/@iwer/sem": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/@iwer/sem/-/sem-0.2.5.tgz",
      "integrity": "sha512-vMCfpu/7Qqc+hkBiGD9pxjeObgrhXOrL0KX94CA3yzJaU0dq0y49HXZT6fC+6X/jOmjaM3hjyE1m2h7ZmLzzyA==",
      "license": "MIT",
      "dependencies": {
        "three": "^0.165.0",
        "ts-proto": "^2.6.0"
      },
      "peerDependencies": {
        "iwer": "^2.0.0"
      }
    },
    "node_modules/@iwer/sem/node_modules/three": {
      "version": "0.165.0",
      "resolved": "https://registry.npmjs.org/three/-/three-0.165.0.tgz",
      "integrity": "sha512-cc96IlVYGydeceu0e5xq70H8/yoVT/tXBxV/W8A/U6uOq7DXc4/s1Mkmnu6SqoYGhSRWWYFOhVwvq6V0VtbplA==",
      "license": "MIT"
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.13",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
      "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/remapping": {
      "version": "2.3.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/remapping/-/remapping-2.3.5.tgz",
      "integrity": "sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/source-map": {
      "version": "0.3.11",
      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.11.tgz",
      "integrity": "sha512-ZMp1V8ZFcPG5dIWnQLr3NSI1MiCU7UETdS/A0G8V/XWHvJv3ZsFqutJn1Y5RPmAPX6F3BiE397OqveU/9NCuIA==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
      "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.30",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.30.tgz",
      "integrity": "sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@lhci/cli": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@lhci/cli/-/cli-0.14.0.tgz",
      "integrity": "sha512-TxOH9pFBnmmN7Jmo2Aimxx5UhE8veqXpHfFJDMWsCVxkwh7mGxcAWchGl84mK139SZbbRmerqZ72c+h2nG9/QQ==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@lhci/utils": "0.14.0",
        "chrome-launcher": "^0.13.4",
        "compression": "^1.7.4",
        "debug": "^4.3.1",
        "express": "^4.17.1",
        "inquirer": "^6.3.1",
        "isomorphic-fetch": "^3.0.0",
        "lighthouse": "12.1.0",
        "lighthouse-logger": "1.2.0",
        "open": "^7.1.0",
        "proxy-agent": "^6.4.0",
        "tmp": "^0.1.0",
        "uuid": "^8.3.1",
        "yargs": "^15.4.1",
        "yargs-parser": "^13.1.2"
      },
      "bin": {
        "lhci": "src/cli.js"
      }
    },
    "node_modules/@lhci/utils": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@lhci/utils/-/utils-0.14.0.tgz",
      "integrity": "sha512-LyP1RbvYQ9xNl7uLnl5AO8fDRata9MG/KYfVFKFkYenlsVS6QJsNjLzWNEoMIaE4jOPdQQlSp4tO7dtnyDxzbQ==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "debug": "^4.3.1",
        "isomorphic-fetch": "^3.0.0",
        "js-yaml": "^3.13.1",
        "lighthouse": "12.1.0",
        "tree-kill": "^1.2.1"
      }
    },
    "node_modules/@mediapipe/tasks-vision": {
      "version": "0.10.8",
      "resolved": "https://registry.npmjs.org/@mediapipe/tasks-vision/-/tasks-vision-0.10.8.tgz",
      "integrity": "sha512-Rp7ll8BHrKB3wXaRFKhrltwZl1CiXGdibPxuWXvqGnKTnv8fqa/nvftYNuSbf+pbJWKYCXdBtYTITdAUTGGh0Q==",
      "license": "Apache-2.0"
    },
    "node_modules/@mongodb-js/saslprep": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.3.0.tgz",
      "integrity": "sha512-zlayKCsIjYb7/IdfqxorK5+xUMyi4vOKcFy10wKJYc63NSdKI8mNME+uJqfatkPmOSMMUiojrL58IePKBm3gvQ==",
      "license": "MIT",
      "dependencies": {
        "sparse-bitfield": "^3.0.3"
      }
    },
    "node_modules/@monogrid/gainmap-js": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@monogrid/gainmap-js/-/gainmap-js-3.1.0.tgz",
      "integrity": "sha512-Obb0/gEd/HReTlg8ttaYk+0m62gQJmCblMOjHSMHRrBP2zdfKMHLCRbh/6ex9fSUJMKdjjIEiohwkbGD3wj2Nw==",
      "license": "MIT",
      "dependencies": {
        "promise-worker-transferable": "^1.0.4"
      },
      "peerDependencies": {
        "three": ">= 0.159.0"
      }
    },
    "node_modules/@napi-rs/wasm-runtime": {
      "version": "0.2.12",
      "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-0.2.12.tgz",
      "integrity": "sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/core": "^1.4.3",
        "@emnapi/runtime": "^1.4.3",
        "@tybys/wasm-util": "^0.10.0"
      }
    },
    "node_modules/@next-auth/prisma-adapter": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/@next-auth/prisma-adapter/-/prisma-adapter-1.0.7.tgz",
      "integrity": "sha512-Cdko4KfcmKjsyHFrWwZ//lfLUbcLqlyFqjd/nYE2m3aZ7tjMNUjpks47iw7NTCnXf+5UWz5Ypyt1dSs1EP5QJw==",
      "license": "ISC",
      "peerDependencies": {
        "@prisma/client": ">=2.26.0 || >=3",
        "next-auth": "^4"
      }
    },
    "node_modules/@next/bundle-analyzer": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/bundle-analyzer/-/bundle-analyzer-15.5.2.tgz",
      "integrity": "sha512-UWOFpy/NK5iSeIP0mgdq4VqGB4/z37uq5v5dEtvzmY/BlaPO6m4EtFUaH6RVI0w2wG5sh0TG86i/cA5wcaJtgg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "webpack-bundle-analyzer": "4.10.1"
      }
    },
    "node_modules/@next/env": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/env/-/env-15.5.2.tgz",
      "integrity": "sha512-Qe06ew4zt12LeO6N7j8/nULSOe3fMXE4dM6xgpBQNvdzyK1sv5y4oAP3bq4LamrvGCZtmRYnW8URFCeX5nFgGg==",
      "license": "MIT"
    },
    "node_modules/@next/eslint-plugin-next": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/eslint-plugin-next/-/eslint-plugin-next-15.5.2.tgz",
      "integrity": "sha512-lkLrRVxcftuOsJNhWatf1P2hNVfh98k/omQHrCEPPriUypR6RcS13IvLdIrEvkm9AH2Nu2YpR5vLqBuy6twH3Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-glob": "3.3.1"
      }
    },
    "node_modules/@next/eslint-plugin-next/node_modules/fast-glob": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.1.tgz",
      "integrity": "sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/@next/eslint-plugin-next/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/@next/swc-darwin-arm64": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.5.2.tgz",
      "integrity": "sha512-8bGt577BXGSd4iqFygmzIfTYizHb0LGWqH+qgIF/2EDxS5JsSdERJKA8WgwDyNBZgTIIA4D8qUtoQHmxIIquoQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-darwin-x64": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.5.2.tgz",
      "integrity": "sha512-2DjnmR6JHK4X+dgTXt5/sOCu/7yPtqpYt8s8hLkHFK3MGkka2snTv3yRMdHvuRtJVkPwCGsvBSwmoQCHatauFQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-arm64-gnu": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.5.2.tgz",
      "integrity": "sha512-3j7SWDBS2Wov/L9q0mFJtEvQ5miIqfO4l7d2m9Mo06ddsgUK8gWfHGgbjdFlCp2Ek7MmMQZSxpGFqcC8zGh2AA==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-arm64-musl": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.5.2.tgz",
      "integrity": "sha512-s6N8k8dF9YGc5T01UPQ08yxsK6fUow5gG1/axWc1HVVBYQBgOjca4oUZF7s4p+kwhkB1bDSGR8QznWrFZ/Rt5g==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-x64-gnu": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.5.2.tgz",
      "integrity": "sha512-o1RV/KOODQh6dM6ZRJGZbc+MOAHww33Vbs5JC9Mp1gDk8cpEO+cYC/l7rweiEalkSm5/1WGa4zY7xrNwObN4+Q==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-x64-musl": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.5.2.tgz",
      "integrity": "sha512-/VUnh7w8RElYZ0IV83nUcP/J4KJ6LLYliiBIri3p3aW2giF+PAVgZb6mk8jbQSB3WlTai8gEmCAr7kptFa1H6g==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-arm64-msvc": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.5.2.tgz",
      "integrity": "sha512-sMPyTvRcNKXseNQ/7qRfVRLa0VhR0esmQ29DD6pqvG71+JdVnESJaHPA8t7bc67KD5spP3+DOCNLhqlEI2ZgQg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-x64-msvc": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.5.2.tgz",
      "integrity": "sha512-W5VvyZHnxG/2ukhZF/9Ikdra5fdNftxI6ybeVKYvBPDtyx7x4jPPSNduUkfH5fo3zG0JQ0bPxgy41af2JX5D4Q==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nolyfill/is-core-module": {
      "version": "1.0.39",
      "resolved": "https://registry.npmjs.org/@nolyfill/is-core-module/-/is-core-module-1.0.39.tgz",
      "integrity": "sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12.4.0"
      }
    },
    "node_modules/@panva/hkdf": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@panva/hkdf/-/hkdf-1.2.1.tgz",
      "integrity": "sha512-6oclG6Y3PiDFcoyk8srjLfVKyMfVCKJ27JwNPViuXziFpmdz+MZnZN/aKY0JGXgYuO/VghU0jcOAZgWXZ1Dmrw==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/panva"
      }
    },
    "node_modules/@paulirish/trace_engine": {
      "version": "0.0.23",
      "resolved": "https://registry.npmjs.org/@paulirish/trace_engine/-/trace_engine-0.0.23.tgz",
      "integrity": "sha512-2ym/q7HhC5K+akXkNV6Gip3oaHpbI6TsGjmcAsl7bcJ528MVbacPQeoauLFEeLXH4ulJvsxQwNDIg/kAEhFZxw==",
      "dev": true,
      "license": "BSD-3-Clause"
    },
    "node_modules/@playwright/test": {
      "version": "1.55.0",
      "resolved": "https://registry.npmjs.org/@playwright/test/-/test-1.55.0.tgz",
      "integrity": "sha512-04IXzPwHrW69XusN/SIdDdKZBzMfOT9UNT/YiJit/xpy2VuAoB8NHc8Aplb96zsWDddLnbkPL3TsmrS04ZU2xQ==",
      "devOptional": true,
      "license": "Apache-2.0",
      "dependencies": {
        "playwright": "1.55.0"
      },
      "bin": {
        "playwright": "cli.js"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@pmndrs/handle": {
      "version": "6.6.25",
      "resolved": "https://registry.npmjs.org/@pmndrs/handle/-/handle-6.6.25.tgz",
      "integrity": "sha512-Y/dCuSCtGZ26rqR2YAUnCuBPrYkege2isDFlfLICGFKuwjgj1QBeYagooyQ0YLiw20WhN2PX8ChC7MikHr09Jg==",
      "license": "SEE LICENSE IN LICENSE",
      "dependencies": {
        "@pmndrs/pointer-events": "~6.6.25",
        "zustand": "^4.5.2"
      }
    },
    "node_modules/@pmndrs/handle/node_modules/zustand": {
      "version": "4.5.7",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-4.5.7.tgz",
      "integrity": "sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==",
      "license": "MIT",
      "dependencies": {
        "use-sync-external-store": "^1.2.2"
      },
      "engines": {
        "node": ">=12.7.0"
      },
      "peerDependencies": {
        "@types/react": ">=16.8",
        "immer": ">=9.0.6",
        "react": ">=16.8"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "immer": {
          "optional": true
        },
        "react": {
          "optional": true
        }
      }
    },
    "node_modules/@pmndrs/pointer-events": {
      "version": "6.6.25",
      "resolved": "https://registry.npmjs.org/@pmndrs/pointer-events/-/pointer-events-6.6.25.tgz",
      "integrity": "sha512-OD3z5I6859NOsyLoh5tFeEQAa+P5ngHtq83i3lrjpBIg96K6HwWPXu1xexamClZTWS1KqYCLqOWMpRbq2po80g==",
      "license": "SEE LICENSE IN LICENSE"
    },
    "node_modules/@pmndrs/xr": {
      "version": "6.6.25",
      "resolved": "https://registry.npmjs.org/@pmndrs/xr/-/xr-6.6.25.tgz",
      "integrity": "sha512-v3djaMcMAL1pGz7hkHtv1+UguS+lXE9w40TgDiN+QsF7RlblegA1In8c4PSXXJpIg0lG7bs7AFeELYBjuIrxOQ==",
      "license": "SEE LICENSE IN LICENSE",
      "dependencies": {
        "@iwer/devui": "^1.1.1",
        "@iwer/sem": "~0.2.5",
        "@pmndrs/pointer-events": "~6.6.25",
        "iwer": "^2.1.0",
        "meshline": "^3.3.1",
        "zustand": "^4.5.2"
      },
      "peerDependencies": {
        "three": "*"
      }
    },
    "node_modules/@pmndrs/xr/node_modules/zustand": {
      "version": "4.5.7",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-4.5.7.tgz",
      "integrity": "sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==",
      "license": "MIT",
      "dependencies": {
        "use-sync-external-store": "^1.2.2"
      },
      "engines": {
        "node": ">=12.7.0"
      },
      "peerDependencies": {
        "@types/react": ">=16.8",
        "immer": ">=9.0.6",
        "react": ">=16.8"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "immer": {
          "optional": true
        },
        "react": {
          "optional": true
        }
      }
    },
    "node_modules/@polka/url": {
      "version": "1.0.0-next.29",
      "resolved": "https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.29.tgz",
      "integrity": "sha512-wwQAWhWSuHaag8c4q/KN/vCoeOJYshAIvMQwD4GpSb3OiZklFfvAgmj0VCBBImRpuF/aFgIRzllXlVX93Jevww==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@prisma/client": {
      "version": "6.15.0",
      "resolved": "https://registry.npmjs.org/@prisma/client/-/client-6.15.0.tgz",
      "integrity": "sha512-wR2LXUbOH4cL/WToatI/Y2c7uzni76oNFND7+23ypLllBmIS8e3ZHhO+nud9iXSXKFt1SoM3fTZvHawg63emZw==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "peerDependencies": {
        "prisma": "*",
        "typescript": ">=5.1.0"
      },
      "peerDependenciesMeta": {
        "prisma": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@prisma/config": {
      "version": "6.15.0",
      "resolved": "https://registry.npmjs.org/@prisma/config/-/config-6.15.0.tgz",
      "integrity": "sha512-KMEoec9b2u6zX0EbSEx/dRpx1oNLjqJEBZYyK0S3TTIbZ7GEGoVyGyFRk4C72+A38cuPLbfQGQvgOD+gBErKlA==",
      "devOptional": true,
      "license": "Apache-2.0",
      "dependencies": {
        "c12": "3.1.0",
        "deepmerge-ts": "7.1.5",
        "effect": "3.16.12",
        "empathic": "2.0.0"
      }
    },
    "node_modules/@prisma/debug": {
      "version": "6.15.0",
      "resolved": "https://registry.npmjs.org/@prisma/debug/-/debug-6.15.0.tgz",
      "integrity": "sha512-y7cSeLuQmyt+A3hstAs6tsuAiVXSnw9T55ra77z0nbNkA8Lcq9rNcQg6PI00by/+WnE/aMRJ/W7sZWn2cgIy1g==",
      "devOptional": true,
      "license": "Apache-2.0"
    },
    "node_modules/@prisma/engines": {
      "version": "6.15.0",
      "resolved": "https://registry.npmjs.org/@prisma/engines/-/engines-6.15.0.tgz",
      "integrity": "sha512-opITiR5ddFJ1N2iqa7mkRlohCZqVSsHhRcc29QXeldMljOf4FSellLT0J5goVb64EzRTKcIDeIsJBgmilNcKxA==",
      "devOptional": true,
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@prisma/debug": "6.15.0",
        "@prisma/engines-version": "6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb",
        "@prisma/fetch-engine": "6.15.0",
        "@prisma/get-platform": "6.15.0"
      }
    },
    "node_modules/@prisma/engines-version": {
      "version": "6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb",
      "resolved": "https://registry.npmjs.org/@prisma/engines-version/-/engines-version-6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb.tgz",
      "integrity": "sha512-a/46aK5j6L3ePwilZYEgYDPrhBQ/n4gYjLxT5YncUTJJNRnTCVjPF86QdzUOLRdYjCLfhtZp9aum90W0J+trrg==",
      "devOptional": true,
      "license": "Apache-2.0"
    },
    "node_modules/@prisma/fetch-engine": {
      "version": "6.15.0",
      "resolved": "https://registry.npmjs.org/@prisma/fetch-engine/-/fetch-engine-6.15.0.tgz",
      "integrity": "sha512-xcT5f6b+OWBq6vTUnRCc7qL+Im570CtwvgSj+0MTSGA1o9UDSKZ/WANvwtiRXdbYWECpyC3CukoG3A04VTAPHw==",
      "devOptional": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@prisma/debug": "6.15.0",
        "@prisma/engines-version": "6.15.0-5.85179d7826409ee107a6ba334b5e305ae3fba9fb",
        "@prisma/get-platform": "6.15.0"
      }
    },
    "node_modules/@prisma/get-platform": {
      "version": "6.15.0",
      "resolved": "https://registry.npmjs.org/@prisma/get-platform/-/get-platform-6.15.0.tgz",
      "integrity": "sha512-Jbb+Xbxyp05NSR1x2epabetHiXvpO8tdN2YNoWoA/ZsbYyxxu/CO/ROBauIFuMXs3Ti+W7N7SJtWsHGaWte9Rg==",
      "devOptional": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@prisma/debug": "6.15.0"
      }
    },
    "node_modules/@puppeteer/browsers": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@puppeteer/browsers/-/browsers-2.3.0.tgz",
      "integrity": "sha512-ioXoq9gPxkss4MYhD+SFaU9p1IHFUX0ILAWFPyjGaBdjLsYAlZw6j1iLA0N/m12uVHLFDfSYNF7EQccjinIMDA==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "debug": "^4.3.5",
        "extract-zip": "^2.0.1",
        "progress": "^2.0.3",
        "proxy-agent": "^6.4.0",
        "semver": "^7.6.3",
        "tar-fs": "^3.0.6",
        "unbzip2-stream": "^1.4.3",
        "yargs": "^17.7.2"
      },
      "bin": {
        "browsers": "lib/cjs/main-cli.js"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@puppeteer/browsers/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@puppeteer/browsers/node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@react-email/body": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@react-email/body/-/body-0.1.0.tgz",
      "integrity": "sha512-o1bcSAmDYNNHECbkeyceCVPGmVsYvT+O3sSO/Ct7apKUu3JphTi31hu+0Nwqr/pgV5QFqdoT5vdS3SW5DJFHgQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/button": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@react-email/button/-/button-0.2.0.tgz",
      "integrity": "sha512-8i+v6cMxr2emz4ihCrRiYJPp2/sdYsNNsBzXStlcA+/B9Umpm5Jj3WJKYpgTPM+aeyiqlG/MMI1AucnBm4f1oQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/code-block": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@react-email/code-block/-/code-block-0.1.0.tgz",
      "integrity": "sha512-jSpHFsgqnQXxDIssE4gvmdtFncaFQz5D6e22BnVjcCPk/udK+0A9jRwGFEG8JD2si9ZXBmU4WsuqQEczuZn4ww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prismjs": "^1.30.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/code-inline": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/@react-email/code-inline/-/code-inline-0.0.5.tgz",
      "integrity": "sha512-MmAsOzdJpzsnY2cZoPHFPk6uDO/Ncpb4Kh1hAt9UZc1xOW3fIzpe1Pi9y9p6wwUmpaeeDalJxAxH6/fnTquinA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/column": {
      "version": "0.0.13",
      "resolved": "https://registry.npmjs.org/@react-email/column/-/column-0.0.13.tgz",
      "integrity": "sha512-Lqq17l7ShzJG/d3b1w/+lVO+gp2FM05ZUo/nW0rjxB8xBICXOVv6PqjDnn3FXKssvhO5qAV20lHM6S+spRhEwQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/components": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@react-email/components/-/components-0.5.3.tgz",
      "integrity": "sha512-8G5vsoMehuGOT4cDqaYLdpagtqCYPl4vThXNylClxO6SrN2w9Mh1+i2RNGj/rdqh/woamHORjlXMYCA/kzDMew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@react-email/body": "0.1.0",
        "@react-email/button": "0.2.0",
        "@react-email/code-block": "0.1.0",
        "@react-email/code-inline": "0.0.5",
        "@react-email/column": "0.0.13",
        "@react-email/container": "0.0.15",
        "@react-email/font": "0.0.9",
        "@react-email/head": "0.0.12",
        "@react-email/heading": "0.0.15",
        "@react-email/hr": "0.0.11",
        "@react-email/html": "0.0.11",
        "@react-email/img": "0.0.11",
        "@react-email/link": "0.0.12",
        "@react-email/markdown": "0.0.15",
        "@react-email/preview": "0.0.13",
        "@react-email/render": "1.2.3",
        "@react-email/row": "0.0.12",
        "@react-email/section": "0.0.16",
        "@react-email/tailwind": "1.2.2",
        "@react-email/text": "0.1.5"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/container": {
      "version": "0.0.15",
      "resolved": "https://registry.npmjs.org/@react-email/container/-/container-0.0.15.tgz",
      "integrity": "sha512-Qo2IQo0ru2kZq47REmHW3iXjAQaKu4tpeq/M8m1zHIVwKduL2vYOBQWbC2oDnMtWPmkBjej6XxgtZByxM6cCFg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/font": {
      "version": "0.0.9",
      "resolved": "https://registry.npmjs.org/@react-email/font/-/font-0.0.9.tgz",
      "integrity": "sha512-4zjq23oT9APXkerqeslPH3OZWuh5X4crHK6nx82mVHV2SrLba8+8dPEnWbaACWTNjOCbcLIzaC9unk7Wq2MIXw==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/head": {
      "version": "0.0.12",
      "resolved": "https://registry.npmjs.org/@react-email/head/-/head-0.0.12.tgz",
      "integrity": "sha512-X2Ii6dDFMF+D4niNwMAHbTkeCjlYYnMsd7edXOsi0JByxt9wNyZ9EnhFiBoQdqkE+SMDcu8TlNNttMrf5sJeMA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/heading": {
      "version": "0.0.15",
      "resolved": "https://registry.npmjs.org/@react-email/heading/-/heading-0.0.15.tgz",
      "integrity": "sha512-xF2GqsvBrp/HbRHWEfOgSfRFX+Q8I5KBEIG5+Lv3Vb2R/NYr0s8A5JhHHGf2pWBMJdbP4B2WHgj/VUrhy8dkIg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/hr": {
      "version": "0.0.11",
      "resolved": "https://registry.npmjs.org/@react-email/hr/-/hr-0.0.11.tgz",
      "integrity": "sha512-S1gZHVhwOsd1Iad5IFhpfICwNPMGPJidG/Uysy1AwmspyoAP5a4Iw3OWEpINFdgh9MHladbxcLKO2AJO+cA9Lw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/html": {
      "version": "0.0.11",
      "resolved": "https://registry.npmjs.org/@react-email/html/-/html-0.0.11.tgz",
      "integrity": "sha512-qJhbOQy5VW5qzU74AimjAR9FRFQfrMa7dn4gkEXKMB/S9xZN8e1yC1uA9C15jkXI/PzmJ0muDIWmFwatm5/+VA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/img": {
      "version": "0.0.11",
      "resolved": "https://registry.npmjs.org/@react-email/img/-/img-0.0.11.tgz",
      "integrity": "sha512-aGc8Y6U5C3igoMaqAJKsCpkbm1XjguQ09Acd+YcTKwjnC2+0w3yGUJkjWB2vTx4tN8dCqQCXO8FmdJpMfOA9EQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/link": {
      "version": "0.0.12",
      "resolved": "https://registry.npmjs.org/@react-email/link/-/link-0.0.12.tgz",
      "integrity": "sha512-vF+xxQk2fGS1CN7UPQDbzvcBGfffr+GjTPNiWM38fhBfsLv6A/YUfaqxWlmL7zLzVmo0K2cvvV9wxlSyNba1aQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/markdown": {
      "version": "0.0.15",
      "resolved": "https://registry.npmjs.org/@react-email/markdown/-/markdown-0.0.15.tgz",
      "integrity": "sha512-UQA9pVm5sbflgtg3EX3FquUP4aMBzmLReLbGJ6DZQZnAskBF36aI56cRykDq1o+1jT+CKIK1CducPYziaXliag==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "md-to-react-email": "^5.0.5"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/preview": {
      "version": "0.0.13",
      "resolved": "https://registry.npmjs.org/@react-email/preview/-/preview-0.0.13.tgz",
      "integrity": "sha512-F7j9FJ0JN/A4d7yr+aw28p4uX7VLWs7hTHtLo7WRyw4G+Lit6Zucq4UWKRxJC8lpsUdzVmG7aBJnKOT+urqs/w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/render": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/@react-email/render/-/render-1.2.3.tgz",
      "integrity": "sha512-qu3XYNkHGao3teJexVD5CrcgFkNLrzbZvpZN17a7EyQYUN3kHkTkE9saqY4VbvGx6QoNU3p8rsk/Xm++D/+pTw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "html-to-text": "^9.0.5",
        "prettier": "^3.5.3",
        "react-promise-suspense": "^0.3.4"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/row": {
      "version": "0.0.12",
      "resolved": "https://registry.npmjs.org/@react-email/row/-/row-0.0.12.tgz",
      "integrity": "sha512-HkCdnEjvK3o+n0y0tZKXYhIXUNPDx+2vq1dJTmqappVHXS5tXS6W5JOPZr5j+eoZ8gY3PShI2LWj5rWF7ZEtIQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/section": {
      "version": "0.0.16",
      "resolved": "https://registry.npmjs.org/@react-email/section/-/section-0.0.16.tgz",
      "integrity": "sha512-FjqF9xQ8FoeUZYKSdt8sMIKvoT9XF8BrzhT3xiFKdEMwYNbsDflcjfErJe3jb7Wj/es/lKTbV5QR1dnLzGpL3w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/tailwind": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@react-email/tailwind/-/tailwind-1.2.2.tgz",
      "integrity": "sha512-heO9Khaqxm6Ulm6p7HQ9h01oiiLRrZuuEQuYds/O7Iyp3c58sMVHZGIxiRXO/kSs857NZQycpjewEVKF3jhNTw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-email/text": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/@react-email/text/-/text-0.1.5.tgz",
      "integrity": "sha512-o5PNHFSE085VMXayxH+SJ1LSOtGsTv+RpNKnTiJDrJUwoBu77G3PlKOsZZQHCNyD28WsQpl9v2WcJLbQudqwPg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0 || ^19.0.0-rc"
      }
    },
    "node_modules/@react-spring/rafz": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@react-spring/rafz/-/rafz-9.6.1.tgz",
      "integrity": "sha512-v6qbgNRpztJFFfSE3e2W1Uz+g8KnIBs6SmzCzcVVF61GdGfGOuBrbjIcp+nUz301awVmREKi4eMQb2Ab2gGgyQ==",
      "license": "MIT"
    },
    "node_modules/@react-spring/three": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@react-spring/three/-/three-9.6.1.tgz",
      "integrity": "sha512-Tyw2YhZPKJAX3t2FcqvpLRb71CyTe1GvT3V+i+xJzfALgpk10uPGdGaQQ5Xrzmok1340DAeg2pR/MCfaW7b8AA==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/animated": "~9.6.1",
        "@react-spring/core": "~9.6.1",
        "@react-spring/shared": "~9.6.1",
        "@react-spring/types": "~9.6.1"
      },
      "peerDependencies": {
        "@react-three/fiber": ">=6.0",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0",
        "three": ">=0.126"
      }
    },
    "node_modules/@react-spring/three/node_modules/@react-spring/animated": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@react-spring/animated/-/animated-9.6.1.tgz",
      "integrity": "sha512-ls/rJBrAqiAYozjLo5EPPLLOb1LM0lNVQcXODTC1SMtS6DbuBCPaKco5svFUQFMP2dso3O+qcC4k9FsKc0KxMQ==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/shared": "~9.6.1",
        "@react-spring/types": "~9.6.1"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/@react-spring/three/node_modules/@react-spring/core": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@react-spring/core/-/core-9.6.1.tgz",
      "integrity": "sha512-3HAAinAyCPessyQNNXe5W0OHzRfa8Yo5P748paPcmMowZ/4sMfaZ2ZB6e5x5khQI8NusOHj8nquoutd6FRY5WQ==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/animated": "~9.6.1",
        "@react-spring/rafz": "~9.6.1",
        "@react-spring/shared": "~9.6.1",
        "@react-spring/types": "~9.6.1"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/react-spring/donate"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/@react-spring/three/node_modules/@react-spring/shared": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@react-spring/shared/-/shared-9.6.1.tgz",
      "integrity": "sha512-PBFBXabxFEuF8enNLkVqMC9h5uLRBo6GQhRMQT/nRTnemVENimgRd+0ZT4yFnAQ0AxWNiJfX3qux+bW2LbG6Bw==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/rafz": "~9.6.1",
        "@react-spring/types": "~9.6.1"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/@react-spring/types": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@react-spring/types/-/types-9.6.1.tgz",
      "integrity": "sha512-POu8Mk0hIU3lRXB3bGIGe4VHIwwDsQyoD1F394OK7STTiX9w4dG3cTLljjYswkQN+hDSHRrj4O36kuVa7KPU8Q==",
      "license": "MIT"
    },
    "node_modules/@react-three/drei": {
      "version": "9.112.0",
      "resolved": "https://registry.npmjs.org/@react-three/drei/-/drei-9.112.0.tgz",
      "integrity": "sha512-te+4tcNiRv3QizD04cg25oX51uUMVG5Y3iUaIX8tKi8aW3j7UM6XCFSKVYNOiT6P+d5h/ruSd5naX7oFvp3QOQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.11.2",
        "@mediapipe/tasks-vision": "0.10.8",
        "@monogrid/gainmap-js": "^3.0.5",
        "@react-spring/three": "~9.6.1",
        "@use-gesture/react": "^10.2.24",
        "camera-controls": "^2.4.2",
        "cross-env": "^7.0.3",
        "detect-gpu": "^5.0.28",
        "glsl-noise": "^0.0.0",
        "hls.js": "1.3.5",
        "maath": "^0.10.7",
        "meshline": "^3.1.6",
        "react-composer": "^5.0.3",
        "stats-gl": "^2.0.0",
        "stats.js": "^0.17.0",
        "suspend-react": "^0.1.3",
        "three-mesh-bvh": "^0.7.0",
        "three-stdlib": "^2.29.9",
        "troika-three-text": "^0.49.0",
        "tunnel-rat": "^0.1.2",
        "utility-types": "^3.10.0",
        "uuid": "^9.0.1",
        "zustand": "^3.7.1"
      },
      "peerDependencies": {
        "@react-three/fiber": ">=8.0",
        "react": ">=18.0",
        "react-dom": ">=18.0",
        "three": ">=0.137"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@react-three/drei/node_modules/react-composer": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/react-composer/-/react-composer-5.0.3.tgz",
      "integrity": "sha512-1uWd07EME6XZvMfapwZmc7NgCZqDemcvicRi3wMJzXsQLvZ3L7fTHVyPy1bZdnWXM4iPjYuNE+uJ41MLKeTtnA==",
      "license": "MIT",
      "dependencies": {
        "prop-types": "^15.6.0"
      },
      "peerDependencies": {
        "react": "^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/@react-three/drei/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/@react-three/drei/node_modules/zustand": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-3.7.2.tgz",
      "integrity": "sha512-PIJDIZKtokhof+9+60cpockVOq05sJzHCriyvaLBmEJixseQ1a5Kdov6fWZfWOu5SK9c+FhH1jU0tntLxRJYMA==",
      "license": "MIT",
      "engines": {
        "node": ">=12.7.0"
      },
      "peerDependencies": {
        "react": ">=16.8"
      },
      "peerDependenciesMeta": {
        "react": {
          "optional": true
        }
      }
    },
    "node_modules/@react-three/fiber": {
      "version": "9.3.0",
      "resolved": "https://registry.npmjs.org/@react-three/fiber/-/fiber-9.3.0.tgz",
      "integrity": "sha512-myPe3YL/C8+Eq939/4qIVEPBW/uxV0iiUbmjfwrs9sGKYDG8ib8Dz3Okq7BQt8P+0k4igedONbjXMQy84aDFmQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.17.8",
        "@types/react-reconciler": "^0.32.0",
        "@types/webxr": "*",
        "base64-js": "^1.5.1",
        "buffer": "^6.0.3",
        "its-fine": "^2.0.0",
        "react-reconciler": "^0.31.0",
        "react-use-measure": "^2.1.7",
        "scheduler": "^0.25.0",
        "suspend-react": "^0.1.3",
        "use-sync-external-store": "^1.4.0",
        "zustand": "^5.0.3"
      },
      "peerDependencies": {
        "expo": ">=43.0",
        "expo-asset": ">=8.4",
        "expo-file-system": ">=11.0",
        "expo-gl": ">=11.0",
        "react": "^19.0.0",
        "react-dom": "^19.0.0",
        "react-native": ">=0.78",
        "three": ">=0.156"
      },
      "peerDependenciesMeta": {
        "expo": {
          "optional": true
        },
        "expo-asset": {
          "optional": true
        },
        "expo-file-system": {
          "optional": true
        },
        "expo-gl": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        },
        "react-native": {
          "optional": true
        }
      }
    },
    "node_modules/@react-three/xr": {
      "version": "6.6.25",
      "resolved": "https://registry.npmjs.org/@react-three/xr/-/xr-6.6.25.tgz",
      "integrity": "sha512-PECfz2m78ZbzkExla/cX+VlQJNniM4KNwSntewdc36vqb3TZKwFXlSVIMT4jorWLxPxU0wrqcYpEo9Cj+585HA==",
      "license": "SEE LICENSE IN LICENSE",
      "dependencies": {
        "@pmndrs/pointer-events": "~6.6.25",
        "@pmndrs/xr": "~6.6.25",
        "suspend-react": "^0.1.3",
        "tunnel-rat": "^0.1.2",
        "zustand": "^4.5.2"
      },
      "peerDependencies": {
        "@react-three/fiber": ">=8",
        "react": ">=18",
        "react-dom": ">=18",
        "three": "*"
      }
    },
    "node_modules/@react-three/xr/node_modules/zustand": {
      "version": "4.5.7",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-4.5.7.tgz",
      "integrity": "sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==",
      "license": "MIT",
      "dependencies": {
        "use-sync-external-store": "^1.2.2"
      },
      "engines": {
        "node": ">=12.7.0"
      },
      "peerDependencies": {
        "@types/react": ">=16.8",
        "immer": ">=9.0.6",
        "react": ">=16.8"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "immer": {
          "optional": true
        },
        "react": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-babel": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-5.3.1.tgz",
      "integrity": "sha512-WFfdLWU/xVWKeRQnKmIAQULUI7Il0gZnBIH/ZFO069wYIfPu+8zrfp/KMW0atmELoRDq8FbiP3VCss9MhCut7Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.10.4",
        "@rollup/pluginutils": "^3.1.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0",
        "@types/babel__core": "^7.1.9",
        "rollup": "^1.20.0||^2.0.0"
      },
      "peerDependenciesMeta": {
        "@types/babel__core": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-node-resolve": {
      "version": "15.3.1",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-15.3.1.tgz",
      "integrity": "sha512-tgg6b91pAybXHJQMAAwW9VuWBO6Thi+q7BCNARLwSqlmsHz0XYURtGvh/AuwSADXSI4h/2uHbs7s4FzlZDGSGA==",
      "license": "MIT",
      "dependencies": {
        "@rollup/pluginutils": "^5.0.1",
        "@types/resolve": "1.20.2",
        "deepmerge": "^4.2.2",
        "is-module": "^1.0.0",
        "resolve": "^1.22.1"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.78.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-node-resolve/node_modules/@rollup/pluginutils": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.2.0.tgz",
      "integrity": "sha512-qWJ2ZTbmumwiLFomfzTyt5Kng4hwPi9rwCYN4SHb6eaRU1KNO4ccxINHr/VhH4GgPlt1XfSTLX2LBTme8ne4Zw==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "estree-walker": "^2.0.2",
        "picomatch": "^4.0.2"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-node-resolve/node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==",
      "license": "MIT"
    },
    "node_modules/@rollup/plugin-node-resolve/node_modules/picomatch": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/@rollup/plugin-replace": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-replace/-/plugin-replace-2.4.2.tgz",
      "integrity": "sha512-IGcu+cydlUMZ5En85jxHH4qj2hta/11BHq95iHEyb2sbgiN0eCdzvUcHw5gt9pBL5lTi4JDYJ1acCoMGpTvEZg==",
      "license": "MIT",
      "dependencies": {
        "@rollup/pluginutils": "^3.1.0",
        "magic-string": "^0.25.7"
      },
      "peerDependencies": {
        "rollup": "^1.20.0 || ^2.0.0"
      }
    },
    "node_modules/@rollup/plugin-replace/node_modules/magic-string": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz",
      "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
      "license": "MIT",
      "dependencies": {
        "sourcemap-codec": "^1.4.8"
      }
    },
    "node_modules/@rollup/plugin-terser": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-terser/-/plugin-terser-0.4.4.tgz",
      "integrity": "sha512-XHeJC5Bgvs8LfukDwWZp7yeqin6ns8RTl2B9avbejt6tZqsqvVoWI7ZTQrcNsfKEDWBTnTxM8nMDkO2IFFbd0A==",
      "license": "MIT",
      "dependencies": {
        "serialize-javascript": "^6.0.1",
        "smob": "^1.0.0",
        "terser": "^5.17.4"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.0.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/pluginutils": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-3.1.0.tgz",
      "integrity": "sha512-GksZ6pr6TpIjHm8h9lSQ8pi8BE9VeubNT0OMJ3B5uZJ8pz73NPiqOtCog/x2/QzM1ENChPKxMDhiQuRHsqc+lg==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "0.0.39",
        "estree-walker": "^1.0.1",
        "picomatch": "^2.2.2"
      },
      "engines": {
        "node": ">= 8.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0"
      }
    },
    "node_modules/@rollup/pluginutils/node_modules/@types/estree": {
      "version": "0.0.39",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.39.tgz",
      "integrity": "sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw==",
      "license": "MIT"
    },
    "node_modules/@rtsao/scc": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
      "integrity": "sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@rushstack/eslint-patch": {
      "version": "1.12.0",
      "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.12.0.tgz",
      "integrity": "sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@selderee/plugin-htmlparser2": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@selderee/plugin-htmlparser2/-/plugin-htmlparser2-0.11.0.tgz",
      "integrity": "sha512-P33hHGdldxGabLFjPPpaTxVolMrzrcegejx+0GxjrIb9Zv48D8yAIA/QTDR2dFl7Uz7urX8aX6+5bCZslr+gWQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "domhandler": "^5.0.3",
        "selderee": "^0.11.0"
      },
      "funding": {
        "url": "https://ko-fi.com/killymxi"
      }
    },
    "node_modules/@sentry/core": {
      "version": "6.19.7",
      "resolved": "https://registry.npmjs.org/@sentry/core/-/core-6.19.7.tgz",
      "integrity": "sha512-tOfZ/umqB2AcHPGbIrsFLcvApdTm9ggpi/kQZFkej7kMphjT+SGBiQfYtjyg9jcRW+ilAR4JXC9BGKsdEQ+8Vw==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@sentry/hub": "6.19.7",
        "@sentry/minimal": "6.19.7",
        "@sentry/types": "6.19.7",
        "@sentry/utils": "6.19.7",
        "tslib": "^1.9.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@sentry/core/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "dev": true,
      "license": "0BSD"
    },
    "node_modules/@sentry/hub": {
      "version": "6.19.7",
      "resolved": "https://registry.npmjs.org/@sentry/hub/-/hub-6.19.7.tgz",
      "integrity": "sha512-y3OtbYFAqKHCWezF0EGGr5lcyI2KbaXW2Ik7Xp8Mu9TxbSTuwTe4rTntwg8ngPjUQU3SUHzgjqVB8qjiGqFXCA==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@sentry/types": "6.19.7",
        "@sentry/utils": "6.19.7",
        "tslib": "^1.9.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@sentry/hub/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "dev": true,
      "license": "0BSD"
    },
    "node_modules/@sentry/minimal": {
      "version": "6.19.7",
      "resolved": "https://registry.npmjs.org/@sentry/minimal/-/minimal-6.19.7.tgz",
      "integrity": "sha512-wcYmSJOdvk6VAPx8IcmZgN08XTXRwRtB1aOLZm+MVHjIZIhHoBGZJYTVQS/BWjldsamj2cX3YGbGXNunaCfYJQ==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@sentry/hub": "6.19.7",
        "@sentry/types": "6.19.7",
        "tslib": "^1.9.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@sentry/minimal/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "dev": true,
      "license": "0BSD"
    },
    "node_modules/@sentry/node": {
      "version": "6.19.7",
      "resolved": "https://registry.npmjs.org/@sentry/node/-/node-6.19.7.tgz",
      "integrity": "sha512-gtmRC4dAXKODMpHXKfrkfvyBL3cI8y64vEi3fDD046uqYcrWdgoQsffuBbxMAizc6Ez1ia+f0Flue6p15Qaltg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@sentry/core": "6.19.7",
        "@sentry/hub": "6.19.7",
        "@sentry/types": "6.19.7",
        "@sentry/utils": "6.19.7",
        "cookie": "^0.4.1",
        "https-proxy-agent": "^5.0.0",
        "lru_map": "^0.3.3",
        "tslib": "^1.9.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@sentry/node/node_modules/cookie": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.2.tgz",
      "integrity": "sha512-aSWTXFzaKWkvHO1Ny/s+ePFpvKsPnjc551iI41v3ny/ow6tBG5Vd+FuqGNhh1LxOmVzOlGUriIlOaokOvhaStA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/@sentry/node/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "dev": true,
      "license": "0BSD"
    },
    "node_modules/@sentry/types": {
      "version": "6.19.7",
      "resolved": "https://registry.npmjs.org/@sentry/types/-/types-6.19.7.tgz",
      "integrity": "sha512-jH84pDYE+hHIbVnab3Hr+ZXr1v8QABfhx39KknxqKWr2l0oEItzepV0URvbEhB446lk/S/59230dlUUIBGsXbg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@sentry/utils": {
      "version": "6.19.7",
      "resolved": "https://registry.npmjs.org/@sentry/utils/-/utils-6.19.7.tgz",
      "integrity": "sha512-z95ECmE3i9pbWoXQrD/7PgkBAzJYR+iXtPuTkpBjDKs86O3mT+PXOT3BAn79w2wkn7/i3vOGD2xVr1uiMl26dA==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@sentry/types": "6.19.7",
        "tslib": "^1.9.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@sentry/utils/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "dev": true,
      "license": "0BSD"
    },
    "node_modules/@standard-schema/spec": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/spec/-/spec-1.0.0.tgz",
      "integrity": "sha512-m2bOd0f2RT9k8QJx1JN85cZYyH1RqFBdlwtkSlf4tBDYLCiiZnv1fIIwacK6cqwXavOydf0NPToMQgpKq+dVlA==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/@standard-schema/utils": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/utils/-/utils-0.3.0.tgz",
      "integrity": "sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g==",
      "license": "MIT"
    },
    "node_modules/@stripe/react-stripe-js": {
      "version": "3.9.2",
      "resolved": "https://registry.npmjs.org/@stripe/react-stripe-js/-/react-stripe-js-3.9.2.tgz",
      "integrity": "sha512-urAZek4LrnHWfk4WYXItOiX+6xyxjcn0SkhBDoysXphLkUt92UWCd5+NlomhVqaLo98XiUQGZRiRcL8HOHZ8Jw==",
      "license": "MIT",
      "dependencies": {
        "prop-types": "^15.7.2"
      },
      "peerDependencies": {
        "@stripe/stripe-js": ">=1.44.1 <8.0.0",
        "react": ">=16.8.0 <20.0.0",
        "react-dom": ">=16.8.0 <20.0.0"
      }
    },
    "node_modules/@stripe/stripe-js": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@stripe/stripe-js/-/stripe-js-7.9.0.tgz",
      "integrity": "sha512-ggs5k+/0FUJcIgNY08aZTqpBTtbExkJMYMLSMwyucrhtWexVOEY1KJmhBsxf+E/Q15f5rbwBpj+t0t2AW2oCsQ==",
      "license": "MIT",
      "engines": {
        "node": ">=12.16"
      }
    },
    "node_modules/@surma/rollup-plugin-off-main-thread": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/@surma/rollup-plugin-off-main-thread/-/rollup-plugin-off-main-thread-2.2.3.tgz",
      "integrity": "sha512-lR8q/9W7hZpMWweNiAKU7NQerBnzQQLvi8qnTDU/fxItPhtZVMbPV3lbCwjhIlNBe9Bbr5V+KHshvWmVSG9cxQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "ejs": "^3.1.6",
        "json5": "^2.2.0",
        "magic-string": "^0.25.0",
        "string.prototype.matchall": "^4.0.6"
      }
    },
    "node_modules/@surma/rollup-plugin-off-main-thread/node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@surma/rollup-plugin-off-main-thread/node_modules/magic-string": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.9.tgz",
      "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
      "license": "MIT",
      "dependencies": {
        "sourcemap-codec": "^1.4.8"
      }
    },
    "node_modules/@swc/helpers": {
      "version": "0.5.15",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.15.tgz",
      "integrity": "sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@tailwindcss/node": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.12.tgz",
      "integrity": "sha512-3hm9brwvQkZFe++SBt+oLjo4OLDtkvlE8q2WalaD/7QWaeM7KEJbAiY/LJZUaCs7Xa8aUu4xy3uoyX4q54UVdQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/remapping": "^2.3.4",
        "enhanced-resolve": "^5.18.3",
        "jiti": "^2.5.1",
        "lightningcss": "1.30.1",
        "magic-string": "^0.30.17",
        "source-map-js": "^1.2.1",
        "tailwindcss": "4.1.12"
      }
    },
    "node_modules/@tailwindcss/oxide": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.12.tgz",
      "integrity": "sha512-gM5EoKHW/ukmlEtphNwaGx45fGoEmP10v51t9unv55voWh6WrOL19hfuIdo2FjxIaZzw776/BUQg7Pck++cIVw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "detect-libc": "^2.0.4",
        "tar": "^7.4.3"
      },
      "engines": {
        "node": ">= 10"
      },
      "optionalDependencies": {
        "@tailwindcss/oxide-android-arm64": "4.1.12",
        "@tailwindcss/oxide-darwin-arm64": "4.1.12",
        "@tailwindcss/oxide-darwin-x64": "4.1.12",
        "@tailwindcss/oxide-freebsd-x64": "4.1.12",
        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.12",
        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.12",
        "@tailwindcss/oxide-linux-arm64-musl": "4.1.12",
        "@tailwindcss/oxide-linux-x64-gnu": "4.1.12",
        "@tailwindcss/oxide-linux-x64-musl": "4.1.12",
        "@tailwindcss/oxide-wasm32-wasi": "4.1.12",
        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.12",
        "@tailwindcss/oxide-win32-x64-msvc": "4.1.12"
      }
    },
    "node_modules/@tailwindcss/oxide-android-arm64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.12.tgz",
      "integrity": "sha512-oNY5pq+1gc4T6QVTsZKwZaGpBb2N1H1fsc1GD4o7yinFySqIuRZ2E4NvGasWc6PhYJwGK2+5YT1f9Tp80zUQZQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-arm64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.12.tgz",
      "integrity": "sha512-cq1qmq2HEtDV9HvZlTtrj671mCdGB93bVY6J29mwCyaMYCP/JaUBXxrQQQm7Qn33AXXASPUb2HFZlWiiHWFytw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-x64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.12.tgz",
      "integrity": "sha512-6UCsIeFUcBfpangqlXay9Ffty9XhFH1QuUFn0WV83W8lGdX8cD5/+2ONLluALJD5+yJ7k8mVtwy3zMZmzEfbLg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-freebsd-x64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.12.tgz",
      "integrity": "sha512-JOH/f7j6+nYXIrHobRYCtoArJdMJh5zy5lr0FV0Qu47MID/vqJAY3r/OElPzx1C/wdT1uS7cPq+xdYYelny1ww==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.12.tgz",
      "integrity": "sha512-v4Ghvi9AU1SYgGr3/j38PD8PEe6bRfTnNSUE3YCMIRrrNigCFtHZ2TCm8142X8fcSqHBZBceDx+JlFJEfNg5zQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.12.tgz",
      "integrity": "sha512-YP5s1LmetL9UsvVAKusHSyPlzSRqYyRB0f+Kl/xcYQSPLEw/BvGfxzbH+ihUciePDjiXwHh+p+qbSP3SlJw+6g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.12.tgz",
      "integrity": "sha512-V8pAM3s8gsrXcCv6kCHSuwyb/gPsd863iT+v1PGXC4fSL/OJqsKhfK//v8P+w9ThKIoqNbEnsZqNy+WDnwQqCA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.12.tgz",
      "integrity": "sha512-xYfqYLjvm2UQ3TZggTGrwxjYaLB62b1Wiysw/YE3Yqbh86sOMoTn0feF98PonP7LtjsWOWcXEbGqDL7zv0uW8Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.12.tgz",
      "integrity": "sha512-ha0pHPamN+fWZY7GCzz5rKunlv9L5R8kdh+YNvP5awe3LtuXb5nRi/H27GeL2U+TdhDOptU7T6Is7mdwh5Ar3A==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.12.tgz",
      "integrity": "sha512-4tSyu3dW+ktzdEpuk6g49KdEangu3eCYoqPhWNsZgUhyegEda3M9rG0/j1GV/JjVVsj+lG7jWAyrTlLzd/WEBg==",
      "bundleDependencies": [
        "@napi-rs/wasm-runtime",
        "@emnapi/core",
        "@emnapi/runtime",
        "@tybys/wasm-util",
        "@emnapi/wasi-threads",
        "tslib"
      ],
      "cpu": [
        "wasm32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/core": "^1.4.5",
        "@emnapi/runtime": "^1.4.5",
        "@emnapi/wasi-threads": "^1.0.4",
        "@napi-rs/wasm-runtime": "^0.2.12",
        "@tybys/wasm-util": "^0.10.0",
        "tslib": "^2.8.0"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.12.tgz",
      "integrity": "sha512-iGLyD/cVP724+FGtMWslhcFyg4xyYyM+5F4hGvKA7eifPkXHRAUDFaimu53fpNg9X8dfP75pXx/zFt/jlNF+lg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.12.tgz",
      "integrity": "sha512-NKIh5rzw6CpEodv/++r0hGLlfgT/gFN+5WNdZtvh6wpU2BpGNgdjvj6H2oFc8nCM839QM1YOhjpgbAONUb4IxA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/postcss": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/postcss/-/postcss-4.1.12.tgz",
      "integrity": "sha512-5PpLYhCAwf9SJEeIsSmCDLgyVfdBhdBpzX1OJ87anT9IVR0Z9pjM0FNixCAUAHGnMBGB8K99SwAheXrT0Kh6QQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "@tailwindcss/node": "4.1.12",
        "@tailwindcss/oxide": "4.1.12",
        "postcss": "^8.4.41",
        "tailwindcss": "4.1.12"
      }
    },
    "node_modules/@tanstack/react-virtual": {
      "version": "3.13.12",
      "resolved": "https://registry.npmjs.org/@tanstack/react-virtual/-/react-virtual-3.13.12.tgz",
      "integrity": "sha512-Gd13QdxPSukP8ZrkbgS2RwoZseTTbQPLnQEn7HY/rqtM+8Zt95f7xKC7N0EsKs7aoz0WzZ+fditZux+F8EzYxA==",
      "license": "MIT",
      "dependencies": {
        "@tanstack/virtual-core": "3.13.12"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/@tanstack/virtual-core": {
      "version": "3.13.12",
      "resolved": "https://registry.npmjs.org/@tanstack/virtual-core/-/virtual-core-3.13.12.tgz",
      "integrity": "sha512-1YBOJfRHV4sXUmWsFSf5rQor4Ss82G8dQWLRbnk3GA4jeP8hQt1hxXh0tmflpC0dz3VgEv/1+qwPyLeWkQuPFA==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      }
    },
    "node_modules/@tensorflow/tfjs": {
      "version": "4.22.0",
      "resolved": "https://registry.npmjs.org/@tensorflow/tfjs/-/tfjs-4.22.0.tgz",
      "integrity": "sha512-0TrIrXs6/b7FLhLVNmfh8Sah6JgjBPH4mZ8JGb7NU6WW+cx00qK5BcAZxw7NCzxj6N8MRAIfHq+oNbPUNG5VAg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@tensorflow/tfjs-backend-cpu": "4.22.0",
        "@tensorflow/tfjs-backend-webgl": "4.22.0",
        "@tensorflow/tfjs-converter": "4.22.0",
        "@tensorflow/tfjs-core": "4.22.0",
        "@tensorflow/tfjs-data": "4.22.0",
        "@tensorflow/tfjs-layers": "4.22.0",
        "argparse": "^1.0.10",
        "chalk": "^4.1.0",
        "core-js": "3.29.1",
        "regenerator-runtime": "^0.13.5",
        "yargs": "^16.0.3"
      },
      "bin": {
        "tfjs-custom-module": "dist/tools/custom_module/cli.js"
      }
    },
    "node_modules/@tensorflow/tfjs-backend-cpu": {
      "version": "4.22.0",
      "resolved": "https://registry.npmjs.org/@tensorflow/tfjs-backend-cpu/-/tfjs-backend-cpu-4.22.0.tgz",
      "integrity": "sha512-1u0FmuLGuRAi8D2c3cocHTASGXOmHc/4OvoVDENJayjYkS119fcTcQf4iHrtLthWyDIPy3JiPhRrZQC9EwnhLw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@types/seedrandom": "^2.4.28",
        "seedrandom": "^3.0.5"
      },
      "engines": {
        "yarn": ">= 1.3.2"
      },
      "peerDependencies": {
        "@tensorflow/tfjs-core": "4.22.0"
      }
    },
    "node_modules/@tensorflow/tfjs-backend-webgl": {
      "version": "4.22.0",
      "resolved": "https://registry.npmjs.org/@tensorflow/tfjs-backend-webgl/-/tfjs-backend-webgl-4.22.0.tgz",
      "integrity": "sha512-H535XtZWnWgNwSzv538czjVlbJebDl5QTMOth4RXr2p/kJ1qSIXE0vZvEtO+5EC9b00SvhplECny2yDewQb/Yg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@tensorflow/tfjs-backend-cpu": "4.22.0",
        "@types/offscreencanvas": "~2019.3.0",
        "@types/seedrandom": "^2.4.28",
        "seedrandom": "^3.0.5"
      },
      "engines": {
        "yarn": ">= 1.3.2"
      },
      "peerDependencies": {
        "@tensorflow/tfjs-core": "4.22.0"
      }
    },
    "node_modules/@tensorflow/tfjs-converter": {
      "version": "4.22.0",
      "resolved": "https://registry.npmjs.org/@tensorflow/tfjs-converter/-/tfjs-converter-4.22.0.tgz",
      "integrity": "sha512-PT43MGlnzIo+YfbsjM79Lxk9lOq6uUwZuCc8rrp0hfpLjF6Jv8jS84u2jFb+WpUeuF4K33ZDNx8CjiYrGQ2trQ==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@tensorflow/tfjs-core": "4.22.0"
      }
    },
    "node_modules/@tensorflow/tfjs-core": {
      "version": "4.22.0",
      "resolved": "https://registry.npmjs.org/@tensorflow/tfjs-core/-/tfjs-core-4.22.0.tgz",
      "integrity": "sha512-LEkOyzbknKFoWUwfkr59vSB68DMJ4cjwwHgicXN0DUi3a0Vh1Er3JQqCI1Hl86GGZQvY8ezVrtDIvqR1ZFW55A==",
      "license": "Apache-2.0",
      "dependencies": {
        "@types/long": "^4.0.1",
        "@types/offscreencanvas": "~2019.7.0",
        "@types/seedrandom": "^2.4.28",
        "@webgpu/types": "0.1.38",
        "long": "4.0.0",
        "node-fetch": "~2.6.1",
        "seedrandom": "^3.0.5"
      },
      "engines": {
        "yarn": ">= 1.3.2"
      }
    },
    "node_modules/@tensorflow/tfjs-core/node_modules/@types/offscreencanvas": {
      "version": "2019.7.3",
      "resolved": "https://registry.npmjs.org/@types/offscreencanvas/-/offscreencanvas-2019.7.3.tgz",
      "integrity": "sha512-ieXiYmgSRXUDeOntE1InxjWyvEelZGP63M+cGuquuRLuIKKT1osnkXjxev9B7d1nXSug5vpunx+gNlbVxMlC9A==",
      "license": "MIT"
    },
    "node_modules/@tensorflow/tfjs-data": {
      "version": "4.22.0",
      "resolved": "https://registry.npmjs.org/@tensorflow/tfjs-data/-/tfjs-data-4.22.0.tgz",
      "integrity": "sha512-dYmF3LihQIGvtgJrt382hSRH4S0QuAp2w1hXJI2+kOaEqo5HnUPG0k5KA6va+S1yUhx7UBToUKCBHeLHFQRV4w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@types/node-fetch": "^2.1.2",
        "node-fetch": "~2.6.1",
        "string_decoder": "^1.3.0"
      },
      "peerDependencies": {
        "@tensorflow/tfjs-core": "4.22.0",
        "seedrandom": "^3.0.5"
      }
    },
    "node_modules/@tensorflow/tfjs-layers": {
      "version": "4.22.0",
      "resolved": "https://registry.npmjs.org/@tensorflow/tfjs-layers/-/tfjs-layers-4.22.0.tgz",
      "integrity": "sha512-lybPj4ZNj9iIAPUj7a8ZW1hg8KQGfqWLlCZDi9eM/oNKCCAgchiyzx8OrYoWmRrB+AM6VNEeIT+2gZKg5ReihA==",
      "license": "Apache-2.0 AND MIT",
      "peerDependencies": {
        "@tensorflow/tfjs-core": "4.22.0"
      }
    },
    "node_modules/@tensorflow/tfjs-vis": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/@tensorflow/tfjs-vis/-/tfjs-vis-1.5.1.tgz",
      "integrity": "sha512-oNithKiR7VZaE+xUvz6Leww4TYEPhKi8j5xnEYvT3j7brK2Njdvril7UgFtZ8EYZBdeX6XNim5Eu3/23gTQ1dA==",
      "license": "Apache-2.0",
      "dependencies": {
        "d3-format": "~1.3.0",
        "d3-selection": "~1.3.0",
        "glamor": "~2.20.40",
        "preact": "~8.2.9",
        "vega": "5.20.0",
        "vega-embed": "6.17.0",
        "vega-lite": "4.13.1"
      },
      "peerDependencies": {
        "@tensorflow/tfjs-core": ">= 1.0.0"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/cliui": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^7.0.0"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/@tensorflow/tfjs/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/yargs": {
      "version": "16.2.0",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^7.0.2",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.0",
        "y18n": "^5.0.5",
        "yargs-parser": "^20.2.2"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@tensorflow/tfjs/node_modules/yargs-parser": {
      "version": "20.2.9",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@tootallnate/quickjs-emscripten": {
      "version": "0.23.0",
      "resolved": "https://registry.npmjs.org/@tootallnate/quickjs-emscripten/-/quickjs-emscripten-0.23.0.tgz",
      "integrity": "sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@tweenjs/tween.js": {
      "version": "23.1.3",
      "resolved": "https://registry.npmjs.org/@tweenjs/tween.js/-/tween.js-23.1.3.tgz",
      "integrity": "sha512-vJmvvwFxYuGnF2axRtPYocag6Clbb5YS7kLL+SO/TeVFzHqDIWrNKYtcsPMibjDx9O+bu+psAy9NKfWklassUA==",
      "license": "MIT"
    },
    "node_modules/@tybys/wasm-util": {
      "version": "0.10.0",
      "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.0.tgz",
      "integrity": "sha512-VyyPYFlOMNylG45GoAe0xDoLwWuowvf92F9kySqzYh8vmYm7D2u4iUJKa1tOUpS70Ku13ASrOkS4ScXFsTaCNQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@types/clone": {
      "version": "0.1.30",
      "resolved": "https://registry.npmjs.org/@types/clone/-/clone-0.1.30.tgz",
      "integrity": "sha512-vcxBr+ybljeSiasmdke1cQ9ICxoEwaBgM1OQ/P5h4MPj/kRyLcDl5L8PrftlbyV1kBbJIs3M3x1A1+rcWd4mEA==",
      "license": "MIT"
    },
    "node_modules/@types/draco3d": {
      "version": "1.4.10",
      "resolved": "https://registry.npmjs.org/@types/draco3d/-/draco3d-1.4.10.tgz",
      "integrity": "sha512-AX22jp8Y7wwaBgAixaSvkoG4M/+PlAcm3Qs4OW8yT9DM4xUpWKeFhLueTAyZF39pviAdcDdeJoACapiAceqNcw==",
      "license": "MIT"
    },
    "node_modules/@types/eslint": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-9.6.1.tgz",
      "integrity": "sha512-FXx2pKgId/WyYo2jXw63kk7/+TY7u7AziEJxJAnSFzHlqTAS3Ync6SvgYAN/k4/PQpnnVuzoMuVnByKK2qp0ag==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/estree": "*",
        "@types/json-schema": "*"
      }
    },
    "node_modules/@types/eslint-scope": {
      "version": "3.7.7",
      "resolved": "https://registry.npmjs.org/@types/eslint-scope/-/eslint-scope-3.7.7.tgz",
      "integrity": "sha512-MzMFlSLBqNF2gcHWO0G1vP/YQyfvrxZ0bF+u7mzUdZ1/xK4A4sru+nraZz5i3iEIk1l1uyicaDVTB4QbbEkAYg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/eslint": "*",
        "@types/estree": "*"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "license": "MIT"
    },
    "node_modules/@types/fast-json-stable-stringify": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@types/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
      "integrity": "sha512-mky/O83TXmGY39P1H9YbUpjV6l6voRYlufqfFCvel8l1phuy8HRjdWc1rrPuN53ITBJlbyMSV6z3niOySO5pgQ==",
      "license": "MIT"
    },
    "node_modules/@types/hoist-non-react-statics": {
      "version": "3.3.7",
      "resolved": "https://registry.npmjs.org/@types/hoist-non-react-statics/-/hoist-non-react-statics-3.3.7.tgz",
      "integrity": "sha512-PQTyIulDkIDro8P+IHbKCsw7U2xxBYflVzW/FgWdCAePD9xGSidgA76/GeJ6lBKoblyhf9pBY763gbrN+1dI8g==",
      "license": "MIT",
      "dependencies": {
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "license": "MIT"
    },
    "node_modules/@types/json5": {
      "version": "0.0.29",
      "resolved": "https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz",
      "integrity": "sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/long": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@types/long/-/long-4.0.2.tgz",
      "integrity": "sha512-MqTGEo5bj5t157U6fA/BiDynNkn0YknVdh48CMPkTSpFTVmvao5UQmm7uEF6xBEo7qIMAlY/JSleYaE6VOdpaA==",
      "license": "MIT"
    },
    "node_modules/@types/micro": {
      "version": "7.3.7",
      "resolved": "https://registry.npmjs.org/@types/micro/-/micro-7.3.7.tgz",
      "integrity": "sha512-MFsX7eCj0Tg3TtphOQvANNvNtFpya+s/rYOCdV6o+DFjOQPFi2EVRbBALjbbgZTXUaJP1Q281MJiJOD40d0UxQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/node": {
      "version": "20.19.11",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.11.tgz",
      "integrity": "sha512-uug3FEEGv0r+jrecvUUpbY8lLisvIjg6AAic6a2bSP5OEOLeJsDSnvhCDov7ipFFMXS3orMpzlmi0ZcuGkBbow==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.21.0"
      }
    },
    "node_modules/@types/node-fetch": {
      "version": "2.6.13",
      "resolved": "https://registry.npmjs.org/@types/node-fetch/-/node-fetch-2.6.13.tgz",
      "integrity": "sha512-QGpRVpzSaUs30JBSGPjOg4Uveu384erbHBoT1zeONvyCfwQxIkUshLAOqN/k9EjGviPRmWTTe6aH2qySWKTVSw==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "form-data": "^4.0.4"
      }
    },
    "node_modules/@types/offscreencanvas": {
      "version": "2019.3.0",
      "resolved": "https://registry.npmjs.org/@types/offscreencanvas/-/offscreencanvas-2019.3.0.tgz",
      "integrity": "sha512-esIJx9bQg+QYF0ra8GnvfianIY8qWB0GBx54PK5Eps6m+xTj86KLavHv6qDhzKcu5UUOgNfJ2pWaIIV7TRUd9Q==",
      "license": "MIT"
    },
    "node_modules/@types/pino": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/@types/pino/-/pino-7.0.4.tgz",
      "integrity": "sha512-yKw1UbZOTe7vP1xMQT+oz3FexwgIpBTrM+AC62vWgAkNRULgLTJWfYX+H5/sKPm8VXFbIcXkC3VZPyuaNioZFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "pino": "*"
      }
    },
    "node_modules/@types/react": {
      "version": "19.1.12",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.12.tgz",
      "integrity": "sha512-cMoR+FoAf/Jyq6+Df2/Z41jISvGZZ2eTlnsaJRptmZ76Caldwy1odD4xTr/gNV9VLj0AWgg/nmkevIyUfIIq5w==",
      "license": "MIT",
      "dependencies": {
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "19.1.9",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.9.tgz",
      "integrity": "sha512-qXRuZaOsAdXKFyOhRBg6Lqqc0yay13vN7KrIg4L7N4aaHN68ma9OK3NE1BoDFgFOTfM7zg+3/8+2n8rLUH3OKQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "^19.0.0"
      }
    },
    "node_modules/@types/react-reconciler": {
      "version": "0.32.0",
      "resolved": "https://registry.npmjs.org/@types/react-reconciler/-/react-reconciler-0.32.0.tgz",
      "integrity": "sha512-+WHarFkJevhH1s655qeeSEf/yxFST0dVRsmSqUgxG8mMOKqycgYBv2wVpyubBY7MX8KiX5FQ03rNIwrxfm7Bmw==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/@types/react-window": {
      "version": "1.8.8",
      "resolved": "https://registry.npmjs.org/@types/react-window/-/react-window-1.8.8.tgz",
      "integrity": "sha512-8Ls660bHR1AUA2kuRvVG9D/4XpRC6wjAaPT9dil7Ckc76eP9TKWZwwmgfq8Q1LANX3QNDnoU4Zp48A3w+zK69Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/@types/resolve": {
      "version": "1.20.2",
      "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.20.2.tgz",
      "integrity": "sha512-60BCwRFOZCQhDncwQdxxeOEEkbc5dIMccYLwbxsS4TUNeVECQ/pBJ0j09mrHOl/JJvpRPGwO9SvE4nR2Nb/a4Q==",
      "license": "MIT"
    },
    "node_modules/@types/seedrandom": {
      "version": "2.4.34",
      "resolved": "https://registry.npmjs.org/@types/seedrandom/-/seedrandom-2.4.34.tgz",
      "integrity": "sha512-ytDiArvrn/3Xk6/vtylys5tlY6eo7Ane0hvcx++TKo6RxQXuVfW0AF/oeWqAj9dN29SyhtawuXstgmPlwNcv/A==",
      "license": "MIT"
    },
    "node_modules/@types/stats.js": {
      "version": "0.17.4",
      "resolved": "https://registry.npmjs.org/@types/stats.js/-/stats.js-0.17.4.tgz",
      "integrity": "sha512-jIBvWWShCvlBqBNIZt0KAshWpvSjhkwkEu4ZUcASoAvhmrgAUI2t1dXrjSL4xXVLB4FznPrIsX3nKXFl/Dt4vA==",
      "license": "MIT"
    },
    "node_modules/@types/stylis": {
      "version": "4.2.5",
      "resolved": "https://registry.npmjs.org/@types/stylis/-/stylis-4.2.5.tgz",
      "integrity": "sha512-1Xve+NMN7FWjY14vLoY5tL3BVEQ/n42YLwaqJIPYhotZ9uBHt87VceMwWQpzmdEt2TNXIorIFG+YeCUUW7RInw==",
      "license": "MIT"
    },
    "node_modules/@types/three": {
      "version": "0.179.0",
      "resolved": "https://registry.npmjs.org/@types/three/-/three-0.179.0.tgz",
      "integrity": "sha512-VgbFG2Pgsm84BqdegZzr7w2aKbQxmgzIu4Dy7/75ygiD/0P68LKmp5ie08KMPNqGTQwIge8s6D1guZf1RnZE0A==",
      "license": "MIT",
      "dependencies": {
        "@dimforge/rapier3d-compat": "~0.12.0",
        "@tweenjs/tween.js": "~23.1.3",
        "@types/stats.js": "*",
        "@types/webxr": "*",
        "@webgpu/types": "*",
        "fflate": "~0.8.2",
        "meshoptimizer": "~0.22.0"
      }
    },
    "node_modules/@types/trusted-types": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/@types/trusted-types/-/trusted-types-2.0.7.tgz",
      "integrity": "sha512-ScaPdn1dQczgbl0QFTeTOmVHFULt394XJgOQNoyVhZ6r2vLnMLJfBPd53SB52T/3G36VI1/g2MZaX0cwDuXsfw==",
      "license": "MIT"
    },
    "node_modules/@types/webidl-conversions": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz",
      "integrity": "sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA==",
      "license": "MIT"
    },
    "node_modules/@types/webxr": {
      "version": "0.5.23",
      "resolved": "https://registry.npmjs.org/@types/webxr/-/webxr-0.5.23.tgz",
      "integrity": "sha512-GPe4AsfOSpqWd3xA/0gwoKod13ChcfV67trvxaW2krUbgb9gxQjnCx8zGshzMl8LSHZlNH5gQ8LNScsDuc7nGQ==",
      "license": "MIT"
    },
    "node_modules/@types/whatwg-url": {
      "version": "11.0.5",
      "resolved": "https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-11.0.5.tgz",
      "integrity": "sha512-coYR071JRaHa+xoEvvYqvnIHaVqaYrLPbsufM9BF63HkwI5Lgmy2QR8Q5K/lYDYo5AK82wOvSOS0UsLTpTG7uQ==",
      "license": "MIT",
      "dependencies": {
        "@types/webidl-conversions": "*"
      }
    },
    "node_modules/@types/yauzl": {
      "version": "2.10.3",
      "resolved": "https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.3.tgz",
      "integrity": "sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.41.0.tgz",
      "integrity": "sha512-8fz6oa6wEKZrhXWro/S3n2eRJqlRcIa6SlDh59FXJ5Wp5XRZ8B9ixpJDcjadHq47hMx0u+HW6SNa6LjJQ6NLtw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/regexpp": "^4.10.0",
        "@typescript-eslint/scope-manager": "8.41.0",
        "@typescript-eslint/type-utils": "8.41.0",
        "@typescript-eslint/utils": "8.41.0",
        "@typescript-eslint/visitor-keys": "8.41.0",
        "graphemer": "^1.4.0",
        "ignore": "^7.0.0",
        "natural-compare": "^1.4.0",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "@typescript-eslint/parser": "^8.41.0",
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin/node_modules/ignore": {
      "version": "7.0.5",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-7.0.5.tgz",
      "integrity": "sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/@typescript-eslint/parser": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.41.0.tgz",
      "integrity": "sha512-gTtSdWX9xiMPA/7MV9STjJOOYtWwIJIYxkQxnSV1U3xcE+mnJSH3f6zI0RYP+ew66WSlZ5ed+h0VCxsvdC1jJg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/scope-manager": "8.41.0",
        "@typescript-eslint/types": "8.41.0",
        "@typescript-eslint/typescript-estree": "8.41.0",
        "@typescript-eslint/visitor-keys": "8.41.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/project-service": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.41.0.tgz",
      "integrity": "sha512-b8V9SdGBQzQdjJ/IO3eDifGpDBJfvrNTp2QD9P2BeqWTGrRibgfgIlBSw6z3b6R7dPzg752tOs4u/7yCLxksSQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/tsconfig-utils": "^8.41.0",
        "@typescript-eslint/types": "^8.41.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/scope-manager": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.41.0.tgz",
      "integrity": "sha512-n6m05bXn/Cd6DZDGyrpXrELCPVaTnLdPToyhBoFkLIMznRUQUEQdSp96s/pcWSQdqOhrgR1mzJ+yItK7T+WPMQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.41.0",
        "@typescript-eslint/visitor-keys": "8.41.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/tsconfig-utils": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.41.0.tgz",
      "integrity": "sha512-TDhxYFPUYRFxFhuU5hTIJk+auzM/wKvWgoNYOPcOf6i4ReYlOoYN8q1dV5kOTjNQNJgzWN3TUUQMtlLOcUgdUw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/type-utils": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.41.0.tgz",
      "integrity": "sha512-63qt1h91vg3KsjVVonFJWjgSK7pZHSQFKH6uwqxAH9bBrsyRhO6ONoKyXxyVBzG1lJnFAJcKAcxLS54N1ee1OQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.41.0",
        "@typescript-eslint/typescript-estree": "8.41.0",
        "@typescript-eslint/utils": "8.41.0",
        "debug": "^4.3.4",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/types": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.41.0.tgz",
      "integrity": "sha512-9EwxsWdVqh42afLbHP90n2VdHaWU/oWgbH2P0CfcNfdKL7CuKpwMQGjwev56vWu9cSKU7FWSu6r9zck6CVfnag==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.41.0.tgz",
      "integrity": "sha512-D43UwUYJmGhuwHfY7MtNKRZMmfd8+p/eNSfFe6tH5mbVDto+VQCayeAt35rOx3Cs6wxD16DQtIKw/YXxt5E0UQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/project-service": "8.41.0",
        "@typescript-eslint/tsconfig-utils": "8.41.0",
        "@typescript-eslint/types": "8.41.0",
        "@typescript-eslint/visitor-keys": "8.41.0",
        "debug": "^4.3.4",
        "fast-glob": "^3.3.2",
        "is-glob": "^4.0.3",
        "minimatch": "^9.0.4",
        "semver": "^7.6.0",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/@typescript-eslint/utils": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.41.0.tgz",
      "integrity": "sha512-udbCVstxZ5jiPIXrdH+BZWnPatjlYwJuJkDA4Tbo3WyYLh8NvB+h/bKeSZHDOFKfphsZYJQqaFtLeXEqurQn1A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.7.0",
        "@typescript-eslint/scope-manager": "8.41.0",
        "@typescript-eslint/types": "8.41.0",
        "@typescript-eslint/typescript-estree": "8.41.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys": {
      "version": "8.41.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.41.0.tgz",
      "integrity": "sha512-+GeGMebMCy0elMNg67LRNoVnUFPIm37iu5CmHESVx56/9Jsfdpsvbv605DQ81Pi/x11IdKUsS5nzgTYbCQU9fg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.41.0",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@unrs/resolver-binding-android-arm-eabi": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm-eabi/-/resolver-binding-android-arm-eabi-1.11.1.tgz",
      "integrity": "sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@unrs/resolver-binding-android-arm64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm64/-/resolver-binding-android-arm64-1.11.1.tgz",
      "integrity": "sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@unrs/resolver-binding-darwin-arm64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-arm64/-/resolver-binding-darwin-arm64-1.11.1.tgz",
      "integrity": "sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@unrs/resolver-binding-darwin-x64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-x64/-/resolver-binding-darwin-x64-1.11.1.tgz",
      "integrity": "sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@unrs/resolver-binding-freebsd-x64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-freebsd-x64/-/resolver-binding-freebsd-x64-1.11.1.tgz",
      "integrity": "sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm-gnueabihf": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-gnueabihf/-/resolver-binding-linux-arm-gnueabihf-1.11.1.tgz",
      "integrity": "sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm-musleabihf": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-musleabihf/-/resolver-binding-linux-arm-musleabihf-1.11.1.tgz",
      "integrity": "sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-gnu/-/resolver-binding-linux-arm64-gnu-1.11.1.tgz",
      "integrity": "sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-musl/-/resolver-binding-linux-arm64-musl-1.11.1.tgz",
      "integrity": "sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-ppc64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-ppc64-gnu/-/resolver-binding-linux-ppc64-gnu-1.11.1.tgz",
      "integrity": "sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-riscv64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-gnu/-/resolver-binding-linux-riscv64-gnu-1.11.1.tgz",
      "integrity": "sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-riscv64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-musl/-/resolver-binding-linux-riscv64-musl-1.11.1.tgz",
      "integrity": "sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-s390x-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-s390x-gnu/-/resolver-binding-linux-s390x-gnu-1.11.1.tgz",
      "integrity": "sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-x64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-gnu/-/resolver-binding-linux-x64-gnu-1.11.1.tgz",
      "integrity": "sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-x64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-musl/-/resolver-binding-linux-x64-musl-1.11.1.tgz",
      "integrity": "sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-wasm32-wasi": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-wasm32-wasi/-/resolver-binding-wasm32-wasi-1.11.1.tgz",
      "integrity": "sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==",
      "cpu": [
        "wasm32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@napi-rs/wasm-runtime": "^0.2.11"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@unrs/resolver-binding-win32-arm64-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-arm64-msvc/-/resolver-binding-win32-arm64-msvc-1.11.1.tgz",
      "integrity": "sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@unrs/resolver-binding-win32-ia32-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-ia32-msvc/-/resolver-binding-win32-ia32-msvc-1.11.1.tgz",
      "integrity": "sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@unrs/resolver-binding-win32-x64-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-x64-msvc/-/resolver-binding-win32-x64-msvc-1.11.1.tgz",
      "integrity": "sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@upstash/redis": {
      "version": "1.35.3",
      "resolved": "https://registry.npmjs.org/@upstash/redis/-/redis-1.35.3.tgz",
      "integrity": "sha512-hSjv66NOuahW3MisRGlSgoszU2uONAY2l5Qo3Sae8OT3/Tng9K+2/cBRuyPBX8egwEGcNNCF9+r0V6grNnhL+w==",
      "license": "MIT",
      "dependencies": {
        "uncrypto": "^0.1.3"
      }
    },
    "node_modules/@use-gesture/core": {
      "version": "10.3.1",
      "resolved": "https://registry.npmjs.org/@use-gesture/core/-/core-10.3.1.tgz",
      "integrity": "sha512-WcINiDt8WjqBdUXye25anHiNxPc0VOrlT8F6LLkU6cycrOGUDyY/yyFmsg3k8i5OLvv25llc0QC45GhR/C8llw==",
      "license": "MIT"
    },
    "node_modules/@use-gesture/react": {
      "version": "10.3.1",
      "resolved": "https://registry.npmjs.org/@use-gesture/react/-/react-10.3.1.tgz",
      "integrity": "sha512-Yy19y6O2GJq8f7CHf7L0nxL8bf4PZCPaVOCgJrusOeFHY1LvHgYXnmnXg6N5iwAnbgbZCDjo60SiM6IPJi9C5g==",
      "license": "MIT",
      "dependencies": {
        "@use-gesture/core": "10.3.1"
      },
      "peerDependencies": {
        "react": ">= 16.8.0"
      }
    },
    "node_modules/@webassemblyjs/ast": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.14.1.tgz",
      "integrity": "sha512-nuBEDgQfm1ccRp/8bCQrx1frohyufl4JlbMMZ4P1wpeOfDhF6FQkxZJ1b/e+PLwr6X1Nhw6OLme5usuBWYBvuQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/helper-numbers": "1.13.2",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/floating-point-hex-parser": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.13.2.tgz",
      "integrity": "sha512-6oXyTOzbKxGH4steLbLNOu71Oj+C8Lg34n6CqRvqfS2O71BxY6ByfMDRhBytzknj9yGUPVJ1qIKhRlAwO1AovA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-api-error": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.13.2.tgz",
      "integrity": "sha512-U56GMYxy4ZQCbDZd6JuvvNV/WFildOjsaWD3Tzzvmw/mas3cXzRJPMjP83JqEsgSbyrmaGjBfDtV7KDXV9UzFQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-buffer": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.14.1.tgz",
      "integrity": "sha512-jyH7wtcHiKssDtFPRB+iQdxlDf96m0E39yb0k5uJVhFGleZFoNw1c4aeIcVUPPbXUVJ94wwnMOAqUHyzoEPVMA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-numbers": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-numbers/-/helper-numbers-1.13.2.tgz",
      "integrity": "sha512-FE8aCmS5Q6eQYcV3gI35O4J789wlQA+7JrqTTpJqn5emA4U2hvwJmvFRC0HODS+3Ye6WioDklgd6scJ3+PLnEA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/floating-point-hex-parser": "1.13.2",
        "@webassemblyjs/helper-api-error": "1.13.2",
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@webassemblyjs/helper-wasm-bytecode": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.13.2.tgz",
      "integrity": "sha512-3QbLKy93F0EAIXLh0ogEVR6rOubA9AoZ+WRYhNbFyuB70j3dRdwH9g+qXhLAO0kiYGlg3TxDV+I4rQTr/YNXkA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/helper-wasm-section": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.14.1.tgz",
      "integrity": "sha512-ds5mXEqTJ6oxRoqjhWDU83OgzAYjwsCV8Lo/N+oRsNDmx/ZDpqalmrtgOMkHwxsG0iI//3BwWAErYRHtgn0dZw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/wasm-gen": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/ieee754": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.13.2.tgz",
      "integrity": "sha512-4LtOzh58S/5lX4ITKxnAK2USuNEvpdVV9AlgGQb8rJDHaLeHciwG4zlGr0j/SNWlr7x3vO1lDEsuePvtcDNCkw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@xtuc/ieee754": "^1.2.0"
      }
    },
    "node_modules/@webassemblyjs/leb128": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.13.2.tgz",
      "integrity": "sha512-Lde1oNoIdzVzdkNEAWZ1dZ5orIbff80YPdHx20mrHwHrVNNTjNr8E3xz9BdpcGqRQbAEa+fkrCb+fRFTl/6sQw==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@webassemblyjs/utf8": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.13.2.tgz",
      "integrity": "sha512-3NQWGjKTASY1xV5m7Hr0iPeXD9+RDobLll3T9d2AO+g3my8xy5peVyjSag4I50mR1bBSN/Ct12lo+R9tJk0NZQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@webassemblyjs/wasm-edit": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.14.1.tgz",
      "integrity": "sha512-RNJUIQH/J8iA/1NzlE4N7KtyZNHi3w7at7hDjvRNm5rcUXa00z1vRz3glZoULfJ5mpvYhLybmVcwcjGrC1pRrQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/helper-wasm-section": "1.14.1",
        "@webassemblyjs/wasm-gen": "1.14.1",
        "@webassemblyjs/wasm-opt": "1.14.1",
        "@webassemblyjs/wasm-parser": "1.14.1",
        "@webassemblyjs/wast-printer": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/wasm-gen": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.14.1.tgz",
      "integrity": "sha512-AmomSIjP8ZbfGQhumkNvgC33AY7qtMCXnN6bL2u2Js4gVCg8fp735aEiMSBbDR7UQIj90n4wKAFUSEd0QN2Ukg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/ieee754": "1.13.2",
        "@webassemblyjs/leb128": "1.13.2",
        "@webassemblyjs/utf8": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/wasm-opt": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.14.1.tgz",
      "integrity": "sha512-PTcKLUNvBqnY2U6E5bdOQcSM+oVP/PmrDY9NzowJjislEjwP/C4an2303MCVS2Mg9d3AJpIGdUFIQQWbPds0Sw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-buffer": "1.14.1",
        "@webassemblyjs/wasm-gen": "1.14.1",
        "@webassemblyjs/wasm-parser": "1.14.1"
      }
    },
    "node_modules/@webassemblyjs/wasm-parser": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.14.1.tgz",
      "integrity": "sha512-JLBl+KZ0R5qB7mCnud/yyX08jWFw5MsoalJ1pQ4EdFlgj9VdXKGuENGsiCIjegI1W7p91rUlcB/LB5yRJKNTcQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@webassemblyjs/helper-api-error": "1.13.2",
        "@webassemblyjs/helper-wasm-bytecode": "1.13.2",
        "@webassemblyjs/ieee754": "1.13.2",
        "@webassemblyjs/leb128": "1.13.2",
        "@webassemblyjs/utf8": "1.13.2"
      }
    },
    "node_modules/@webassemblyjs/wast-printer": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.14.1.tgz",
      "integrity": "sha512-kPSSXE6De1XOR820C90RIo2ogvZG+c3KiHzqUoO/F34Y2shGzesfqv7o57xrxovZJH/MetF5UjroJ/R/3isoiw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@webassemblyjs/ast": "1.14.1",
        "@xtuc/long": "4.2.2"
      }
    },
    "node_modules/@webgpu/types": {
      "version": "0.1.38",
      "resolved": "https://registry.npmjs.org/@webgpu/types/-/types-0.1.38.tgz",
      "integrity": "sha512-7LrhVKz2PRh+DD7+S+PVaFd5HxaWQvoMqBbsV9fNJO1pjUs1P8bM2vQVNfk+3URTqbuTI7gkXi0rfsN0IadoBA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@xtuc/ieee754": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",
      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==",
      "license": "BSD-3-Clause",
      "peer": true
    },
    "node_modules/@xtuc/long": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",
      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==",
      "license": "Apache-2.0",
      "peer": true
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/accepts/node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-import-phases": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/acorn-import-phases/-/acorn-import-phases-1.0.4.tgz",
      "integrity": "sha512-wKmbr/DDiIXzEOiWrTTUcDm24kQ2vGfZQvM2fwg2vXqR5uW6aapr7ObPtj1th32b9u90/Pf4AItvdTh42fBmVQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10.13.0"
      },
      "peerDependencies": {
        "acorn": "^8.14.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/acorn-walk": {
      "version": "8.3.4",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.4.tgz",
      "integrity": "sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "acorn": "^8.11.0"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ajv-formats": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz",
      "integrity": "sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependenciesMeta": {
        "ajv": {
          "optional": true
        }
      }
    },
    "node_modules/ajv-formats/node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ajv-formats/node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/ansi-colors": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.3.tgz",
      "integrity": "sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/ansi-escapes": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
      "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/ansi-regex": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.1.tgz",
      "integrity": "sha512-ILlv4k/3f6vfQ4OoP2AGvirOktlQ98ZEL1k9FaQjxa3L1abBgbuTDAdPOpvbGncC0BTVQrl+OM8xZGK6tWXt7g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/arg": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.0.tgz",
      "integrity": "sha512-ZWc51jO3qegGkVh8Hwpv636EkbesNV5ZNQPCtRa+0qytRYPEs9IYT9qITY9buezqUH5uqyzlWLcufrzU2rffdg==",
      "license": "MIT"
    },
    "node_modules/argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "license": "MIT",
      "dependencies": {
        "sprintf-js": "~1.0.2"
      }
    },
    "node_modules/aria-query": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz",
      "integrity": "sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/array-buffer-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "is-array-buffer": "^3.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-flat-polyfill": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/array-flat-polyfill/-/array-flat-polyfill-1.0.1.tgz",
      "integrity": "sha512-hfJmKupmQN0lwi0xG6FQ5U8Rd97RnIERplymOv/qpq8AoNKPPAnxJadjFA23FNWm88wykh9HmpLJUUwUtNU/iw==",
      "license": "CC0-1.0",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/array-includes": {
      "version": "3.1.9",
      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.9.tgz",
      "integrity": "sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.24.0",
        "es-object-atoms": "^1.1.1",
        "get-intrinsic": "^1.3.0",
        "is-string": "^1.1.1",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlast": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlastindex": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.6.tgz",
      "integrity": "sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "es-shim-unscopables": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flat": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz",
      "integrity": "sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flatmap": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz",
      "integrity": "sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.tosorted": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3",
        "es-errors": "^1.3.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/arraybuffer.prototype.slice": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "is-array-buffer": "^3.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/asap": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
      "integrity": "sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==",
      "license": "MIT"
    },
    "node_modules/ast-types": {
      "version": "0.13.4",
      "resolved": "https://registry.npmjs.org/ast-types/-/ast-types-0.13.4.tgz",
      "integrity": "sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.1"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/ast-types-flow": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.8.tgz",
      "integrity": "sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/async": {
      "version": "3.2.6",
      "resolved": "https://registry.npmjs.org/async/-/async-3.2.6.tgz",
      "integrity": "sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==",
      "license": "MIT"
    },
    "node_modules/async-function": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
      "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "license": "MIT"
    },
    "node_modules/at-least-node": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/at-least-node/-/at-least-node-1.0.0.tgz",
      "integrity": "sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==",
      "license": "ISC",
      "engines": {
        "node": ">= 4.0.0"
      }
    },
    "node_modules/atomic-sleep": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/atomic-sleep/-/atomic-sleep-1.0.0.tgz",
      "integrity": "sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "license": "MIT",
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/axe-core": {
      "version": "4.10.3",
      "resolved": "https://registry.npmjs.org/axe-core/-/axe-core-4.10.3.tgz",
      "integrity": "sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==",
      "dev": true,
      "license": "MPL-2.0",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/axobject-query": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz",
      "integrity": "sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/b4a": {
      "version": "1.6.7",
      "resolved": "https://registry.npmjs.org/b4a/-/b4a-1.6.7.tgz",
      "integrity": "sha512-OnAYlL5b7LEkALw87fUVafQw5rVR9RjwGd4KUwNQ6DrrNmaVaUCgLipfVlzrPQ4tWOR9P0IXGNOx50jYCCdSJg==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/babel-plugin-polyfill-corejs2": {
      "version": "0.4.14",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.4.14.tgz",
      "integrity": "sha512-Co2Y9wX854ts6U8gAAPXfn0GmAyctHuK8n0Yhfjd6t30g7yvKjspvvOo9yG+z52PZRgFErt7Ka2pYnXCjLKEpg==",
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.27.7",
        "@babel/helper-define-polyfill-provider": "^0.6.5",
        "semver": "^6.3.1"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs2/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs3": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.13.0.tgz",
      "integrity": "sha512-U+GNwMdSFgzVmfhNm8GJUX88AadB3uo9KpJqS3FaqNIPKgySuvMb+bHPsOmmuWyIcuqZj/pzt1RUIUZns4y2+A==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.6.5",
        "core-js-compat": "^3.43.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/babel-plugin-polyfill-regenerator": {
      "version": "0.6.5",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.6.5.tgz",
      "integrity": "sha512-ISqQ2frbiNU9vIJkzg7dlPpznPZ4jOiUQ1uSmB0fEHeowtN3COYRsXr/xexn64NpU13P06jc/L5TgiJXOgrbEg==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.6.5"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "license": "MIT"
    },
    "node_modules/bare-events": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/bare-events/-/bare-events-2.6.1.tgz",
      "integrity": "sha512-AuTJkq9XmE6Vk0FJVNq5QxETrSA/vKHarWVBG5l/JbdCL1prJemiyJqUS0jrlXO0MftuPq4m3YVYhoNc5+aE/g==",
      "dev": true,
      "license": "Apache-2.0",
      "optional": true
    },
    "node_modules/bare-fs": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/bare-fs/-/bare-fs-4.2.1.tgz",
      "integrity": "sha512-mELROzV0IhqilFgsl1gyp48pnZsaV9xhQapHLDsvn4d4ZTfbFhcghQezl7FTEDNBcGqLUnNI3lUlm6ecrLWdFA==",
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "bare-events": "^2.5.4",
        "bare-path": "^3.0.0",
        "bare-stream": "^2.6.4"
      },
      "engines": {
        "bare": ">=1.16.0"
      },
      "peerDependencies": {
        "bare-buffer": "*"
      },
      "peerDependenciesMeta": {
        "bare-buffer": {
          "optional": true
        }
      }
    },
    "node_modules/bare-os": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/bare-os/-/bare-os-3.6.2.tgz",
      "integrity": "sha512-T+V1+1srU2qYNBmJCXZkUY5vQ0B4FSlL3QDROnKQYOqeiQR8UbjNHlPa+TIbM4cuidiN9GaTaOZgSEgsvPbh5A==",
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "bare": ">=1.14.0"
      }
    },
    "node_modules/bare-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/bare-path/-/bare-path-3.0.0.tgz",
      "integrity": "sha512-tyfW2cQcB5NN8Saijrhqn0Zh7AnFNsnczRcuWODH0eYAXBsJ5gVxAUuNr7tsHSC6IZ77cA0SitzT+s47kot8Mw==",
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "bare-os": "^3.0.1"
      }
    },
    "node_modules/bare-stream": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/bare-stream/-/bare-stream-2.7.0.tgz",
      "integrity": "sha512-oyXQNicV1y8nc2aKffH+BUHFRXmx6VrPzlnaEvMhram0nPBrKcEdcyBg5r08D0i8VxngHFAiVyn1QKXpSG0B8A==",
      "dev": true,
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "streamx": "^2.21.0"
      },
      "peerDependencies": {
        "bare-buffer": "*",
        "bare-events": "*"
      },
      "peerDependenciesMeta": {
        "bare-buffer": {
          "optional": true
        },
        "bare-events": {
          "optional": true
        }
      }
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/basic-ftp": {
      "version": "5.0.5",
      "resolved": "https://registry.npmjs.org/basic-ftp/-/basic-ftp-5.0.5.tgz",
      "integrity": "sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/bcrypt": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/bcrypt/-/bcrypt-6.0.0.tgz",
      "integrity": "sha512-cU8v/EGSrnH+HnxV2z0J7/blxH8gq7Xh2JFT6Aroax7UohdmiJJlxApMxtKfuI7z68NvvVcmR78k2LbT6efhRg==",
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "node-addon-api": "^8.3.0",
        "node-gyp-build": "^4.8.4"
      },
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/bidi-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/bidi-js/-/bidi-js-1.0.3.tgz",
      "integrity": "sha512-RKshQI1R3YQ+n9YJz2QQ147P66ELpa1FQEg20Dk8oW9t2KgLbpDLLp9aGZ7y8WHSshDknG0bknqGw5/tyCs5tw==",
      "license": "MIT",
      "dependencies": {
        "require-from-string": "^2.0.2"
      }
    },
    "node_modules/body-parser": {
      "version": "1.20.3",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.5",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.13.0",
        "raw-body": "2.5.2",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/body-parser/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/body-parser/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/bowser": {
      "version": "1.9.4",
      "resolved": "https://registry.npmjs.org/bowser/-/bowser-1.9.4.tgz",
      "integrity": "sha512-9IdMmj2KjigRq6oWhmwv1W36pDuA4STQZ8q6YO9um+x07xgYNCD3Oou+WP/3L1HNz7iqythGet3/p4wvc8AAwQ==",
      "license": "MIT"
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.25.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.4.tgz",
      "integrity": "sha512-4jYpcjabC606xJ3kw2QwGEZKX0Aw7sgQdZCvIK9dhVSPh76BKo+C+btT1RRofH7B+8iNpEbgGNVWiLki5q93yg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001737",
        "electron-to-chromium": "^1.5.211",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/bson": {
      "version": "6.10.4",
      "resolved": "https://registry.npmjs.org/bson/-/bson-6.10.4.tgz",
      "integrity": "sha512-WIsKqkSC0ABoBJuT1LEX+2HEvNmNKKgnTAyd0fL8qzK4SH2i9NXg+t08YtdZp/V9IZ33cxe3iV4yM0qg8lMQng==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=16.20.1"
      }
    },
    "node_modules/buffer": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
      "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.2.1"
      }
    },
    "node_modules/buffer-crc32": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz",
      "integrity": "sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "license": "MIT"
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/c12": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/c12/-/c12-3.1.0.tgz",
      "integrity": "sha512-uWoS8OU1MEIsOv8p/5a82c3H31LsWVR5qiyXVfBNOzfffjUWtPnhAb4BYI2uG2HfGmZmFjCtui5XNWaps+iFuw==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "chokidar": "^4.0.3",
        "confbox": "^0.2.2",
        "defu": "^6.1.4",
        "dotenv": "^16.6.1",
        "exsolve": "^1.0.7",
        "giget": "^2.0.0",
        "jiti": "^2.4.2",
        "ohash": "^2.0.11",
        "pathe": "^2.0.3",
        "perfect-debounce": "^1.0.0",
        "pkg-types": "^2.2.0",
        "rc9": "^2.1.2"
      },
      "peerDependencies": {
        "magicast": "^0.3.5"
      },
      "peerDependenciesMeta": {
        "magicast": {
          "optional": true
        }
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.0",
        "es-define-property": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelize": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/camelize/-/camelize-1.0.1.tgz",
      "integrity": "sha512-dU+Tx2fsypxTgtLoE36npi3UqcjSSMNYfkqgmoEhtZrraP5VWq0K7FkWVTYa8eMPtnU/G2txVsfdCJTn9uzpuQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/camera-controls": {
      "version": "2.10.1",
      "resolved": "https://registry.npmjs.org/camera-controls/-/camera-controls-2.10.1.tgz",
      "integrity": "sha512-KnaKdcvkBJ1Irbrzl8XD6WtZltkRjp869Jx8c0ujs9K+9WD+1D7ryBsCiVqJYUqt6i/HR5FxT7RLASieUD+Q5w==",
      "license": "MIT",
      "peerDependencies": {
        "three": ">=0.126.1"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001737",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001737.tgz",
      "integrity": "sha512-BiloLiXtQNrY5UyF0+1nSJLXUENuhka2pzy2Fx5pGxqavdrxSCW4U6Pn/PoG3Efspi2frRbHpBV2XsrPE6EDlw==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/case-anything": {
      "version": "2.1.13",
      "resolved": "https://registry.npmjs.org/case-anything/-/case-anything-2.1.13.tgz",
      "integrity": "sha512-zlOQ80VrQ2Ue+ymH5OuM/DlDq64mEm+B9UTdHULv5osUMD6HalNTblf2b1u/m6QecjsnOkBpqVZ+XPwIVsy7Ng==",
      "license": "MIT",
      "engines": {
        "node": ">=12.13"
      },
      "funding": {
        "url": "https://github.com/sponsors/mesqueeb"
      }
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chardet": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/chokidar": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
      "integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "readdirp": "^4.0.1"
      },
      "engines": {
        "node": ">= 14.16.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/chownr": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/chrome-launcher": {
      "version": "0.13.4",
      "resolved": "https://registry.npmjs.org/chrome-launcher/-/chrome-launcher-0.13.4.tgz",
      "integrity": "sha512-nnzXiDbGKjDSK6t2I+35OAPBy5Pw/39bgkb/ZAFwMhwJbdYBp6aH+vW28ZgtjdU890Q7D+3wN/tB8N66q5Gi2A==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/node": "*",
        "escape-string-regexp": "^1.0.5",
        "is-wsl": "^2.2.0",
        "lighthouse-logger": "^1.0.0",
        "mkdirp": "^0.5.3",
        "rimraf": "^3.0.2"
      }
    },
    "node_modules/chrome-trace-event": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.4.tgz",
      "integrity": "sha512-rNjApaLzuwaOTjCiT8lSDdGN1APCiqkChLMJxJPWLunPAt5fy8xgU9/jNOchV84wfIxrA0lRQB7oCT8jrn/wrQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6.0"
      }
    },
    "node_modules/chromium-bidi": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/chromium-bidi/-/chromium-bidi-0.6.3.tgz",
      "integrity": "sha512-qXlsCmpCZJAnoTYI83Iu6EdYQpMYdVkCfq08KDh2pmlVqK5t5IA9mGs4/LwCwp4fqisSOMXZxP3HIh8w8aRn0A==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "mitt": "3.0.1",
        "urlpattern-polyfill": "10.0.0",
        "zod": "3.23.8"
      },
      "peerDependencies": {
        "devtools-protocol": "*"
      }
    },
    "node_modules/chromium-bidi/node_modules/zod": {
      "version": "3.23.8",
      "resolved": "https://registry.npmjs.org/zod/-/zod-3.23.8.tgz",
      "integrity": "sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/colinhacks"
      }
    },
    "node_modules/citty": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/citty/-/citty-0.1.6.tgz",
      "integrity": "sha512-tskPPKEs8D2KPafUypv2gxwJP8h/OaJmC82QQGGDQcHvXX43xF2VDACcJVmZ0EuSxkpO9Kc4MlrA3q0+FG58AQ==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "consola": "^3.2.3"
      }
    },
    "node_modules/cli-cursor": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
      "integrity": "sha512-8lgKz8LmCRYZZQDpRyT2m5rKJ08TnU4tR9FFFW2rxpxR1FzWi4PQ/NfyODchAatHaUgnSPVcx/R5w6NuTBzFiw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "restore-cursor": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/cli-width": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.1.tgz",
      "integrity": "sha512-GRMWDxpOB6Dgk2E5Uo+3eEBvtOOlimMmpbFiKuLFnQzYDavtLFY3K5ona41jgN/WdRZtG7utuVSVTL4HbZHGkw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/client-only": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
      "license": "MIT"
    },
    "node_modules/cliui": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^6.2.0"
      }
    },
    "node_modules/cliui/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/cliui/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/clsx": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/color": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
      "integrity": "sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1",
        "color-string": "^1.9.0"
      },
      "engines": {
        "node": ">=12.5.0"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/color-string": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz",
      "integrity": "sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "color-name": "^1.0.0",
        "simple-swizzle": "^0.2.2"
      }
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "license": "MIT",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "license": "MIT"
    },
    "node_modules/common-tags": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/common-tags/-/common-tags-1.8.2.tgz",
      "integrity": "sha512-gk/Z852D2Wtb//0I+kRFNKKE9dIIVirjoqPoA1wJU+XePVXZfGeBpk45+A1rKO4Q43prqWBNY/MiIeRLbPWUaA==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/compressible": {
      "version": "2.0.18",
      "resolved": "https://registry.npmjs.org/compressible/-/compressible-2.0.18.tgz",
      "integrity": "sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "mime-db": ">= 1.43.0 < 2"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/compression": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/compression/-/compression-1.8.1.tgz",
      "integrity": "sha512-9mAqGPHLakhCLeNyxPkK4xVo746zQ/czLH1Ky+vkitMnWfWZps8r0qXuwhwizagCRttsL4lfG4pIOvaWLpAP0w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "compressible": "~2.0.18",
        "debug": "2.6.9",
        "negotiator": "~0.6.4",
        "on-headers": "~1.1.0",
        "safe-buffer": "5.2.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/compression/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/compression/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "license": "MIT"
    },
    "node_modules/confbox": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/confbox/-/confbox-0.2.2.tgz",
      "integrity": "sha512-1NB+BKqhtNipMsov4xI/NnhCKp9XG9NamYp5PVm9klAT0fsrNPjaFICsCFhNhwZJKNh7zB/3q8qXz0E9oaMNtQ==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/configstore": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/configstore/-/configstore-5.0.1.tgz",
      "integrity": "sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "dot-prop": "^5.2.0",
        "graceful-fs": "^4.1.2",
        "make-dir": "^3.0.0",
        "unique-string": "^2.0.0",
        "write-file-atomic": "^3.0.0",
        "xdg-basedir": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/consola": {
      "version": "3.4.2",
      "resolved": "https://registry.npmjs.org/consola/-/consola-3.4.2.tgz",
      "integrity": "sha512-5IKcdX0nnYavi6G7TtOhwkYzyjfJlatbjMjuLSfE2kYT5pMDOilZ4OvMhi637CcDICTmz3wARPoyhqyX1Y+XvA==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": "^14.18.0 || >=16.10.0"
      }
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "license": "MIT"
    },
    "node_modules/cookie": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/core-js": {
      "version": "3.29.1",
      "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.29.1.tgz",
      "integrity": "sha512-+jwgnhg6cQxKYIIjGtAHq2nwUOolo9eoFZ4sHfUH09BLXBgxnH4gA0zEd+t+BO2cNB8idaBtZFcFTRjQJRJmAw==",
      "hasInstallScript": true,
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/core-js"
      }
    },
    "node_modules/core-js-compat": {
      "version": "3.45.1",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.45.1.tgz",
      "integrity": "sha512-tqTt5T4PzsMIZ430XGviK4vzYSoeNJ6CXODi6c/voxOT6IZqBht5/EKaSNnYiEjjRYxjVz7DQIsOsY0XNi8PIA==",
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.25.3"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/core-js"
      }
    },
    "node_modules/cross-env": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-env/-/cross-env-7.0.3.tgz",
      "integrity": "sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==",
      "license": "MIT",
      "dependencies": {
        "cross-spawn": "^7.0.1"
      },
      "bin": {
        "cross-env": "src/bin/cross-env.js",
        "cross-env-shell": "src/bin/cross-env-shell.js"
      },
      "engines": {
        "node": ">=10.14",
        "npm": ">=6",
        "yarn": ">=1"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/crypto-random-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-2.0.0.tgz",
      "integrity": "sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/csp_evaluator": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/csp_evaluator/-/csp_evaluator-1.1.1.tgz",
      "integrity": "sha512-N3ASg0C4kNPUaNxt1XAvzHIVuzdtr8KLgfk1O8WDyimp1GisPAHESupArO2ieHk9QWbrJ/WkQODyh21Ps/xhxw==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/css-color-keywords": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/css-color-keywords/-/css-color-keywords-1.0.0.tgz",
      "integrity": "sha512-FyyrDHZKEjXDpNJYvVsV960FiqQyXc/LlYmsxl2BcdMb2WPx0OGRVgTg55rPSyLSNMqP52R9r8geSp7apN3Ofg==",
      "license": "ISC",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/css-in-js-utils": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/css-in-js-utils/-/css-in-js-utils-2.0.1.tgz",
      "integrity": "sha512-PJF0SpJT+WdbVVt0AOYp9C8GnuruRlL/UFW7932nLWmFLQTaWEzTBQEx7/hn4BuV+WON75iAViSUJLiU3PKbpA==",
      "license": "MIT",
      "dependencies": {
        "hyphenate-style-name": "^1.0.2",
        "isobject": "^3.0.1"
      }
    },
    "node_modules/css-to-react-native": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/css-to-react-native/-/css-to-react-native-3.2.0.tgz",
      "integrity": "sha512-e8RKaLXMOFii+02mOlqwjbD00KSEKqblnpO9e++1aXS1fPQOpS1YoqdVHBqPjHNoxeF2mimzVqawm2KCbEdtHQ==",
      "license": "MIT",
      "dependencies": {
        "camelize": "^1.0.0",
        "css-color-keywords": "^1.0.0",
        "postcss-value-parser": "^4.0.2"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/d3-array": {
      "version": "2.12.1",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-2.12.1.tgz",
      "integrity": "sha512-B0ErZK/66mHtEsR1TkPEEkwdy+WDesimkM5gpZr5Dsg54BiTA5RXtYW5qTLIAcekaS9xfZrzBLF/OAkB3Qn1YQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "internmap": "^1.0.0"
      }
    },
    "node_modules/d3-color": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/d3-color/-/d3-color-2.0.0.tgz",
      "integrity": "sha512-SPXi0TSKPD4g9tw0NMZFnR95XVgUZiBH+uUTqQuDu1OsE2zomHU7ho0FISciaPvosimixwHFl3WHLGabv6dDgQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/d3-delaunay": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/d3-delaunay/-/d3-delaunay-5.3.0.tgz",
      "integrity": "sha512-amALSrOllWVLaHTnDLHwMIiz0d1bBu9gZXd1FiLfXf8sHcX9jrcj81TVZOqD4UX7MgBZZ07c8GxzEgBpJqc74w==",
      "license": "ISC",
      "dependencies": {
        "delaunator": "4"
      }
    },
    "node_modules/d3-dispatch": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/d3-dispatch/-/d3-dispatch-2.0.0.tgz",
      "integrity": "sha512-S/m2VsXI7gAti2pBoLClFFTMOO1HTtT0j99AuXLoGFKO6deHDdnv6ZGTxSTTUTgO1zVcv82fCOtDjYK4EECmWA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/d3-dsv": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/d3-dsv/-/d3-dsv-2.0.0.tgz",
      "integrity": "sha512-E+Pn8UJYx9mViuIUkoc93gJGGYut6mSDKy2+XaPwccwkRGlR+LO97L2VCCRjQivTwLHkSnAJG7yo00BWY6QM+w==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "commander": "2",
        "iconv-lite": "0.4",
        "rw": "1"
      },
      "bin": {
        "csv2json": "bin/dsv2json",
        "csv2tsv": "bin/dsv2dsv",
        "dsv2dsv": "bin/dsv2dsv",
        "dsv2json": "bin/dsv2json",
        "json2csv": "bin/json2dsv",
        "json2dsv": "bin/json2dsv",
        "json2tsv": "bin/json2dsv",
        "tsv2csv": "bin/dsv2dsv",
        "tsv2json": "bin/dsv2json"
      }
    },
    "node_modules/d3-force": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/d3-force/-/d3-force-2.1.1.tgz",
      "integrity": "sha512-nAuHEzBqMvpFVMf9OX75d00OxvOXdxY+xECIXjW6Gv8BRrXu6gAWbv/9XKrvfJ5i5DCokDW7RYE50LRoK092ew==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-dispatch": "1 - 2",
        "d3-quadtree": "1 - 2",
        "d3-timer": "1 - 2"
      }
    },
    "node_modules/d3-format": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-1.3.2.tgz",
      "integrity": "sha512-Z18Dprj96ExragQ0DeGi+SYPQ7pPfRMtUXtsg/ChVIKNBCzjO8XYJvRTC1usblx52lqge56V5ect+frYTQc8WQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/d3-geo": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/d3-geo/-/d3-geo-2.0.2.tgz",
      "integrity": "sha512-8pM1WGMLGFuhq9S+FpPURxic+gKzjluCD/CHTuUF3mXMeiCo0i6R0tO1s4+GArRFde96SLcW/kOFRjoAosPsFA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.5.0"
      }
    },
    "node_modules/d3-geo-projection": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/d3-geo-projection/-/d3-geo-projection-3.0.0.tgz",
      "integrity": "sha512-1JE+filVbkEX2bT25dJdQ05iA4QHvUwev6o0nIQHOSrNlHCAKfVss/U10vEM3pA4j5v7uQoFdQ4KLbx9BlEbWA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "commander": "2",
        "d3-array": "1 - 2",
        "d3-geo": "1.12.0 - 2",
        "resolve": "^1.1.10"
      },
      "bin": {
        "geo2svg": "bin/geo2svg",
        "geograticule": "bin/geograticule",
        "geoproject": "bin/geoproject",
        "geoquantize": "bin/geoquantize",
        "geostitch": "bin/geostitch"
      }
    },
    "node_modules/d3-hierarchy": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/d3-hierarchy/-/d3-hierarchy-2.0.0.tgz",
      "integrity": "sha512-SwIdqM3HxQX2214EG9GTjgmCc/mbSx4mQBn+DuEETubhOw6/U3fmnji4uCVrmzOydMHSO1nZle5gh6HB/wdOzw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/d3-interpolate": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-2.0.1.tgz",
      "integrity": "sha512-c5UhwwTs/yybcmTpAVqwSFl6vrQ8JZJoT5F7xNFK9pymv5C0Ymcc9/LIJHtYIggg/yS9YHw8i8O8tgb9pupjeQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-color": "1 - 2"
      }
    },
    "node_modules/d3-path": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-2.0.0.tgz",
      "integrity": "sha512-ZwZQxKhBnv9yHaiWd6ZU4x5BtCQ7pXszEV9CU6kRgwIQVQGLMv1oiL4M+MK/n79sYzsj+gcgpPQSctJUsLN7fA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/d3-quadtree": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/d3-quadtree/-/d3-quadtree-2.0.0.tgz",
      "integrity": "sha512-b0Ed2t1UUalJpc3qXzKi+cPGxeXRr4KU9YSlocN74aTzp6R/Ud43t79yLLqxHRWZfsvWXmbDWPpoENK1K539xw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/d3-scale": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-3.3.0.tgz",
      "integrity": "sha512-1JGp44NQCt5d1g+Yy+GeOnZP7xHo0ii8zsQp6PGzd+C1/dl0KGsp9A7Mxwp+1D1o4unbTTxVdU/ZOIEBoeZPbQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.3.0",
        "d3-format": "1 - 2",
        "d3-interpolate": "1.2.0 - 2",
        "d3-time": "^2.1.1",
        "d3-time-format": "2 - 3"
      }
    },
    "node_modules/d3-scale-chromatic": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-scale-chromatic/-/d3-scale-chromatic-3.1.0.tgz",
      "integrity": "sha512-A3s5PWiZ9YCXFye1o246KoscMWqf8BsD9eRiJ3He7C9OBaxKhAd5TFCdEx/7VbKtxxTsu//1mMJFrEt572cEyQ==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3",
        "d3-interpolate": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-selection": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/d3-selection/-/d3-selection-1.3.2.tgz",
      "integrity": "sha512-OoXdv1nZ7h2aKMVg3kaUFbLLK5jXUFAMLD/Tu5JA96mjf8f2a9ZUESGY+C36t8R1WFeWk/e55hy54Ml2I62CRQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/d3-shape": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-2.1.0.tgz",
      "integrity": "sha512-PnjUqfM2PpskbSLTJvAzp2Wv4CZsnAgTfcVRTwW03QR3MkXF8Uo7B1y/lWkAsmbKwuecto++4NlsYcvYpXpTHA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-path": "1 - 2"
      }
    },
    "node_modules/d3-time": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-2.1.1.tgz",
      "integrity": "sha512-/eIQe/eR4kCQwq7yxi7z4c6qEXf2IYGcjoWB5OOQy4Tq9Uv39/947qlDcN2TLkiTzQWzvnsuYPB9TrWaNfipKQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "2"
      }
    },
    "node_modules/d3-time-format": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-3.0.0.tgz",
      "integrity": "sha512-UXJh6EKsHBTjopVqZBhFysQcoXSv/5yLONZvkQ5Kk3qbwiUYkdX17Xa1PT6U1ZWXGGfB1ey5L8dKMlFq2DO0Ag==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-time": "1 - 2"
      }
    },
    "node_modules/d3-timer": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/d3-timer/-/d3-timer-2.0.0.tgz",
      "integrity": "sha512-TO4VLh0/420Y/9dO3+f9abDEFYeCUr2WZRlxJvbp4HPTQcSylXNiL6yZa9FIUvV1yRiFufl1bszTCLDqv9PWNA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/damerau-levenshtein": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz",
      "integrity": "sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==",
      "dev": true,
      "license": "BSD-2-Clause"
    },
    "node_modules/data-uri-to-buffer": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-6.0.2.tgz",
      "integrity": "sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/data-view-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/inspect-js"
      }
    },
    "node_modules/data-view-byte-offset": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/debounce": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/debounce/-/debounce-1.2.1.tgz",
      "integrity": "sha512-XRRe6Glud4rd/ZGQfiV1ruXSfbvfJedlV9Y6zOlP+2K04vBYiJEte6stfFkCP03aMnY5tsipamumUjL14fofug==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/decimal.js": {
      "version": "10.6.0",
      "resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.6.0.tgz",
      "integrity": "sha512-YpgQiITW3JXGntzdUmyUR1V812Hn8T1YVXhCu+wO3OpS4eU9l4YdD3qjyiKdV6mvV29zapkMeD390UVEf2lkUg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/deepmerge": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/deepmerge-ts": {
      "version": "7.1.5",
      "resolved": "https://registry.npmjs.org/deepmerge-ts/-/deepmerge-ts-7.1.5.tgz",
      "integrity": "sha512-HOJkrhaYsweh+W+e74Yn7YStZOilkoPb6fycpwNLKzSPtruFs48nYis0zy5yJz1+ktUhHxoRDJ27RQAWLIJVJw==",
      "devOptional": true,
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-lazy-prop": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/define-lazy-prop/-/define-lazy-prop-2.0.0.tgz",
      "integrity": "sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.0.1",
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/defu": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/defu/-/defu-6.1.4.tgz",
      "integrity": "sha512-mEQCMmwJu317oSz8CwdIOdwf3xMif1ttiM8LTufzc3g6kR+9Pe236twL8j3IYT1F7GfRgGcW6MWxzZjLIkuHIg==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/degenerator": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/degenerator/-/degenerator-5.0.1.tgz",
      "integrity": "sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ast-types": "^0.13.4",
        "escodegen": "^2.1.0",
        "esprima": "^4.0.1"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/delaunator": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/delaunator/-/delaunator-4.0.1.tgz",
      "integrity": "sha512-WNPWi1IRKZfCt/qIDMfERkDp93+iZEmOxN2yy4Jg+Xhv8SLk2UTqqbe1sfiipn0and9QrE914/ihdx82Y/Giag==",
      "license": "ISC"
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/dequal": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
      "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/destr": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/destr/-/destr-2.0.5.tgz",
      "integrity": "sha512-ugFTXCtDZunbzasqBxrK93Ik/DRYsO6S/fedkWEMKqt04xZ4csmnmwGDBAb07QWNaGMAmnTIemsYZCksjATwsA==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/detect-gpu": {
      "version": "5.0.70",
      "resolved": "https://registry.npmjs.org/detect-gpu/-/detect-gpu-5.0.70.tgz",
      "integrity": "sha512-bqerEP1Ese6nt3rFkwPnGbsUF9a4q+gMmpTVVOEzoCyeCc+y7/RvJnQZJx1JwhgQI5Ntg0Kgat8Uu7XpBqnz1w==",
      "license": "MIT",
      "dependencies": {
        "webgl-constants": "^1.1.1"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "devOptional": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/devtools-protocol": {
      "version": "0.0.1312386",
      "resolved": "https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1312386.tgz",
      "integrity": "sha512-DPnhUXvmvKT2dFA/j7B+riVLUt9Q6RKJlcppojL5CoRywJJKLDYnRlw0gTFKfgDPHP5E04UoB71SxoJlVZy8FA==",
      "dev": true,
      "license": "BSD-3-Clause"
    },
    "node_modules/doctrine": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/dom-serializer": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-2.0.0.tgz",
      "integrity": "sha512-wIkAryiqt/nV5EQKqQpo3SToSOV9J0DnbJqwK7Wv/Trc92zIAYZ4FlMu+JPFW1DfGFt81ZTCGgDEabffXeLyJg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "domelementtype": "^2.3.0",
        "domhandler": "^5.0.2",
        "entities": "^4.2.0"
      },
      "funding": {
        "url": "https://github.com/cheeriojs/dom-serializer?sponsor=1"
      }
    },
    "node_modules/domelementtype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz",
      "integrity": "sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ],
      "license": "BSD-2-Clause"
    },
    "node_modules/domhandler": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-5.0.3.tgz",
      "integrity": "sha512-cgwlv/1iFQiFnU96XXgROh8xTeetsnJiDsTc7TYCLFd9+/WNkIqPTxiM/8pSd8VIrhXGTf1Ny1q1hquVqDJB5w==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "domelementtype": "^2.3.0"
      },
      "engines": {
        "node": ">= 4"
      },
      "funding": {
        "url": "https://github.com/fb55/domhandler?sponsor=1"
      }
    },
    "node_modules/domutils": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-3.2.2.tgz",
      "integrity": "sha512-6kZKyUajlDuqlHKVX1w7gyslj9MPIXzIFiz/rGu35uC1wMi+kMhQwGhl4lt9unC9Vb9INnY9Z3/ZA3+FhASLaw==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "dom-serializer": "^2.0.0",
        "domelementtype": "^2.3.0",
        "domhandler": "^5.0.3"
      },
      "funding": {
        "url": "https://github.com/fb55/domutils?sponsor=1"
      }
    },
    "node_modules/dot-prop": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.3.0.tgz",
      "integrity": "sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-obj": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dotenv": {
      "version": "16.6.1",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.6.1.tgz",
      "integrity": "sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==",
      "devOptional": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://dotenvx.com"
      }
    },
    "node_modules/dprint-node": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/dprint-node/-/dprint-node-1.0.8.tgz",
      "integrity": "sha512-iVKnUtYfGrYcW1ZAlfR/F59cUVL8QIhWoBJoSjkkdua/dkWIgjZfiLMeTjiB06X0ZLkQ0M2C1VbUj/CxkIf1zg==",
      "license": "MIT",
      "dependencies": {
        "detect-libc": "^1.0.3"
      }
    },
    "node_modules/dprint-node/node_modules/detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
      "license": "Apache-2.0",
      "bin": {
        "detect-libc": "bin/detect-libc.js"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/draco3d": {
      "version": "1.5.7",
      "resolved": "https://registry.npmjs.org/draco3d/-/draco3d-1.5.7.tgz",
      "integrity": "sha512-m6WCKt/erDXcw+70IJXnG7M3awwQPAsZvJGX5zY7beBqpELw6RDGkYVU0W43AFxye4pDZ5i2Lbyc/NNGqwjUVQ==",
      "license": "Apache-2.0"
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/duplexer": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.2.tgz",
      "integrity": "sha512-jtD6YG370ZCIi/9GTaJKQxWTZD045+4R4hTk/x1UyoqadyJ9x9CgSi1RlVDQF8U2sxLLSnFkCaMihqljHIWgMg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/effect": {
      "version": "3.16.12",
      "resolved": "https://registry.npmjs.org/effect/-/effect-3.16.12.tgz",
      "integrity": "sha512-N39iBk0K71F9nb442TLbTkjl24FLUzuvx2i1I2RsEAQsdAdUTuUoW0vlfUXgkMTUOnYqKnWcFfqw4hK4Pw27hg==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "@standard-schema/spec": "^1.0.0",
        "fast-check": "^3.23.1"
      }
    },
    "node_modules/ejs": {
      "version": "3.1.10",
      "resolved": "https://registry.npmjs.org/ejs/-/ejs-3.1.10.tgz",
      "integrity": "sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==",
      "license": "Apache-2.0",
      "dependencies": {
        "jake": "^10.8.5"
      },
      "bin": {
        "ejs": "bin/cli.js"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.211",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.211.tgz",
      "integrity": "sha512-IGBvimJkotaLzFnwIVgW9/UD/AOJ2tByUmeOrtqBfACSbAw5b1G0XpvdaieKyc7ULmbwXVx+4e4Be8pOPBrYkw==",
      "license": "ISC"
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/empathic": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/empathic/-/empathic-2.0.0.tgz",
      "integrity": "sha512-i6UzDscO/XfAcNYD75CfICkmfLedpyPDdozrLMmQc5ORaQcdMoc21OnlEylMIqI7U8eniKrPMxxtj8k0vhmJhA==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/encodeurl": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/encoding": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.13.tgz",
      "integrity": "sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==",
      "license": "MIT",
      "dependencies": {
        "iconv-lite": "^0.6.2"
      }
    },
    "node_modules/encoding/node_modules/iconv-lite": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/end-of-stream": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.5.tgz",
      "integrity": "sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.3",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.3.tgz",
      "integrity": "sha512-d4lC8xfavMeBjzGr2vECC3fsGXziXZQyJxD868h2M/mBI3PwAuODxAkLkq5HYuvrPYcUtiLzsTo8U3PgX3Ocww==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/enquirer": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/enquirer/-/enquirer-2.4.1.tgz",
      "integrity": "sha512-rRqJg/6gd538VHvR3PSrdRBb/1Vy2YfzHqzvbhGIQpDRKIa4FgV/54b5Q1xYSxOOwKvjXweS26E0Q+nAMwp2pQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-colors": "^4.1.1",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/enquirer/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/enquirer/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/entities": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-4.5.0.tgz",
      "integrity": "sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/es-abstract": {
      "version": "1.24.0",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
      "integrity": "sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==",
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.2",
        "arraybuffer.prototype.slice": "^1.0.4",
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "data-view-buffer": "^1.0.2",
        "data-view-byte-length": "^1.0.2",
        "data-view-byte-offset": "^1.0.1",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "es-set-tostringtag": "^2.1.0",
        "es-to-primitive": "^1.3.0",
        "function.prototype.name": "^1.1.8",
        "get-intrinsic": "^1.3.0",
        "get-proto": "^1.0.1",
        "get-symbol-description": "^1.1.0",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "internal-slot": "^1.1.0",
        "is-array-buffer": "^3.0.5",
        "is-callable": "^1.2.7",
        "is-data-view": "^1.0.2",
        "is-negative-zero": "^2.0.3",
        "is-regex": "^1.2.1",
        "is-set": "^2.0.3",
        "is-shared-array-buffer": "^1.0.4",
        "is-string": "^1.1.1",
        "is-typed-array": "^1.1.15",
        "is-weakref": "^1.1.1",
        "math-intrinsics": "^1.1.0",
        "object-inspect": "^1.13.4",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.7",
        "own-keys": "^1.0.1",
        "regexp.prototype.flags": "^1.5.4",
        "safe-array-concat": "^1.1.3",
        "safe-push-apply": "^1.0.0",
        "safe-regex-test": "^1.1.0",
        "set-proto": "^1.0.0",
        "stop-iteration-iterator": "^1.1.0",
        "string.prototype.trim": "^1.2.10",
        "string.prototype.trimend": "^1.0.9",
        "string.prototype.trimstart": "^1.0.8",
        "typed-array-buffer": "^1.0.3",
        "typed-array-byte-length": "^1.0.3",
        "typed-array-byte-offset": "^1.0.4",
        "typed-array-length": "^1.0.7",
        "unbox-primitive": "^1.1.0",
        "which-typed-array": "^1.1.19"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-iterator-helpers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz",
      "integrity": "sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-set-tostringtag": "^2.0.3",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.6",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "iterator.prototype": "^1.1.4",
        "safe-array-concat": "^1.1.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-module-lexer": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.7.0.tgz",
      "integrity": "sha512-jEQoCwk8hyb2AZziIOLhDqpm5+2ww5uIE6lkO/6jcOCusfk6LhMHpXXfBLXTZ7Ydyt0j4VoUQv6uGNYbdW+kBA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-shim-unscopables": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz",
      "integrity": "sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7",
        "is-date-object": "^1.0.5",
        "is-symbol": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/esbuild": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.9.tgz",
      "integrity": "sha512-CRbODhYyQx3qp7ZEwzxOk4JBqmD/seJrzPa/cGjY1VtIn5E09Oi9/dB4JwctnfZ8Q8iT7rioVv5k/FNT/uf54g==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.9",
        "@esbuild/android-arm": "0.25.9",
        "@esbuild/android-arm64": "0.25.9",
        "@esbuild/android-x64": "0.25.9",
        "@esbuild/darwin-arm64": "0.25.9",
        "@esbuild/darwin-x64": "0.25.9",
        "@esbuild/freebsd-arm64": "0.25.9",
        "@esbuild/freebsd-x64": "0.25.9",
        "@esbuild/linux-arm": "0.25.9",
        "@esbuild/linux-arm64": "0.25.9",
        "@esbuild/linux-ia32": "0.25.9",
        "@esbuild/linux-loong64": "0.25.9",
        "@esbuild/linux-mips64el": "0.25.9",
        "@esbuild/linux-ppc64": "0.25.9",
        "@esbuild/linux-riscv64": "0.25.9",
        "@esbuild/linux-s390x": "0.25.9",
        "@esbuild/linux-x64": "0.25.9",
        "@esbuild/netbsd-arm64": "0.25.9",
        "@esbuild/netbsd-x64": "0.25.9",
        "@esbuild/openbsd-arm64": "0.25.9",
        "@esbuild/openbsd-x64": "0.25.9",
        "@esbuild/openharmony-arm64": "0.25.9",
        "@esbuild/sunos-x64": "0.25.9",
        "@esbuild/win32-arm64": "0.25.9",
        "@esbuild/win32-ia32": "0.25.9",
        "@esbuild/win32-x64": "0.25.9"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/escodegen": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-2.1.0.tgz",
      "integrity": "sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esprima": "^4.0.1",
        "estraverse": "^5.2.0",
        "esutils": "^2.0.2"
      },
      "bin": {
        "escodegen": "bin/escodegen.js",
        "esgenerate": "bin/esgenerate.js"
      },
      "engines": {
        "node": ">=6.0"
      },
      "optionalDependencies": {
        "source-map": "~0.6.1"
      }
    },
    "node_modules/eslint": {
      "version": "9.34.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.34.0.tgz",
      "integrity": "sha512-RNCHRX5EwdrESy3Jc9o8ie8Bog+PeYvvSR8sDGoZxNFTvZ4dlxUB3WzQ3bQMztFrSRODGrLLj8g6OFuGY/aiQg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.21.0",
        "@eslint/config-helpers": "^0.3.1",
        "@eslint/core": "^0.15.2",
        "@eslint/eslintrc": "^3.3.1",
        "@eslint/js": "9.34.0",
        "@eslint/plugin-kit": "^0.3.5",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.2",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.6",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.4.0",
        "eslint-visitor-keys": "^4.2.1",
        "espree": "^10.4.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-config-next": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/eslint-config-next/-/eslint-config-next-15.5.2.tgz",
      "integrity": "sha512-3hPZghsLupMxxZ2ggjIIrat/bPniM2yRpsVPVM40rp8ZMzKWOJp2CGWn7+EzoV2ddkUr5fxNfHpF+wU1hGt/3g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@next/eslint-plugin-next": "15.5.2",
        "@rushstack/eslint-patch": "^1.10.3",
        "@typescript-eslint/eslint-plugin": "^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0",
        "@typescript-eslint/parser": "^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0",
        "eslint-import-resolver-node": "^0.3.6",
        "eslint-import-resolver-typescript": "^3.5.2",
        "eslint-plugin-import": "^2.31.0",
        "eslint-plugin-jsx-a11y": "^6.10.0",
        "eslint-plugin-react": "^7.37.0",
        "eslint-plugin-react-hooks": "^5.0.0"
      },
      "peerDependencies": {
        "eslint": "^7.23.0 || ^8.0.0 || ^9.0.0",
        "typescript": ">=3.3.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-import-resolver-node": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz",
      "integrity": "sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "^3.2.7",
        "is-core-module": "^2.13.0",
        "resolve": "^1.22.4"
      }
    },
    "node_modules/eslint-import-resolver-node/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-import-resolver-typescript": {
      "version": "3.10.1",
      "resolved": "https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-3.10.1.tgz",
      "integrity": "sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "@nolyfill/is-core-module": "1.0.39",
        "debug": "^4.4.0",
        "get-tsconfig": "^4.10.0",
        "is-bun-module": "^2.0.0",
        "stable-hash": "^0.0.5",
        "tinyglobby": "^0.2.13",
        "unrs-resolver": "^1.6.2"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint-import-resolver-typescript"
      },
      "peerDependencies": {
        "eslint": "*",
        "eslint-plugin-import": "*",
        "eslint-plugin-import-x": "*"
      },
      "peerDependenciesMeta": {
        "eslint-plugin-import": {
          "optional": true
        },
        "eslint-plugin-import-x": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-module-utils": {
      "version": "2.12.1",
      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.12.1.tgz",
      "integrity": "sha512-L8jSWTze7K2mTg0vos/RuLRS5soomksDPoJLXIslC7c8Wmut3bx7CPpJijDcBZtxQ5lrbUdM+s0OlNbz0DCDNw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "^3.2.7"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependenciesMeta": {
        "eslint": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-module-utils/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-plugin-import": {
      "version": "2.32.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.32.0.tgz",
      "integrity": "sha512-whOE1HFo/qJDyX4SnXzP4N6zOWn79WhnCUY/iDR0mPfQZO8wcYE4JClzI2oZrhBnnMUCBCHZhO6VQyoBU95mZA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@rtsao/scc": "^1.1.0",
        "array-includes": "^3.1.9",
        "array.prototype.findlastindex": "^1.2.6",
        "array.prototype.flat": "^1.3.3",
        "array.prototype.flatmap": "^1.3.3",
        "debug": "^3.2.7",
        "doctrine": "^2.1.0",
        "eslint-import-resolver-node": "^0.3.9",
        "eslint-module-utils": "^2.12.1",
        "hasown": "^2.0.2",
        "is-core-module": "^2.16.1",
        "is-glob": "^4.0.3",
        "minimatch": "^3.1.2",
        "object.fromentries": "^2.0.8",
        "object.groupby": "^1.0.3",
        "object.values": "^1.2.1",
        "semver": "^6.3.1",
        "string.prototype.trimend": "^1.0.9",
        "tsconfig-paths": "^3.15.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/eslint-plugin-jsx-a11y": {
      "version": "6.10.2",
      "resolved": "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.10.2.tgz",
      "integrity": "sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "aria-query": "^5.3.2",
        "array-includes": "^3.1.8",
        "array.prototype.flatmap": "^1.3.2",
        "ast-types-flow": "^0.0.8",
        "axe-core": "^4.10.0",
        "axobject-query": "^4.1.0",
        "damerau-levenshtein": "^1.0.8",
        "emoji-regex": "^9.2.2",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^3.3.5",
        "language-tags": "^1.0.9",
        "minimatch": "^3.1.2",
        "object.fromentries": "^2.0.8",
        "safe-regex-test": "^1.0.3",
        "string.prototype.includes": "^2.0.1"
      },
      "engines": {
        "node": ">=4.0"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9"
      }
    },
    "node_modules/eslint-plugin-react": {
      "version": "7.37.5",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.5.tgz",
      "integrity": "sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.8",
        "array.prototype.findlast": "^1.2.5",
        "array.prototype.flatmap": "^1.3.3",
        "array.prototype.tosorted": "^1.1.4",
        "doctrine": "^2.1.0",
        "es-iterator-helpers": "^1.2.1",
        "estraverse": "^5.3.0",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
        "minimatch": "^3.1.2",
        "object.entries": "^1.1.9",
        "object.fromentries": "^2.0.8",
        "object.values": "^1.2.1",
        "prop-types": "^15.8.1",
        "resolve": "^2.0.0-next.5",
        "semver": "^6.3.1",
        "string.prototype.matchall": "^4.0.12",
        "string.prototype.repeat": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
      }
    },
    "node_modules/eslint-plugin-react-hooks": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
      "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/resolve": {
      "version": "2.0.0-next.5",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.13.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
      "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/espree": {
      "version": "10.4.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
      "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "acorn": "^8.15.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true,
      "license": "BSD-2-Clause",
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estree-walker": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-1.0.1.tgz",
      "integrity": "sha512-1fMXF3YP4pZZVozF8j/ZLfvnR8NSIljt56UhbZ5PeeDmmGHpgpdwQt7ITlGvYaQukCvuBRMLEiKiYC+oeIg4cg==",
      "license": "MIT"
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=0.8.x"
      }
    },
    "node_modules/express": {
      "version": "4.21.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.3",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.7.1",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.3.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.3",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.12",
        "proxy-addr": "~2.0.7",
        "qs": "6.13.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.19.0",
        "serve-static": "1.16.2",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/express"
      }
    },
    "node_modules/express/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/express/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/exsolve": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/exsolve/-/exsolve-1.0.7.tgz",
      "integrity": "sha512-VO5fQUzZtI6C+vx4w/4BWJpg3s/5l+6pRQEHzFRM8WFi4XffSP1Z+4qi7GbjWbvRQEbdIco5mIMq+zX4rPuLrw==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/external-editor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
      "integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "chardet": "^0.7.0",
        "iconv-lite": "^0.4.24",
        "tmp": "^0.0.33"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/external-editor/node_modules/tmp": {
      "version": "0.0.33",
      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "os-tmpdir": "~1.0.2"
      },
      "engines": {
        "node": ">=0.6.0"
      }
    },
    "node_modules/extract-zip": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz",
      "integrity": "sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "debug": "^4.1.1",
        "get-stream": "^5.1.0",
        "yauzl": "^2.10.0"
      },
      "bin": {
        "extract-zip": "cli.js"
      },
      "engines": {
        "node": ">= 10.17.0"
      },
      "optionalDependencies": {
        "@types/yauzl": "^2.9.1"
      }
    },
    "node_modules/fast-check": {
      "version": "3.23.2",
      "resolved": "https://registry.npmjs.org/fast-check/-/fast-check-3.23.2.tgz",
      "integrity": "sha512-h5+1OzzfCC3Ef7VbtKdcv7zsstUQwUDlYpUTvjeUsJAssPgLn7QzbboPtL5ro04Mq0rPOsMzl7q5hIbRs2wD1A==",
      "devOptional": true,
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/dubzzz"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fast-check"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "pure-rand": "^6.1.0"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "license": "MIT"
    },
    "node_modules/fast-fifo": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/fast-fifo/-/fast-fifo-1.3.2.tgz",
      "integrity": "sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-glob": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz",
      "integrity": "sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fast-json-patch": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/fast-json-patch/-/fast-json-patch-3.1.1.tgz",
      "integrity": "sha512-vf6IHUX2SBcA+5/+4883dsIjpBTqmfBjmYiWK1savxQmFk4JfBMLa7ynTYOs1Rolp/T1betJxHiGD3g1Mn8lUQ==",
      "license": "MIT"
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-redact": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/fast-redact/-/fast-redact-3.5.0.tgz",
      "integrity": "sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/fast-uri": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/fast-uri/-/fast-uri-3.1.0.tgz",
      "integrity": "sha512-iPeeDKJSWf4IEOasVVrknXpaBV0IApz/gp7S2bb7Z4Lljbl2MGJRqInZiUrQwV16cpzw/D3S5j5Julj/gT52AA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ],
      "license": "BSD-3-Clause"
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fbjs": {
      "version": "0.8.18",
      "resolved": "https://registry.npmjs.org/fbjs/-/fbjs-0.8.18.tgz",
      "integrity": "sha512-EQaWFK+fEPSoibjNy8IxUtaFOMXcWsY0JaVrQoZR9zC8N2Ygf9iDITPWjUTVIax95b6I742JFLqASHfsag/vKA==",
      "license": "MIT",
      "dependencies": {
        "core-js": "^1.0.0",
        "isomorphic-fetch": "^2.1.1",
        "loose-envify": "^1.0.0",
        "object-assign": "^4.1.0",
        "promise": "^7.1.1",
        "setimmediate": "^1.0.5",
        "ua-parser-js": "^0.7.30"
      }
    },
    "node_modules/fbjs/node_modules/core-js": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/core-js/-/core-js-1.2.7.tgz",
      "integrity": "sha512-ZiPp9pZlgxpWRu0M+YWbm6+aQ84XEfH1JRXvfOc/fILWI0VKhLC2LX13X1NYq4fULzLMq7Hfh43CSo2/aIaUPA==",
      "deprecated": "core-js@<3.23.3 is no longer maintained and not recommended for usage due to the number of issues. Because of the V8 engine whims, feature detection in old core-js versions could cause a slowdown up to 100x even if nothing is polyfilled. Some versions have web compatibility issues. Please, upgrade your dependencies to the actual version of core-js.",
      "license": "MIT"
    },
    "node_modules/fbjs/node_modules/is-stream": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
      "integrity": "sha512-uQPm8kcs47jx38atAcWTVxyltQYoPT68y9aWYdV6yWXSyW8mzSat0TL6CiWdZeCdF3KrAvpVtnHbTv4RN+rqdQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/fbjs/node_modules/isomorphic-fetch": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/isomorphic-fetch/-/isomorphic-fetch-2.2.1.tgz",
      "integrity": "sha512-9c4TNAKYXM5PRyVcwUZrF3W09nQ+sO7+jydgs4ZGW9dhsLG2VOlISJABombdQqQRXCwuYG3sYV/puGf5rp0qmA==",
      "license": "MIT",
      "dependencies": {
        "node-fetch": "^1.0.1",
        "whatwg-fetch": ">=0.10.0"
      }
    },
    "node_modules/fbjs/node_modules/node-fetch": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-1.7.3.tgz",
      "integrity": "sha512-NhZ4CsKx7cYm2vSrBAr2PvFOe6sWDf0UYLRqA6svUYg7+/TSfVAu49jYC4BvQ4Sms9SZgdqGBgroqfDhJdTyKQ==",
      "license": "MIT",
      "dependencies": {
        "encoding": "^0.1.11",
        "is-stream": "^1.0.1"
      }
    },
    "node_modules/fd-slicer": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz",
      "integrity": "sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "pend": "~1.2.0"
      }
    },
    "node_modules/fflate": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/fflate/-/fflate-0.8.2.tgz",
      "integrity": "sha512-cPJU47OaAoCbg0pBvzsgpTPhmhqI5eJjh/JIu8tPj5q+T7iLvW/JAYUqmE7KOB4R1ZyEhzBaIQpQpardBF5z8A==",
      "license": "MIT"
    },
    "node_modules/figures": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
      "integrity": "sha512-Oa2M9atig69ZkfwiApY8F2Yy+tzMbazyvqv21R0NsSC8floSOC09BbT1ITWAdoMGQvJ/aZnR1KMwdx9tvHnTNA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "escape-string-regexp": "^1.0.5"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/filelist": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/filelist/-/filelist-1.0.4.tgz",
      "integrity": "sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "minimatch": "^5.0.1"
      }
    },
    "node_modules/filelist/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/filelist/node_modules/minimatch": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz",
      "integrity": "sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/finalhandler/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/finalhandler/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/for-each": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/form-data": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
      "integrity": "sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==",
      "license": "MIT",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "hasown": "^2.0.2",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/framer-motion": {
      "version": "12.23.12",
      "resolved": "https://registry.npmjs.org/framer-motion/-/framer-motion-12.23.12.tgz",
      "integrity": "sha512-6e78rdVtnBvlEVgu6eFEAgG9v3wLnYEboM8I5O5EXvfKC8gxGQB8wXJdhkMy10iVcn05jl6CNw7/HTsTCfwcWg==",
      "license": "MIT",
      "dependencies": {
        "motion-dom": "^12.23.12",
        "motion-utils": "^12.23.6",
        "tslib": "^2.4.0"
      },
      "peerDependencies": {
        "@emotion/is-prop-valid": "*",
        "react": "^18.0.0 || ^19.0.0",
        "react-dom": "^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/is-prop-valid": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fs-extra": {
      "version": "9.1.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
      "integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
      "license": "MIT",
      "dependencies": {
        "at-least-node": "^1.0.0",
        "graceful-fs": "^4.2.0",
        "jsonfile": "^6.0.1",
        "universalify": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "license": "ISC"
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "functions-have-names": "^1.2.3",
        "hasown": "^2.0.2",
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "license": "ISC",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-own-enumerable-property-symbols": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/get-own-enumerable-property-symbols/-/get-own-enumerable-property-symbols-3.0.2.tgz",
      "integrity": "sha512-I0UBV/XOz1XkIJHEUDMZAbzCThU/H8DxmSfmdGcKPnVhu2VfFqr34jr9777IyaTYvxjedWhqVIilEDsCdP5G6g==",
      "license": "ISC"
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-tsconfig": {
      "version": "4.10.1",
      "resolved": "https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.10.1.tgz",
      "integrity": "sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "resolve-pkg-maps": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/privatenumber/get-tsconfig?sponsor=1"
      }
    },
    "node_modules/get-uri": {
      "version": "6.0.5",
      "resolved": "https://registry.npmjs.org/get-uri/-/get-uri-6.0.5.tgz",
      "integrity": "sha512-b1O07XYq8eRuVzBNgJLstU6FYc1tS6wnMtF1I1D9lE8LxZSOGZ7LhxN54yPP6mGw5f2CkXY2BQUL9Fx41qvcIg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "basic-ftp": "^5.0.2",
        "data-uri-to-buffer": "^6.0.2",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/giget": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/giget/-/giget-2.0.0.tgz",
      "integrity": "sha512-L5bGsVkxJbJgdnwyuheIunkGatUF/zssUoxxjACCseZYAVbaqdh9Tsmmlkl8vYan09H7sbvKt4pS8GqKLBrEzA==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "citty": "^0.1.6",
        "consola": "^3.4.0",
        "defu": "^6.1.4",
        "node-fetch-native": "^1.6.6",
        "nypm": "^0.6.0",
        "pathe": "^2.0.3"
      },
      "bin": {
        "giget": "dist/cli.mjs"
      }
    },
    "node_modules/gl-matrix": {
      "version": "3.4.4",
      "resolved": "https://registry.npmjs.org/gl-matrix/-/gl-matrix-3.4.4.tgz",
      "integrity": "sha512-latSnyDNt/8zYUB6VIJ6PCh2jBjJX6gnDsoCZ7LyW7GkqrD51EWwa9qCoGixj8YqBtETQK/xY7OmpTF8xz1DdQ==",
      "license": "MIT"
    },
    "node_modules/glamor": {
      "version": "2.20.40",
      "resolved": "https://registry.npmjs.org/glamor/-/glamor-2.20.40.tgz",
      "integrity": "sha512-DNXCd+c14N9QF8aAKrfl4xakPk5FdcFwmH7sD0qnC0Pr7xoZ5W9yovhUrY/dJc3psfGGXC58vqQyRtuskyUJxA==",
      "license": "MIT",
      "dependencies": {
        "fbjs": "^0.8.12",
        "inline-style-prefixer": "^3.0.6",
        "object-assign": "^4.1.1",
        "prop-types": "^15.5.10",
        "through": "^2.3.8"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "license": "ISC",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/glob-to-regexp": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz",
      "integrity": "sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==",
      "license": "BSD-2-Clause",
      "peer": true
    },
    "node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globalthis": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.2.1",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/glsl-noise": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/glsl-noise/-/glsl-noise-0.0.0.tgz",
      "integrity": "sha512-b/ZCF6amfAUb7dJM/MxRs7AetQEahYzJ8PtgfrmEdtw6uyGOr+ZSGtgjFm6mfsBkxJ4d2W7kg+Nlqzqvn3Bc0w==",
      "license": "MIT"
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/gzip-size": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/gzip-size/-/gzip-size-6.0.0.tgz",
      "integrity": "sha512-ax7ZYomf6jqPTQ4+XCpUGyXKHk5WweS+e05MBO4/y3WJ5RkmPXNKvX+bx1behVILVwr6JSQvZAku021CHPXG3Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "duplexer": "^0.1.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/has-bigints": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hls.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/hls.js/-/hls.js-1.3.5.tgz",
      "integrity": "sha512-uybAvKS6uDe0MnWNEPnO0krWVr+8m2R0hJ/viql8H3MVK+itq8gGQuIYoFHL3rECkIpNH98Lw8YuuWMKZxp3Ew==",
      "license": "Apache-2.0"
    },
    "node_modules/hoist-non-react-statics": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "react-is": "^16.7.0"
      }
    },
    "node_modules/html-escaper": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz",
      "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/html-parse-stringify": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/html-parse-stringify/-/html-parse-stringify-3.0.1.tgz",
      "integrity": "sha512-KknJ50kTInJ7qIScF3jeaFRpMpE8/lfiTdzf/twXyPBLAGrLRTmkz3AdTnKeh40X8k9L2fdYwEp/42WGXIRGcg==",
      "license": "MIT",
      "dependencies": {
        "void-elements": "3.1.0"
      }
    },
    "node_modules/html-to-text": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/html-to-text/-/html-to-text-9.0.5.tgz",
      "integrity": "sha512-qY60FjREgVZL03vJU6IfMV4GDjGBIoOyvuFdpBDIX9yTlDw0TjxVBQp+P8NvpdIXNJvfWBTNul7fsAQJq2FNpg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@selderee/plugin-htmlparser2": "^0.11.0",
        "deepmerge": "^4.3.1",
        "dom-serializer": "^2.0.0",
        "htmlparser2": "^8.0.2",
        "selderee": "^0.11.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/htmlparser2": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-8.0.2.tgz",
      "integrity": "sha512-GYdjWKDkbRLkZ5geuHs5NY1puJ+PXwP7+fHPRz06Eirsb9ugf6d8kkXav6ADhcODhFFPMIXyxkxSuMf3D6NCFA==",
      "dev": true,
      "funding": [
        "https://github.com/fb55/htmlparser2?sponsor=1",
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "domelementtype": "^2.3.0",
        "domhandler": "^5.0.3",
        "domutils": "^3.0.1",
        "entities": "^4.4.0"
      }
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/http-link-header": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/http-link-header/-/http-link-header-1.1.3.tgz",
      "integrity": "sha512-3cZ0SRL8fb9MUlU3mKM61FcQvPfXx2dBrZW3Vbg5CXa8jFlK8OaEpePenLe1oEXQduhz8b0QjsqfS59QP4AJDQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/http-proxy-agent": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz",
      "integrity": "sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/http-proxy-agent/node_modules/agent-base": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/hyphenate-style-name": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/hyphenate-style-name/-/hyphenate-style-name-1.1.0.tgz",
      "integrity": "sha512-WDC/ui2VVRrz3jOVi+XtjqkDjiVjTtFaAGiW37k6b+ohyQ5wYDOGkvCZa8+H0nx3gyvv0+BST9xuOgIyGQ00gw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/i18next": {
      "version": "25.4.2",
      "resolved": "https://registry.npmjs.org/i18next/-/i18next-25.4.2.tgz",
      "integrity": "sha512-gD4T25a6ovNXsfXY1TwHXXXLnD/K2t99jyYMCSimSCBnBRJVQr5j+VAaU83RJCPzrTGhVQ6dqIga66xO2rtd5g==",
      "funding": [
        {
          "type": "individual",
          "url": "https://locize.com"
        },
        {
          "type": "individual",
          "url": "https://locize.com/i18next.html"
        },
        {
          "type": "individual",
          "url": "https://www.i18next.com/how-to/faq#i18next-is-awesome.-how-can-i-support-the-project"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.6"
      },
      "peerDependencies": {
        "typescript": "^5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/i18next-browser-languagedetector": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/i18next-browser-languagedetector/-/i18next-browser-languagedetector-8.2.0.tgz",
      "integrity": "sha512-P+3zEKLnOF0qmiesW383vsLdtQVyKtCNA9cjSoKCppTKPQVfKd2W8hbVo5ZhNJKDqeM7BOcvNoKJOjpHh4Js9g==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.23.2"
      }
    },
    "node_modules/i18next-fs-backend": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/i18next-fs-backend/-/i18next-fs-backend-2.6.0.tgz",
      "integrity": "sha512-3ZlhNoF9yxnM8pa8bWp5120/Ob6t4lVl1l/tbLmkml/ei3ud8IWySCHt2lrY5xWRlSU5D9IV2sm5bEbGuTqwTw==",
      "license": "MIT"
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/idb": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/idb/-/idb-7.1.1.tgz",
      "integrity": "sha512-gchesWBzyvGHRO9W8tzUWFDycow5gwjvFKfyV9FF32Y7F50yZMp7mP+T2mJIWFx49zicqyC4uefHM17o6xKIVQ==",
      "license": "ISC"
    },
    "node_modules/idb-keyval": {
      "version": "6.2.2",
      "resolved": "https://registry.npmjs.org/idb-keyval/-/idb-keyval-6.2.2.tgz",
      "integrity": "sha512-yjD9nARJ/jb1g+CvD0tlhUHOrJ9Sy0P8T9MF3YaLlHnSRpwPfpTX0XIvpmw3gAJUmEu3FiICLBDPXVwyEvrleg==",
      "license": "Apache-2.0"
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "BSD-3-Clause"
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/image-ssim": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/image-ssim/-/image-ssim-0.2.0.tgz",
      "integrity": "sha512-W7+sO6/yhxy83L0G7xR8YAc5Z5QFtYEXXRV6EaE8tuYBZJnA3gVgp3q7X7muhLZVodeb9UfvjSbwt9VJwjIYAg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/immediate": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/immediate/-/immediate-3.0.6.tgz",
      "integrity": "sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==",
      "license": "MIT"
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
      "license": "ISC",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/inline-style-prefixer": {
      "version": "3.0.8",
      "resolved": "https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-3.0.8.tgz",
      "integrity": "sha512-ne8XIyyqkRaNJ1JfL1NYzNdCNxq+MCBQhC8NgOQlzNm2vv3XxlP0VSLQUbSRCF6KPEoveCVEpayHoHzcMyZsMQ==",
      "license": "MIT",
      "dependencies": {
        "bowser": "^1.7.3",
        "css-in-js-utils": "^2.0.0"
      }
    },
    "node_modules/inquirer": {
      "version": "6.5.2",
      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.5.2.tgz",
      "integrity": "sha512-cntlB5ghuB0iuO65Ovoi8ogLHiWGs/5yNrtUcKjFhSSiVeAIVpD7koaSU9RM8mpXw5YDi9RdYXGQMaOURB7ycQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-escapes": "^3.2.0",
        "chalk": "^2.4.2",
        "cli-cursor": "^2.1.0",
        "cli-width": "^2.0.0",
        "external-editor": "^3.0.3",
        "figures": "^2.0.0",
        "lodash": "^4.17.12",
        "mute-stream": "0.0.7",
        "run-async": "^2.2.0",
        "rxjs": "^6.4.0",
        "string-width": "^2.1.0",
        "strip-ansi": "^5.1.0",
        "through": "^2.3.6"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/inquirer/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/inquirer/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/inquirer/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/inquirer/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/inquirer/node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/inquirer/node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/internal-slot": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "hasown": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/internmap": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/internmap/-/internmap-1.0.1.tgz",
      "integrity": "sha512-lDB5YccMydFBtasVtxnZ3MRBHuaoE8GKsppq+EchKL2U4nK/DmEpPHNH8MZe5HkMtpSiTSOZwfN0tzYjO/lJEw==",
      "license": "ISC"
    },
    "node_modules/intl-messageformat": {
      "version": "10.7.16",
      "resolved": "https://registry.npmjs.org/intl-messageformat/-/intl-messageformat-10.7.16.tgz",
      "integrity": "sha512-UmdmHUmp5CIKKjSoE10la5yfU+AYJAaiYLsodbjL4lji83JNvgOQUjGaGhGrpFCb0Uh7sl7qfP1IyILa8Z40ug==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@formatjs/ecma402-abstract": "2.3.4",
        "@formatjs/fast-memoize": "2.2.7",
        "@formatjs/icu-messageformat-parser": "2.11.2",
        "tslib": "^2.8.0"
      }
    },
    "node_modules/ip-address": {
      "version": "10.0.1",
      "resolved": "https://registry.npmjs.org/ip-address/-/ip-address-10.0.1.tgz",
      "integrity": "sha512-NWv9YLW4PoW2B7xtzaS3NCot75m6nK7Icdv0o3lfMceJVRfSoQwqD4wEH5rLwoKJwUiZ/rfpiVBhnaF0FK4HoA==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-array-buffer": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
      "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/is-async-function": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
      "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
      "license": "MIT",
      "dependencies": {
        "async-function": "^1.0.0",
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.1",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bigint": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
      "license": "MIT",
      "dependencies": {
        "has-bigints": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
      "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bun-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-bun-module/-/is-bun-module-2.0.0.tgz",
      "integrity": "sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "semver": "^7.7.1"
      }
    },
    "node_modules/is-bun-module/node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-data-view": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-docker": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/is-docker/-/is-docker-2.2.1.tgz",
      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "is-docker": "cli.js"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-finalizationregistry": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
      "integrity": "sha512-VHskAKYM8RfSFXwee5t5cbN5PZeq1Wrh6qd5bkyiXIf6UQcN6w/A0eXM9r6t8d+GYOh+o6ZhiEnb88LN/Y8m2w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/is-generator-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.0",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-map": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-module": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz",
      "integrity": "sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g==",
      "license": "MIT"
    },
    "node_modules/is-negative-zero": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
      "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-obj": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-plain-object": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-5.0.0.tgz",
      "integrity": "sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-promise": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.2.2.tgz",
      "integrity": "sha512-+lP4/6lKUBfQjZ2pdxThZvLUAafmZb8OAxFb8XXtiQmS35INgr85hdOGoEs124ez1FCnZJt6jau/T+alh58QFQ==",
      "license": "MIT"
    },
    "node_modules/is-regex": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-regexp": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-regexp/-/is-regexp-1.0.0.tgz",
      "integrity": "sha512-7zjFAPO4/gwyQAAgRRmqeEeyIICSdmCqa3tsVHMdBzaXXRiqopZL4Cyghg/XulGWrtABTpbnYYzzIRffLkP4oA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-set": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-stream": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
      "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-string": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-symbols": "^1.1.0",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
      "license": "MIT",
      "dependencies": {
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/is-weakmap": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
      "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakset": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-wsl": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.2.0.tgz",
      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-docker": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "license": "MIT"
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "license": "ISC"
    },
    "node_modules/isobject": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
      "integrity": "sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/isomorphic-fetch": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/isomorphic-fetch/-/isomorphic-fetch-3.0.0.tgz",
      "integrity": "sha512-qvUtwJ3j6qwsF3jLxkZ72qCgjMysPzDfeV240JHiGZsANBYd+EEuu35v7dfrJ9Up0Ak07D7GGSkGhCHTqg/5wA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "node-fetch": "^2.6.1",
        "whatwg-fetch": "^3.4.1"
      }
    },
    "node_modules/iterator.prototype": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz",
      "integrity": "sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "get-proto": "^1.0.0",
        "has-symbols": "^1.1.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/its-fine": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/its-fine/-/its-fine-2.0.0.tgz",
      "integrity": "sha512-KLViCmWx94zOvpLwSlsx6yOCeMhZYaxrJV87Po5k/FoZzcPSahvK5qJ7fYhS61sZi5ikmh2S3Hz55A2l3U69ng==",
      "license": "MIT",
      "dependencies": {
        "@types/react-reconciler": "^0.28.9"
      },
      "peerDependencies": {
        "react": "^19.0.0"
      }
    },
    "node_modules/its-fine/node_modules/@types/react-reconciler": {
      "version": "0.28.9",
      "resolved": "https://registry.npmjs.org/@types/react-reconciler/-/react-reconciler-0.28.9.tgz",
      "integrity": "sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/iwer": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/iwer/-/iwer-2.1.1.tgz",
      "integrity": "sha512-3VuQhekh/3BMRlaS7FFjcTNjKOwURAgL7mu0HndU72mFNyRyHRpGfhXGZ1iJkjfq/vEw0v1b7fx8k1knGSQ5gQ==",
      "license": "MIT",
      "dependencies": {
        "gl-matrix": "^3.4.3",
        "webxr-layers-polyfill": "^1.1.0"
      }
    },
    "node_modules/jake": {
      "version": "10.9.4",
      "resolved": "https://registry.npmjs.org/jake/-/jake-10.9.4.tgz",
      "integrity": "sha512-wpHYzhxiVQL+IV05BLE2Xn34zW1S223hvjtqk0+gsPrwd/8JNLXJgZZM/iPFsYc1xyphF+6M6EvdE5E9MBGkDA==",
      "license": "Apache-2.0",
      "dependencies": {
        "async": "^3.2.6",
        "filelist": "^1.0.4",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "jake": "bin/cli.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/jest-worker": {
      "version": "27.5.1",
      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-27.5.1.tgz",
      "integrity": "sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/node": "*",
        "merge-stream": "^2.0.0",
        "supports-color": "^8.0.0"
      },
      "engines": {
        "node": ">= 10.13.0"
      }
    },
    "node_modules/jest-worker/node_modules/supports-color": {
      "version": "8.1.1",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
      "integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/supports-color?sponsor=1"
      }
    },
    "node_modules/jiti": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.5.1.tgz",
      "integrity": "sha512-twQoecYPiVA5K/h6SxtORw/Bs3ar+mLUtoPSc7iMXzQzK8d7eJ/R09wmTwAjiamETn1cXYPGfNnu7DMoHgu12w==",
      "devOptional": true,
      "license": "MIT",
      "bin": {
        "jiti": "lib/jiti-cli.mjs"
      }
    },
    "node_modules/jose": {
      "version": "4.15.9",
      "resolved": "https://registry.npmjs.org/jose/-/jose-4.15.9.tgz",
      "integrity": "sha512-1vUQX+IdDMVPj4k8kOxgUqlcK518yluMuGZwqlr44FS1ppZB/5GWh4rZG89erpOBOJjU/OBsnCVFfapsRz6nEA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/panva"
      }
    },
    "node_modules/jpeg-js": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/jpeg-js/-/jpeg-js-0.4.4.tgz",
      "integrity": "sha512-WZzeDOEtTOBK4Mdsar0IqEU5sMr3vSV2RqkAIzUEV2BHnUfKGyswWFPFwK5EeDo93K3FohSHbLAjj0s1Wzd+dg==",
      "dev": true,
      "license": "BSD-3-Clause"
    },
    "node_modules/js-library-detector": {
      "version": "6.7.0",
      "resolved": "https://registry.npmjs.org/js-library-detector/-/js-library-detector-6.7.0.tgz",
      "integrity": "sha512-c80Qupofp43y4cJ7+8TTDN/AsDwLi5oOm/plBrWI+iQt485vKXCco+yVmOwEgdo9VOdsYTuV0UlTeetVPTriXA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "3.14.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz",
      "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/json-schema": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz",
      "integrity": "sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==",
      "license": "(AFL-2.1 OR BSD-3-Clause)"
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stringify-pretty-compact": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-stringify-pretty-compact/-/json-stringify-pretty-compact-3.0.0.tgz",
      "integrity": "sha512-Rc2suX5meI0S3bfdZuA7JMFBGkJ875ApfVyq2WHELjBiiG22My/l7/8zPpH/CfFVQHuVLd8NLR0nv6vi0BYYKA==",
      "license": "MIT"
    },
    "node_modules/json5": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.2.tgz",
      "integrity": "sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "minimist": "^1.2.0"
      },
      "bin": {
        "json5": "lib/cli.js"
      }
    },
    "node_modules/jsonfile": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.2.0.tgz",
      "integrity": "sha512-FGuPw30AdOIUTRMC2OMRtQV+jkVj2cfPqSeWXv1NEAJ1qZ5zb1X6z1mFhbfOB/iy3ssJCD+3KuZ8r8C3uVFlAg==",
      "license": "MIT",
      "dependencies": {
        "universalify": "^2.0.0"
      },
      "optionalDependencies": {
        "graceful-fs": "^4.1.6"
      }
    },
    "node_modules/jsonpointer": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/jsonpointer/-/jsonpointer-5.0.1.tgz",
      "integrity": "sha512-p/nXbhSEcu3pZRdkW1OfJhpsVtW1gd4Wa1fnQc9YLiTfAjn0312eMKimbdIQzuZl9aa9xUGaRlP9T/CJE/ditQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/jsx-ast-utils": {
      "version": "3.3.5",
      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.6",
        "array.prototype.flat": "^1.3.1",
        "object.assign": "^4.1.4",
        "object.values": "^1.1.6"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/kareem": {
      "version": "2.6.3",
      "resolved": "https://registry.npmjs.org/kareem/-/kareem-2.6.3.tgz",
      "integrity": "sha512-C3iHfuGUXK2u8/ipq9LfjFfXFxAZMQJJq7vLS45r3D9Y2xQ/m4S8zaR4zMLFWh9AsNPXmcFfUDhTEO8UIC/V6Q==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/language-subtag-registry": {
      "version": "0.3.23",
      "resolved": "https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.23.tgz",
      "integrity": "sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==",
      "dev": true,
      "license": "CC0-1.0"
    },
    "node_modules/language-tags": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/language-tags/-/language-tags-1.0.9.tgz",
      "integrity": "sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "language-subtag-registry": "^0.3.20"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/leac": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/leac/-/leac-0.6.0.tgz",
      "integrity": "sha512-y+SqErxb8h7nE/fiEX07jsbuhrpO9lL8eca7/Y1nuWV2moNlXhyd59iDGcRf6moVyDMbmTNzL40SUyrFU/yDpg==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://ko-fi.com/killymxi"
      }
    },
    "node_modules/leven": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/leven/-/leven-3.1.0.tgz",
      "integrity": "sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lie": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/lie/-/lie-3.3.0.tgz",
      "integrity": "sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==",
      "license": "MIT",
      "dependencies": {
        "immediate": "~3.0.5"
      }
    },
    "node_modules/lighthouse": {
      "version": "12.1.0",
      "resolved": "https://registry.npmjs.org/lighthouse/-/lighthouse-12.1.0.tgz",
      "integrity": "sha512-PQLaNcv3tQcybnYux6T8uoS6+RNrNYvVJBbGo0kkbD4XTjesGslOXWeMkUQDK7c28nLfVZi7gYWDUsicTLglKQ==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@paulirish/trace_engine": "^0.0.23",
        "@sentry/node": "^6.17.4",
        "axe-core": "^4.9.1",
        "chrome-launcher": "^1.1.2",
        "configstore": "^5.0.1",
        "csp_evaluator": "1.1.1",
        "devtools-protocol": "0.0.1312386",
        "enquirer": "^2.3.6",
        "http-link-header": "^1.1.1",
        "intl-messageformat": "^10.5.3",
        "jpeg-js": "^0.4.4",
        "js-library-detector": "^6.7.0",
        "lighthouse-logger": "^2.0.1",
        "lighthouse-stack-packs": "1.12.1",
        "lodash": "^4.17.21",
        "lookup-closest-locale": "6.2.0",
        "metaviewport-parser": "0.3.0",
        "open": "^8.4.0",
        "parse-cache-control": "1.0.1",
        "puppeteer-core": "^22.11.1",
        "robots-parser": "^3.0.1",
        "semver": "^5.3.0",
        "speedline-core": "^1.4.3",
        "third-party-web": "^0.24.3",
        "tldts-icann": "^6.1.16",
        "ws": "^7.0.0",
        "yargs": "^17.3.1",
        "yargs-parser": "^21.0.0"
      },
      "bin": {
        "chrome-debug": "core/scripts/manual-chrome-launcher.js",
        "lighthouse": "cli/index.js",
        "smokehouse": "cli/test/smokehouse/frontends/smokehouse-bin.js"
      },
      "engines": {
        "node": ">=18.16"
      }
    },
    "node_modules/lighthouse-logger": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/lighthouse-logger/-/lighthouse-logger-1.2.0.tgz",
      "integrity": "sha512-wzUvdIeJZhRsG6gpZfmSCfysaxNEr43i+QT+Hie94wvHDKFLi4n7C2GqZ4sTC+PH5b5iktmXJvU87rWvhP3lHw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "debug": "^2.6.8",
        "marky": "^1.2.0"
      }
    },
    "node_modules/lighthouse-logger/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/lighthouse-logger/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lighthouse-stack-packs": {
      "version": "1.12.1",
      "resolved": "https://registry.npmjs.org/lighthouse-stack-packs/-/lighthouse-stack-packs-1.12.1.tgz",
      "integrity": "sha512-i4jTmg7tvZQFwNFiwB+nCK6a7ICR68Xcwo+VIVd6Spi71vBNFUlds5HiDrSbClZdkQDON2Bhqv+KKJIo5zkPeA==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/lighthouse/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lighthouse/node_modules/chrome-launcher": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/chrome-launcher/-/chrome-launcher-1.2.0.tgz",
      "integrity": "sha512-JbuGuBNss258bvGil7FT4HKdC3SC2K7UAEUqiPy3ACS3Yxo3hAW6bvFpCu2HsIJLgTqxgEX6BkujvzZfLpUD0Q==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/node": "*",
        "escape-string-regexp": "^4.0.0",
        "is-wsl": "^2.2.0",
        "lighthouse-logger": "^2.0.1"
      },
      "bin": {
        "print-chrome-path": "bin/print-chrome-path.cjs"
      },
      "engines": {
        "node": ">=12.13.0"
      }
    },
    "node_modules/lighthouse/node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/lighthouse/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lighthouse/node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lighthouse/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lighthouse/node_modules/lighthouse-logger": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/lighthouse-logger/-/lighthouse-logger-2.0.2.tgz",
      "integrity": "sha512-vWl2+u5jgOQuZR55Z1WM0XDdrJT6mzMP8zHUct7xTlWhuQs+eV0g+QL0RQdFjT54zVmbhLCP8vIVpy1wGn/gCg==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "debug": "^4.4.1",
        "marky": "^1.2.2"
      }
    },
    "node_modules/lighthouse/node_modules/open": {
      "version": "8.4.2",
      "resolved": "https://registry.npmjs.org/open/-/open-8.4.2.tgz",
      "integrity": "sha512-7x81NCL719oNbsq/3mh+hVrAWmFuEYUqrq/Iw3kUzH8ReypT9QQ0BLoJS7/G9k6N81XjW4qHWtjWwe/9eLy1EQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-lazy-prop": "^2.0.0",
        "is-docker": "^2.1.1",
        "is-wsl": "^2.2.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lighthouse/node_modules/semver": {
      "version": "5.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.2.tgz",
      "integrity": "sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver"
      }
    },
    "node_modules/lighthouse/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lighthouse/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lighthouse/node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/lighthouse/node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/lighthouse/node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/lighthouse/node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/lightningcss": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
      "dev": true,
      "license": "MPL-2.0",
      "dependencies": {
        "detect-libc": "^2.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "lightningcss-darwin-arm64": "1.30.1",
        "lightningcss-darwin-x64": "1.30.1",
        "lightningcss-freebsd-x64": "1.30.1",
        "lightningcss-linux-arm-gnueabihf": "1.30.1",
        "lightningcss-linux-arm64-gnu": "1.30.1",
        "lightningcss-linux-arm64-musl": "1.30.1",
        "lightningcss-linux-x64-gnu": "1.30.1",
        "lightningcss-linux-x64-musl": "1.30.1",
        "lightningcss-win32-arm64-msvc": "1.30.1",
        "lightningcss-win32-x64-msvc": "1.30.1"
      }
    },
    "node_modules/lightningcss-darwin-arm64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-darwin-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-freebsd-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm-gnueabihf": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-arm64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-x64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/loader-runner": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-4.3.0.tgz",
      "integrity": "sha512-3R/1M+yS3j5ou80Me59j7F9IMs4PXs3VqRrm0TU3AbKPxlmpoY1TNscJV/oGJXo8qCatFGTfDbY6W6ipGOYXfg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6.11.5"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "license": "MIT"
    },
    "node_modules/lodash.debounce": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
      "integrity": "sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==",
      "license": "MIT"
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.sortby": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",
      "integrity": "sha512-HDWXG8isMntAyRF5vZ7xKuEvOhT4AhlRt/3czTSjvGUxjYCBVRQY48ViDHyfYz9VIoBkW4TMGQNapx+l3RUwdA==",
      "license": "MIT"
    },
    "node_modules/long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA==",
      "license": "Apache-2.0"
    },
    "node_modules/lookup-closest-locale": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/lookup-closest-locale/-/lookup-closest-locale-6.2.0.tgz",
      "integrity": "sha512-/c2kL+Vnp1jnV6K6RpDTHK3dgg0Tu2VVp+elEiJpjfS1UyY7AjOYHohRug6wT0OpoX2qFgNORndE9RqesfVxWQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru_map": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/lru_map/-/lru_map-0.3.3.tgz",
      "integrity": "sha512-Pn9cox5CsMYngeDbmChANltQl+5pi6XmTrraMSzhPmMBbmgcxmqWry0U3PGapCU1yB4/LqCcom7qhHZiF/jGfQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "license": "ISC",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/lucide-react": {
      "version": "0.539.0",
      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.539.0.tgz",
      "integrity": "sha512-VVISr+VF2krO91FeuCrm1rSOLACQUYVy7NQkzrOty52Y8TlTPcXcMdQFj9bYzBgXbWCiywlwSZ3Z8u6a+6bMlg==",
      "license": "ISC",
      "peerDependencies": {
        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/maath": {
      "version": "0.10.8",
      "resolved": "https://registry.npmjs.org/maath/-/maath-0.10.8.tgz",
      "integrity": "sha512-tRvbDF0Pgqz+9XUa4jjfgAQ8/aPKmQdWXilFu2tMy4GWj4NOsx99HlULO4IeREfbO3a0sA145DZYyvXPkybm0g==",
      "license": "MIT",
      "peerDependencies": {
        "@types/three": ">=0.134.0",
        "three": ">=0.134.0"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.18",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.18.tgz",
      "integrity": "sha512-yi8swmWbO17qHhwIBNeeZxTceJMeBvWJaId6dyvTSOwTipqeHhMhOrz6513r1sOKnpvQ7zkhlG8tPrpilwTxHQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.5"
      }
    },
    "node_modules/make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "semver": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/make-dir/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/marked": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/marked/-/marked-7.0.4.tgz",
      "integrity": "sha512-t8eP0dXRJMtMvBojtkcsA7n48BkauktUKzfkPSCq85ZMTJ0v76Rke4DYz01omYpPTUh4p/f7HePgRo3ebG8+QQ==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "marked": "bin/marked.js"
      },
      "engines": {
        "node": ">= 16"
      }
    },
    "node_modules/marky": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/marky/-/marky-1.3.0.tgz",
      "integrity": "sha512-ocnPZQLNpvbedwTy9kNrQEsknEfgvcLMvOtz3sFeWApDq1MXH1TqkCIx58xlpESsfwQOnuBO9beyQuNGzVvuhQ==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/md-to-react-email": {
      "version": "5.0.5",
      "resolved": "https://registry.npmjs.org/md-to-react-email/-/md-to-react-email-5.0.5.tgz",
      "integrity": "sha512-OvAXqwq57uOk+WZqFFNCMZz8yDp8BD3WazW1wAKHUrPbbdr89K9DWS6JXY09vd9xNdPNeurI8DU/X4flcfaD8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "marked": "7.0.4"
      },
      "peerDependencies": {
        "react": "^18.0 || ^19.0"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/memoize-one": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-5.2.1.tgz",
      "integrity": "sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q==",
      "license": "MIT"
    },
    "node_modules/memory-pager": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz",
      "integrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==",
      "license": "MIT"
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/meshline": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/meshline/-/meshline-3.3.1.tgz",
      "integrity": "sha512-/TQj+JdZkeSUOl5Mk2J7eLcYTLiQm2IDzmlSvYm7ov15anEcDJ92GHqqazxTSreeNgfnYu24kiEvvv0WlbCdFQ==",
      "license": "MIT",
      "peerDependencies": {
        "three": ">=0.137"
      }
    },
    "node_modules/meshoptimizer": {
      "version": "0.22.0",
      "resolved": "https://registry.npmjs.org/meshoptimizer/-/meshoptimizer-0.22.0.tgz",
      "integrity": "sha512-IebiK79sqIy+E4EgOr+CAw+Ke8hAspXKzBd0JdgEmPHiAwmvEj2S4h1rfvo+o/BnfEYd/jAOg5IeeIjzlzSnDg==",
      "license": "MIT"
    },
    "node_modules/metaviewport-parser": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/metaviewport-parser/-/metaviewport-parser-0.3.0.tgz",
      "integrity": "sha512-EoYJ8xfjQ6kpe9VbVHvZTZHiOl4HL1Z18CrZ+qahvLXT7ZO4YTC2JMyt5FaUp9JJp6J4Ybb/z7IsCXZt86/QkQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micro": {
      "version": "10.0.1",
      "resolved": "https://registry.npmjs.org/micro/-/micro-10.0.1.tgz",
      "integrity": "sha512-9uwZSsUrqf6+4FLLpiPj5TRWQv5w5uJrJwsx1LR/TjqvQmKC1XnGQ9OHrFwR3cbZ46YqPqxO/XJCOpWnqMPw2Q==",
      "license": "MIT",
      "dependencies": {
        "arg": "4.1.0",
        "content-type": "1.0.4",
        "raw-body": "2.4.1"
      },
      "bin": {
        "micro": "dist/src/bin/micro.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      }
    },
    "node_modules/micro/node_modules/bytes": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
      "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/micro/node_modules/content-type": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micro/node_modules/depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha512-7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micro/node_modules/http-errors": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.3.tgz",
      "integrity": "sha512-ZTTX0MWrsQ2ZAhA1cejAwDLycFsd7I7nVtnkT3Ol0aqodaKW+0CTZDQ1uBv5whptCnc8e8HeRRJxRs0kmm/Qfw==",
      "license": "MIT",
      "dependencies": {
        "depd": "~1.1.2",
        "inherits": "2.0.4",
        "setprototypeof": "1.1.1",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micro/node_modules/raw-body": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.4.1.tgz",
      "integrity": "sha512-9WmIKF6mkvA0SLmA2Knm9+qj89e+j1zqgyn8aXGd7+nAduPoqgI9lO57SAZNn/Byzo5P7JhXTyg9PzaJbH73bA==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.0",
        "http-errors": "1.7.3",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/micro/node_modules/setprototypeof": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
      "integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==",
      "license": "ISC"
    },
    "node_modules/micro/node_modules/statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micro/node_modules/toidentifier": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
      "integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.54.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.54.0.tgz",
      "integrity": "sha512-aU5EJuIN2WDemCcAp2vFBfp/m4EAhWJnUNSSw0ixs7/kXbd6Pg64EmwJkNdFhB8aWt1sH2CTXrLxo/iAGV3oPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types/node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mimic-fn": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
      "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/minizlib": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.0.2.tgz",
      "integrity": "sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "minipass": "^7.1.2"
      },
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/mitt": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz",
      "integrity": "sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/mkdirp": {
      "version": "0.5.6",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "minimist": "^1.2.6"
      },
      "bin": {
        "mkdirp": "bin/cmd.js"
      }
    },
    "node_modules/mongodb": {
      "version": "6.19.0",
      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.19.0.tgz",
      "integrity": "sha512-H3GtYujOJdeKIMLKBT9PwlDhGrQfplABNF1G904w6r5ZXKWyv77aB0X9B+rhmaAwjtllHzaEkvi9mkGVZxs2Bw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@mongodb-js/saslprep": "^1.1.9",
        "bson": "^6.10.4",
        "mongodb-connection-string-url": "^3.0.0"
      },
      "engines": {
        "node": ">=16.20.1"
      },
      "peerDependencies": {
        "@aws-sdk/credential-providers": "^3.188.0",
        "@mongodb-js/zstd": "^1.1.0 || ^2.0.0",
        "gcp-metadata": "^5.2.0",
        "kerberos": "^2.0.1",
        "mongodb-client-encryption": ">=6.0.0 <7",
        "snappy": "^7.3.2",
        "socks": "^2.7.1"
      },
      "peerDependenciesMeta": {
        "@aws-sdk/credential-providers": {
          "optional": true
        },
        "@mongodb-js/zstd": {
          "optional": true
        },
        "gcp-metadata": {
          "optional": true
        },
        "kerberos": {
          "optional": true
        },
        "mongodb-client-encryption": {
          "optional": true
        },
        "snappy": {
          "optional": true
        },
        "socks": {
          "optional": true
        }
      }
    },
    "node_modules/mongodb-connection-string-url": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-3.0.2.tgz",
      "integrity": "sha512-rMO7CGo/9BFwyZABcKAWL8UJwH/Kc2x0g72uhDWzG48URRax5TCIcJ7Rc3RZqffZzO/Gwff/jyKwCU9TN8gehA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@types/whatwg-url": "^11.0.2",
        "whatwg-url": "^14.1.0 || ^13.0.0"
      }
    },
    "node_modules/mongoose": {
      "version": "8.18.0",
      "resolved": "https://registry.npmjs.org/mongoose/-/mongoose-8.18.0.tgz",
      "integrity": "sha512-3TixPihQKBdyaYDeJqRjzgb86KbilEH07JmzV8SoSjgoskNTpa6oTBmDxeoF9p8YnWQoz7shnCyPkSV/48y3yw==",
      "license": "MIT",
      "dependencies": {
        "bson": "^6.10.4",
        "kareem": "2.6.3",
        "mongodb": "~6.18.0",
        "mpath": "0.9.0",
        "mquery": "5.0.0",
        "ms": "2.1.3",
        "sift": "17.1.3"
      },
      "engines": {
        "node": ">=16.20.1"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mongoose"
      }
    },
    "node_modules/mongoose/node_modules/mongodb": {
      "version": "6.18.0",
      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-6.18.0.tgz",
      "integrity": "sha512-fO5ttN9VC8P0F5fqtQmclAkgXZxbIkYRTUi1j8JO6IYwvamkhtYDilJr35jOPELR49zqCJgXZWwCtW7B+TM8vQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@mongodb-js/saslprep": "^1.1.9",
        "bson": "^6.10.4",
        "mongodb-connection-string-url": "^3.0.0"
      },
      "engines": {
        "node": ">=16.20.1"
      },
      "peerDependencies": {
        "@aws-sdk/credential-providers": "^3.188.0",
        "@mongodb-js/zstd": "^1.1.0 || ^2.0.0",
        "gcp-metadata": "^5.2.0",
        "kerberos": "^2.0.1",
        "mongodb-client-encryption": ">=6.0.0 <7",
        "snappy": "^7.2.2",
        "socks": "^2.7.1"
      },
      "peerDependenciesMeta": {
        "@aws-sdk/credential-providers": {
          "optional": true
        },
        "@mongodb-js/zstd": {
          "optional": true
        },
        "gcp-metadata": {
          "optional": true
        },
        "kerberos": {
          "optional": true
        },
        "mongodb-client-encryption": {
          "optional": true
        },
        "snappy": {
          "optional": true
        },
        "socks": {
          "optional": true
        }
      }
    },
    "node_modules/motion-dom": {
      "version": "12.23.12",
      "resolved": "https://registry.npmjs.org/motion-dom/-/motion-dom-12.23.12.tgz",
      "integrity": "sha512-RcR4fvMCTESQBD/uKQe49D5RUeDOokkGRmz4ceaJKDBgHYtZtntC/s2vLvY38gqGaytinij/yi3hMcWVcEF5Kw==",
      "license": "MIT",
      "dependencies": {
        "motion-utils": "^12.23.6"
      }
    },
    "node_modules/motion-utils": {
      "version": "12.23.6",
      "resolved": "https://registry.npmjs.org/motion-utils/-/motion-utils-12.23.6.tgz",
      "integrity": "sha512-eAWoPgr4eFEOFfg2WjIsMoqJTW6Z8MTUCgn/GZ3VRpClWBdnbjryiA3ZSNLyxCTmCQx4RmYX6jX1iWHbenUPNQ==",
      "license": "MIT"
    },
    "node_modules/mpath": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz",
      "integrity": "sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/mquery": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/mquery/-/mquery-5.0.0.tgz",
      "integrity": "sha512-iQMncpmEK8R8ncT8HJGsGc9Dsp8xcgYMVSbs5jgnm1lFHTZqMJTUWTDx1LBO8+mK3tPNZWFLBghQEIOULSTHZg==",
      "license": "MIT",
      "dependencies": {
        "debug": "4.x"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/mrmime": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/mrmime/-/mrmime-2.0.1.tgz",
      "integrity": "sha512-Y3wQdFg2Va6etvQ5I82yUhGdsKrcYox6p7FfL1LbK2J4V01F9TGlepTIhnK24t7koZibmg82KGglhA1XK5IsLQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/mute-stream": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",
      "integrity": "sha512-r65nCZhrbXXb6dXOACihYApHw2Q6pV0M3V0PSxd74N0+D8nzAdEAITq2oAjA1jVnKI+tGvEBUpqiMh0+rW6zDQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/napi-postinstall": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/napi-postinstall/-/napi-postinstall-0.3.3.tgz",
      "integrity": "sha512-uTp172LLXSxuSYHv/kou+f6KW3SMppU9ivthaVTXian9sOt3XM/zHYHpRZiLgQoxeWfYUnslNWQHF1+G71xcow==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "napi-postinstall": "lib/cli.js"
      },
      "engines": {
        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/napi-postinstall"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/negotiator": {
      "version": "0.6.4",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.4.tgz",
      "integrity": "sha512-myRT3DiWPHqho5PrJaIRyaMv2kgYf0mUVgBNOYMuCH5Ki1yEiQaf/ZJuQ62nvpc44wL5WDbTX7yGJi1Neevw8w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/neo-async": {
      "version": "2.6.2",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
      "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/netmask": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/netmask/-/netmask-2.0.2.tgz",
      "integrity": "sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/next": {
      "version": "15.5.2",
      "resolved": "https://registry.npmjs.org/next/-/next-15.5.2.tgz",
      "integrity": "sha512-H8Otr7abj1glFhbGnvUt3gz++0AF1+QoCXEBmd/6aKbfdFwrn0LpA836Ed5+00va/7HQSDD+mOoVhn3tNy3e/Q==",
      "license": "MIT",
      "dependencies": {
        "@next/env": "15.5.2",
        "@swc/helpers": "0.5.15",
        "caniuse-lite": "^1.0.30001579",
        "postcss": "8.4.31",
        "styled-jsx": "5.1.6"
      },
      "bin": {
        "next": "dist/bin/next"
      },
      "engines": {
        "node": "^18.18.0 || ^19.8.0 || >= 20.0.0"
      },
      "optionalDependencies": {
        "@next/swc-darwin-arm64": "15.5.2",
        "@next/swc-darwin-x64": "15.5.2",
        "@next/swc-linux-arm64-gnu": "15.5.2",
        "@next/swc-linux-arm64-musl": "15.5.2",
        "@next/swc-linux-x64-gnu": "15.5.2",
        "@next/swc-linux-x64-musl": "15.5.2",
        "@next/swc-win32-arm64-msvc": "15.5.2",
        "@next/swc-win32-x64-msvc": "15.5.2",
        "sharp": "^0.34.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.1.0",
        "@playwright/test": "^1.51.1",
        "babel-plugin-react-compiler": "*",
        "react": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
        "react-dom": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
        "sass": "^1.3.0"
      },
      "peerDependenciesMeta": {
        "@opentelemetry/api": {
          "optional": true
        },
        "@playwright/test": {
          "optional": true
        },
        "babel-plugin-react-compiler": {
          "optional": true
        },
        "sass": {
          "optional": true
        }
      }
    },
    "node_modules/next-auth": {
      "version": "4.24.11",
      "resolved": "https://registry.npmjs.org/next-auth/-/next-auth-4.24.11.tgz",
      "integrity": "sha512-pCFXzIDQX7xmHFs4KVH4luCjaCbuPRtZ9oBUjUhOk84mZ9WVPf94n87TxYI4rSRf9HmfHEF8Yep3JrYDVOo3Cw==",
      "license": "ISC",
      "dependencies": {
        "@babel/runtime": "^7.20.13",
        "@panva/hkdf": "^1.0.2",
        "cookie": "^0.7.0",
        "jose": "^4.15.5",
        "oauth": "^0.9.15",
        "openid-client": "^5.4.0",
        "preact": "^10.6.3",
        "preact-render-to-string": "^5.1.19",
        "uuid": "^8.3.2"
      },
      "peerDependencies": {
        "@auth/core": "0.34.2",
        "next": "^12.2.5 || ^13 || ^14 || ^15",
        "nodemailer": "^6.6.5",
        "react": "^17.0.2 || ^18 || ^19",
        "react-dom": "^17.0.2 || ^18 || ^19"
      },
      "peerDependenciesMeta": {
        "@auth/core": {
          "optional": true
        },
        "nodemailer": {
          "optional": true
        }
      }
    },
    "node_modules/next-auth/node_modules/preact": {
      "version": "10.27.1",
      "resolved": "https://registry.npmjs.org/preact/-/preact-10.27.1.tgz",
      "integrity": "sha512-V79raXEWch/rbqoNc7nT9E4ep7lu+mI3+sBmfRD4i1M73R3WLYcCtdI0ibxGVf4eQL8ZIz2nFacqEC+rmnOORQ==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/preact"
      }
    },
    "node_modules/next-auth/node_modules/preact-render-to-string": {
      "version": "5.2.6",
      "resolved": "https://registry.npmjs.org/preact-render-to-string/-/preact-render-to-string-5.2.6.tgz",
      "integrity": "sha512-JyhErpYOvBV1hEPwIxc/fHWXPfnEGdRKxc8gFdAZ7XV4tlzyzG847XAyEZqoDnynP88akM4eaHcSOzNcLWFguw==",
      "license": "MIT",
      "dependencies": {
        "pretty-format": "^3.8.0"
      },
      "peerDependencies": {
        "preact": ">=10"
      }
    },
    "node_modules/next-i18next": {
      "version": "15.4.2",
      "resolved": "https://registry.npmjs.org/next-i18next/-/next-i18next-15.4.2.tgz",
      "integrity": "sha512-zgRxWf7kdXtM686ecGIBQL+Bq0+DqAhRlasRZ3vVF0TmrNTWkVhs52n//oU3Fj5O7r/xOKkECDUwfOuXVwTK/g==",
      "funding": [
        {
          "type": "individual",
          "url": "https://locize.com/i18next.html"
        },
        {
          "type": "individual",
          "url": "https://www.i18next.com/how-to/faq#i18next-is-awesome.-how-can-i-support-the-project"
        },
        {
          "type": "individual",
          "url": "https://locize.com"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.23.2",
        "@types/hoist-non-react-statics": "^3.3.6",
        "core-js": "^3",
        "hoist-non-react-statics": "^3.3.2",
        "i18next-fs-backend": "^2.6.0"
      },
      "engines": {
        "node": ">=14"
      },
      "peerDependencies": {
        "i18next": ">= 23.7.13",
        "next": ">= 12.0.0",
        "react": ">= 17.0.2",
        "react-i18next": ">= 13.5.0"
      }
    },
    "node_modules/next-seo": {
      "version": "6.8.0",
      "resolved": "https://registry.npmjs.org/next-seo/-/next-seo-6.8.0.tgz",
      "integrity": "sha512-zcxaV67PFXCSf8e6SXxbxPaOTgc8St/esxfsYXfQXMM24UESUVSXFm7f2A9HMkAwa0Gqn4s64HxYZAGfdF4Vhg==",
      "license": "MIT",
      "peerDependencies": {
        "next": "^8.1.1-canary.54 || >=9.0.0",
        "react": ">=16.0.0",
        "react-dom": ">=16.0.0"
      }
    },
    "node_modules/next/node_modules/postcss": {
      "version": "8.4.31",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.6",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.0.2"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/node-addon-api": {
      "version": "8.5.0",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-8.5.0.tgz",
      "integrity": "sha512-/bRZty2mXUIFY/xU5HLvveNHlswNJej+RnxBjOMkidWfwZzgTbPG1E3K5TOxRLOR+5hX7bSofy8yf1hZevMS8A==",
      "license": "MIT",
      "engines": {
        "node": "^18 || ^20 || >= 21"
      }
    },
    "node_modules/node-fetch": {
      "version": "2.6.13",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.13.tgz",
      "integrity": "sha512-StxNAxh15zr77QvvkmveSQ8uCQ4+v5FkvNTj0OESmiHu+VRi/gXArXtkWMElOsOUNLtUEvI4yS+rdtOHZTwlQA==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-fetch-native": {
      "version": "1.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch-native/-/node-fetch-native-1.6.7.tgz",
      "integrity": "sha512-g9yhqoedzIUm0nTnTqAQvueMPVOuIY16bqgAJJC8XOOubYFNwz6IER9qs0Gq2Xd0+CecCKFjtdDTMA4u4xG06Q==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/node-fetch/node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/node-fetch/node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/node-fetch/node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/node-gyp-build": {
      "version": "4.8.4",
      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.8.4.tgz",
      "integrity": "sha512-LA4ZjwlnUblHVgq0oBF3Jl/6h/Nvs5fzBLwdEF4nuxnFdsfajde4WfxtJr3CaiH+F6ewcIB/q4jQ4UzPyid+CQ==",
      "license": "MIT",
      "bin": {
        "node-gyp-build": "bin.js",
        "node-gyp-build-optional": "optional.js",
        "node-gyp-build-test": "build-test.js"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "license": "MIT"
    },
    "node_modules/nypm": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/nypm/-/nypm-0.6.1.tgz",
      "integrity": "sha512-hlacBiRiv1k9hZFiphPUkfSQ/ZfQzZDzC+8z0wL3lvDAOUu/2NnChkKuMoMjNur/9OpKuz2QsIeiPVN0xM5Q0w==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "citty": "^0.1.6",
        "consola": "^3.4.2",
        "pathe": "^2.0.3",
        "pkg-types": "^2.2.0",
        "tinyexec": "^1.0.1"
      },
      "bin": {
        "nypm": "dist/cli.mjs"
      },
      "engines": {
        "node": "^14.16.0 || >=16.10.0"
      }
    },
    "node_modules/oauth": {
      "version": "0.9.15",
      "resolved": "https://registry.npmjs.org/oauth/-/oauth-0.9.15.tgz",
      "integrity": "sha512-a5ERWK1kh38ExDEfoO6qUHJb32rd7aYmPHuyCu3Fta/cnICvYmgd2uhuKXvPD+PXB+gCEYYEaQdIRAjCOwAKNA==",
      "license": "MIT"
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-2.2.0.tgz",
      "integrity": "sha512-gScRMn0bS5fH+IuwyIFgnh9zBdo4DV+6GhygmWM9HyNJSgS0hScp1f5vjtm7oIIOiT9trXrShAkLFSc2IqKNgw==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0",
        "has-symbols": "^1.1.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.entries": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.9.tgz",
      "integrity": "sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.fromentries": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.groupby": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.3.tgz",
      "integrity": "sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.values": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz",
      "integrity": "sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/ohash": {
      "version": "2.0.11",
      "resolved": "https://registry.npmjs.org/ohash/-/ohash-2.0.11.tgz",
      "integrity": "sha512-RdR9FQrFwNBNXAr4GixM8YaRZRJ5PUWbKYbE5eOsrwAjJW0q2REGcf79oYPsLyskQCZG1PLN+S/K1V00joZAoQ==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/oidc-token-hash": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/oidc-token-hash/-/oidc-token-hash-5.1.1.tgz",
      "integrity": "sha512-D7EmwxJV6DsEB6vOFLrBM2OzsVgQzgPWyHlV2OOAVj772n+WTXpudC9e9u5BVKQnYwaD30Ivhi9b+4UeBcGu9g==",
      "license": "MIT",
      "engines": {
        "node": "^10.13.0 || >=12.0.0"
      }
    },
    "node_modules/on-exit-leak-free": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/on-exit-leak-free/-/on-exit-leak-free-2.1.2.tgz",
      "integrity": "sha512-0eJJY6hXLGf1udHwfNftBqH+g73EU4B504nZeKpz1sYRKafAghwxEJunB2O7rDZkL4PGfsMVnTXZ2EjibbqcsA==",
      "license": "MIT",
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/on-headers": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.1.0.tgz",
      "integrity": "sha512-737ZY3yNnXy37FHkQxPzt4UZ2UWPWiCZWLvFZ4fu5cueciegX0zGPnrlY6bwRg4FdQOe9YU8MkmJwGhoMybl8A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "license": "ISC",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/onetime": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
      "integrity": "sha512-oyyPpiMaKARvvcgip+JV+7zci5L8D1W9RZIz2l1o08AM3pfspitVWnPt3mzHcBPp12oYMTy0pqrFs/C+m3EwsQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "mimic-fn": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/open": {
      "version": "7.4.2",
      "resolved": "https://registry.npmjs.org/open/-/open-7.4.2.tgz",
      "integrity": "sha512-MVHddDVweXZF3awtlAS+6pgKLlm/JgxZ90+/NBurBoQctVOOB/zDdVjcyPzQ+0laDGbsWgrRkflI65sQeOgT9Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-docker": "^2.0.0",
        "is-wsl": "^2.1.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/opener": {
      "version": "1.5.2",
      "resolved": "https://registry.npmjs.org/opener/-/opener-1.5.2.tgz",
      "integrity": "sha512-ur5UIdyw5Y7yEj9wLzhqXiy6GZ3Mwx0yGI+5sMn2r0N0v3cKJvUmFH5yPP+WXh9e0xfyzyJX95D8l088DNFj7A==",
      "dev": true,
      "license": "(WTFPL OR MIT)",
      "bin": {
        "opener": "bin/opener-bin.js"
      }
    },
    "node_modules/openid-client": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/openid-client/-/openid-client-5.7.1.tgz",
      "integrity": "sha512-jDBPgSVfTnkIh71Hg9pRvtJc6wTwqjRkN88+gCFtYWrlP4Yx2Dsrow8uPi3qLr/aeymPF3o2+dS+wOpglK04ew==",
      "license": "MIT",
      "dependencies": {
        "jose": "^4.15.9",
        "lru-cache": "^6.0.0",
        "object-hash": "^2.2.0",
        "oidc-token-hash": "^5.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/panva"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/own-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
      "license": "MIT",
      "dependencies": {
        "get-intrinsic": "^1.2.6",
        "object-keys": "^1.1.1",
        "safe-push-apply": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pac-proxy-agent": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/pac-proxy-agent/-/pac-proxy-agent-7.2.0.tgz",
      "integrity": "sha512-TEB8ESquiLMc0lV8vcd5Ql/JAKAoyzHFXaStwjkzpOpC5Yv+pIzLfHvjTSdf3vpa2bMiUQrg9i6276yn8666aA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@tootallnate/quickjs-emscripten": "^0.23.0",
        "agent-base": "^7.1.2",
        "debug": "^4.3.4",
        "get-uri": "^6.0.1",
        "http-proxy-agent": "^7.0.0",
        "https-proxy-agent": "^7.0.6",
        "pac-resolver": "^7.0.1",
        "socks-proxy-agent": "^8.0.5"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/pac-proxy-agent/node_modules/agent-base": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/pac-proxy-agent/node_modules/https-proxy-agent": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
      "integrity": "sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/pac-resolver": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/pac-resolver/-/pac-resolver-7.0.1.tgz",
      "integrity": "sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "degenerator": "^5.0.0",
        "netmask": "^2.0.2"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-cache-control": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parse-cache-control/-/parse-cache-control-1.0.1.tgz",
      "integrity": "sha512-60zvsJReQPX5/QP0Kzfd/VrpjScIQ7SHBW6bFCYfEP+fp0Eppr1SHhIO5nd1PjZtvclzSzES9D/p5nFJurwfWg==",
      "dev": true
    },
    "node_modules/parseley": {
      "version": "0.12.1",
      "resolved": "https://registry.npmjs.org/parseley/-/parseley-0.12.1.tgz",
      "integrity": "sha512-e6qHKe3a9HWr0oMRVDTRhKce+bRO8VGQR3NyVwcjwrbhMmFCX9KszEV35+rn4AdilFAq9VPxP/Fe1wC9Qjd2lw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "leac": "^0.6.0",
        "peberminta": "^0.9.0"
      },
      "funding": {
        "url": "https://ko-fi.com/killymxi"
      }
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "license": "MIT"
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/pathe": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz",
      "integrity": "sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/peberminta": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/peberminta/-/peberminta-0.9.0.tgz",
      "integrity": "sha512-XIxfHpEuSJbITd1H3EeQwpcZbTLHc+VVr8ANI9t5sit565tsI4/xK3KWTUFE2e6QiangUkh3B0jihzmGnNrRsQ==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://ko-fi.com/killymxi"
      }
    },
    "node_modules/pend": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/pend/-/pend-1.2.0.tgz",
      "integrity": "sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/perfect-debounce": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/perfect-debounce/-/perfect-debounce-1.0.0.tgz",
      "integrity": "sha512-xCy9V055GLEqoFaHoC1SoLIaLmWctgCUaBaWxDZ7/Zx4CTyX7cJQLJOok/orfjZAh9kEYpjJa4d0KcJmCbctZA==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pino": {
      "version": "9.9.0",
      "resolved": "https://registry.npmjs.org/pino/-/pino-9.9.0.tgz",
      "integrity": "sha512-zxsRIQG9HzG+jEljmvmZupOMDUQ0Jpj0yAgE28jQvvrdYTlEaiGwelJpdndMl/MBuRr70heIj83QyqJUWaU8mQ==",
      "license": "MIT",
      "dependencies": {
        "atomic-sleep": "^1.0.0",
        "fast-redact": "^3.1.1",
        "on-exit-leak-free": "^2.1.0",
        "pino-abstract-transport": "^2.0.0",
        "pino-std-serializers": "^7.0.0",
        "process-warning": "^5.0.0",
        "quick-format-unescaped": "^4.0.3",
        "real-require": "^0.2.0",
        "safe-stable-stringify": "^2.3.1",
        "sonic-boom": "^4.0.1",
        "thread-stream": "^3.0.0"
      },
      "bin": {
        "pino": "bin.js"
      }
    },
    "node_modules/pino-abstract-transport": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/pino-abstract-transport/-/pino-abstract-transport-2.0.0.tgz",
      "integrity": "sha512-F63x5tizV6WCh4R6RHyi2Ml+M70DNRXt/+HANowMflpgGFMAym/VKm6G7ZOQRjqN7XbGxK1Lg9t6ZrtzOaivMw==",
      "license": "MIT",
      "dependencies": {
        "split2": "^4.0.0"
      }
    },
    "node_modules/pino-std-serializers": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/pino-std-serializers/-/pino-std-serializers-7.0.0.tgz",
      "integrity": "sha512-e906FRY0+tV27iq4juKzSYPbUj2do2X2JX4EzSca1631EB2QJQUqGbDuERal7LCtOpxl6x3+nvo9NPZcmjkiFA==",
      "license": "MIT"
    },
    "node_modules/pkg-types": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pkg-types/-/pkg-types-2.3.0.tgz",
      "integrity": "sha512-SIqCzDRg0s9npO5XQ3tNZioRY1uK06lA41ynBC1YmFTmnY6FjUjVt6s4LoADmwoig1qqD0oK8h1p/8mlMx8Oig==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "confbox": "^0.2.2",
        "exsolve": "^1.0.7",
        "pathe": "^2.0.3"
      }
    },
    "node_modules/playwright": {
      "version": "1.55.0",
      "resolved": "https://registry.npmjs.org/playwright/-/playwright-1.55.0.tgz",
      "integrity": "sha512-sdCWStblvV1YU909Xqx0DhOjPZE4/5lJsIS84IfN9dAZfcl/CIZ5O8l3o0j7hPMjDvqoTF8ZUcc+i/GL5erstA==",
      "devOptional": true,
      "license": "Apache-2.0",
      "dependencies": {
        "playwright-core": "1.55.0"
      },
      "bin": {
        "playwright": "cli.js"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "fsevents": "2.3.2"
      }
    },
    "node_modules/playwright-core": {
      "version": "1.55.0",
      "resolved": "https://registry.npmjs.org/playwright-core/-/playwright-core-1.55.0.tgz",
      "integrity": "sha512-GvZs4vU3U5ro2nZpeiwyb0zuFaqb9sUiAJuyrWpcGouD8y9/HLgGbNRjIph7zU9D3hnPaisMl9zG9CgFi/biIg==",
      "devOptional": true,
      "license": "Apache-2.0",
      "bin": {
        "playwright-core": "cli.js"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/playwright/node_modules/fsevents": {
      "version": "2.3.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz",
      "integrity": "sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.6",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.11",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "license": "MIT"
    },
    "node_modules/potpack": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/potpack/-/potpack-1.0.2.tgz",
      "integrity": "sha512-choctRBIV9EMT9WGAZHn3V7t0Z2pMQyl0EZE6pFc/6ml3ssw7Dlf/oAOvFwjm1HVsqfQN8GfeFyJ+d8tRzqueQ==",
      "license": "ISC"
    },
    "node_modules/preact": {
      "version": "8.2.9",
      "resolved": "https://registry.npmjs.org/preact/-/preact-8.2.9.tgz",
      "integrity": "sha512-ThuGXBmJS3VsT+jIP+eQufD3L8pRw/PY3FoCys6O9Pu6aF12Pn9zAJDX99TfwRAFOCEKm/P0lwiPTbqKMJp0fA==",
      "hasInstallScript": true,
      "license": "MIT"
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/prettier": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/prettier/-/prettier-3.6.2.tgz",
      "integrity": "sha512-I7AIg5boAr5R0FFtJ6rCfD+LFsWHp81dolrFD8S79U9tb8Az2nGrJncnMSnys+bpQJfRUzqs9hnA81OAA3hCuQ==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "prettier": "bin/prettier.cjs"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/prettier/prettier?sponsor=1"
      }
    },
    "node_modules/pretty-bytes": {
      "version": "5.6.0",
      "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.6.0.tgz",
      "integrity": "sha512-FFw039TmrBqFK8ma/7OL3sDz/VytdtJr044/QUJtH0wK9lb9jLq9tJyIxUwtQJHwar2BqtiA4iCWSwo9JLkzFg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/pretty-format": {
      "version": "3.8.0",
      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-3.8.0.tgz",
      "integrity": "sha512-WuxUnVtlWL1OfZFQFuqvnvs6MiAGk9UNsBostyBOB0Is9wb5uRESevA6rnl/rkksXaGX3GzZhPup5d6Vp1nFew==",
      "license": "MIT"
    },
    "node_modules/prisma": {
      "version": "6.15.0",
      "resolved": "https://registry.npmjs.org/prisma/-/prisma-6.15.0.tgz",
      "integrity": "sha512-E6RCgOt+kUVtjtZgLQDBJ6md2tDItLJNExwI0XJeBc1FKL+Vwb+ovxXxuok9r8oBgsOXBA33fGDuE/0qDdCWqQ==",
      "devOptional": true,
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@prisma/config": "6.15.0",
        "@prisma/engines": "6.15.0"
      },
      "bin": {
        "prisma": "build/index.js"
      },
      "engines": {
        "node": ">=18.18"
      },
      "peerDependencies": {
        "typescript": ">=5.1.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/prismjs": {
      "version": "1.30.0",
      "resolved": "https://registry.npmjs.org/prismjs/-/prismjs-1.30.0.tgz",
      "integrity": "sha512-DEvV2ZF2r2/63V+tK8hQvrR2ZGn10srHbXviTlcv7Kpzw8jWiNTqbVgjO3IY8RxrrOUF8VPMQQFysYYYv0YZxw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/process-warning": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-5.0.0.tgz",
      "integrity": "sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ],
      "license": "MIT"
    },
    "node_modules/progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/promise": {
      "version": "7.3.1",
      "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",
      "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",
      "license": "MIT",
      "dependencies": {
        "asap": "~2.0.3"
      }
    },
    "node_modules/promise-worker-transferable": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/promise-worker-transferable/-/promise-worker-transferable-1.0.4.tgz",
      "integrity": "sha512-bN+0ehEnrXfxV2ZQvU2PetO0n4gqBD4ulq3MI1WOPLgr7/Mg9yRQkX5+0v1vagr74ZTsl7XtzlaYDo2EuCeYJw==",
      "license": "Apache-2.0",
      "dependencies": {
        "is-promise": "^2.1.0",
        "lie": "^3.0.2"
      }
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/proxy-agent": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/proxy-agent/-/proxy-agent-6.5.0.tgz",
      "integrity": "sha512-TmatMXdr2KlRiA2CyDu8GqR8EjahTG3aY3nXjdzFyoZbmB8hrBsTyMezhULIXKnC0jpfjlmiZ3+EaCzoInSu/A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "^4.3.4",
        "http-proxy-agent": "^7.0.1",
        "https-proxy-agent": "^7.0.6",
        "lru-cache": "^7.14.1",
        "pac-proxy-agent": "^7.1.0",
        "proxy-from-env": "^1.1.0",
        "socks-proxy-agent": "^8.0.5"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/proxy-agent/node_modules/agent-base": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/proxy-agent/node_modules/https-proxy-agent": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
      "integrity": "sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/proxy-agent/node_modules/lru-cache": {
      "version": "7.18.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-7.18.3.tgz",
      "integrity": "sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/pump": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.3.tgz",
      "integrity": "sha512-todwxLMY7/heScKmntwQG8CXVkWUOdYxIvY2s0VWAAMh/nd8SoYiRaKjlr7+iCs984f2P8zvrfWcDDYVb73NfA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/puppeteer-core": {
      "version": "22.15.0",
      "resolved": "https://registry.npmjs.org/puppeteer-core/-/puppeteer-core-22.15.0.tgz",
      "integrity": "sha512-cHArnywCiAAVXa3t4GGL2vttNxh7GqXtIYGym99egkNJ3oG//wL9LkvO4WE8W1TJe95t1F1ocu9X4xWaGsOKOA==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@puppeteer/browsers": "2.3.0",
        "chromium-bidi": "0.6.3",
        "debug": "^4.3.6",
        "devtools-protocol": "0.0.1312386",
        "ws": "^8.18.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/puppeteer-core/node_modules/ws": {
      "version": "8.18.3",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.3.tgz",
      "integrity": "sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/pure-rand": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/pure-rand/-/pure-rand-6.1.0.tgz",
      "integrity": "sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==",
      "devOptional": true,
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/dubzzz"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fast-check"
        }
      ],
      "license": "MIT"
    },
    "node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/quick-format-unescaped": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/quick-format-unescaped/-/quick-format-unescaped-4.0.4.tgz",
      "integrity": "sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==",
      "license": "MIT"
    },
    "node_modules/randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "^5.1.0"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/rc9": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/rc9/-/rc9-2.1.2.tgz",
      "integrity": "sha512-btXCnMmRIBINM2LDZoEmOogIZU7Qe7zn4BpomSKZ/ykbLObuBdvG+mFq11DL6fjH1DRwHhrlgtYWG96bJiC7Cg==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "defu": "^6.1.4",
        "destr": "^2.0.3"
      }
    },
    "node_modules/react": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react/-/react-19.1.1.tgz",
      "integrity": "sha512-w8nqGImo45dmMIfljjMwOGtbmC/mk4CMYhWIicdSflH91J9TyCyczcPFXJzrZ/ZXcgGRFeP6BU0BEJTw6tZdfQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-dom": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.1.1.tgz",
      "integrity": "sha512-Dlq/5LAZgF0Gaz6yiqZCf6VCcZs1ghAJyrsu84Q/GT0gV+mCxbfmKNoGRKBYMJ8IEdGPqu49YWXD02GCknEDkw==",
      "license": "MIT",
      "dependencies": {
        "scheduler": "^0.26.0"
      },
      "peerDependencies": {
        "react": "^19.1.1"
      }
    },
    "node_modules/react-dom/node_modules/scheduler": {
      "version": "0.26.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz",
      "integrity": "sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==",
      "license": "MIT"
    },
    "node_modules/react-hook-form": {
      "version": "7.62.0",
      "resolved": "https://registry.npmjs.org/react-hook-form/-/react-hook-form-7.62.0.tgz",
      "integrity": "sha512-7KWFejc98xqG/F4bAxpL41NB3o1nnvQO1RWZT3TqRZYL8RryQETGfEdVnJN2fy1crCiBLLjkRBVK05j24FxJGA==",
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/react-hook-form"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17 || ^18 || ^19"
      }
    },
    "node_modules/react-i18next": {
      "version": "15.7.3",
      "resolved": "https://registry.npmjs.org/react-i18next/-/react-i18next-15.7.3.tgz",
      "integrity": "sha512-AANws4tOE+QSq/IeMF/ncoHlMNZaVLxpa5uUGW1wjike68elVYr0018L9xYoqBr1OFO7G7boDPrbn0HpMCJxTw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.6",
        "html-parse-stringify": "^3.0.1"
      },
      "peerDependencies": {
        "i18next": ">= 25.4.1",
        "react": ">= 16.8.0",
        "typescript": "^5"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        },
        "react-native": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "license": "MIT"
    },
    "node_modules/react-promise-suspense": {
      "version": "0.3.4",
      "resolved": "https://registry.npmjs.org/react-promise-suspense/-/react-promise-suspense-0.3.4.tgz",
      "integrity": "sha512-I42jl7L3Ze6kZaq+7zXWSunBa3b1on5yfvUW6Eo/3fFOj6dZ5Bqmcd264nJbTK/gn1HjjILAjSwnZbV4RpSaNQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^2.0.1"
      }
    },
    "node_modules/react-promise-suspense/node_modules/fast-deep-equal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",
      "integrity": "sha512-bCK/2Z4zLidyB4ReuIsvALH6w31YfAQDmXMqMx6FyfHqvBxtjC0eRumeSu4Bs3XtXwpyIywtSTrVT99BxY1f9w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/react-reconciler": {
      "version": "0.31.0",
      "resolved": "https://registry.npmjs.org/react-reconciler/-/react-reconciler-0.31.0.tgz",
      "integrity": "sha512-7Ob7Z+URmesIsIVRjnLoDGwBEG/tVitidU0nMsqX/eeJaLY89RISO/10ERe0MqmzuKUUB1rmY+h1itMbUHg9BQ==",
      "license": "MIT",
      "dependencies": {
        "scheduler": "^0.25.0"
      },
      "engines": {
        "node": ">=0.10.0"
      },
      "peerDependencies": {
        "react": "^19.0.0"
      }
    },
    "node_modules/react-toastify": {
      "version": "11.0.5",
      "resolved": "https://registry.npmjs.org/react-toastify/-/react-toastify-11.0.5.tgz",
      "integrity": "sha512-EpqHBGvnSTtHYhCPLxML05NLY2ZX0JURbAdNYa6BUkk+amz4wbKBQvoKQAB0ardvSarUBuY4Q4s1sluAzZwkmA==",
      "license": "MIT",
      "dependencies": {
        "clsx": "^2.1.1"
      },
      "peerDependencies": {
        "react": "^18 || ^19",
        "react-dom": "^18 || ^19"
      }
    },
    "node_modules/react-use-measure": {
      "version": "2.1.7",
      "resolved": "https://registry.npmjs.org/react-use-measure/-/react-use-measure-2.1.7.tgz",
      "integrity": "sha512-KrvcAo13I/60HpwGO5jpW7E9DfusKyLPLvuHlUyP5zqnmAPhNc6qTRjUQrdTADl0lpPpDVU2/Gg51UlOGHXbdg==",
      "license": "MIT",
      "peerDependencies": {
        "react": ">=16.13",
        "react-dom": ">=16.13"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/react-virtuoso": {
      "version": "4.14.0",
      "resolved": "https://registry.npmjs.org/react-virtuoso/-/react-virtuoso-4.14.0.tgz",
      "integrity": "sha512-fR+eiCvirSNIRvvCD7ueJPRsacGQvUbjkwgWzBZXVq+yWypoH7mRUvWJzGHIdoRaCZCT+6mMMMwIG2S1BW3uwA==",
      "license": "MIT",
      "peerDependencies": {
        "react": ">=16 || >=17 || >= 18 || >= 19",
        "react-dom": ">=16 || >=17 || >= 18 || >=19"
      }
    },
    "node_modules/react-window": {
      "version": "1.8.11",
      "resolved": "https://registry.npmjs.org/react-window/-/react-window-1.8.11.tgz",
      "integrity": "sha512-+SRbUVT2scadgFSWx+R1P754xHPEqvcfSfVX10QYg6POOz+WNgkN48pS+BtZNIMGiL1HYrSEiCkwsMS15QogEQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.0.0",
        "memoize-one": ">=3.1.1 <6"
      },
      "engines": {
        "node": ">8.0.0"
      },
      "peerDependencies": {
        "react": "^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/readdirp": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
      "integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": ">= 14.18.0"
      },
      "funding": {
        "type": "individual",
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/real-require": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/real-require/-/real-require-0.2.0.tgz",
      "integrity": "sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg==",
      "license": "MIT",
      "engines": {
        "node": ">= 12.13.0"
      }
    },
    "node_modules/reflect.getprototypeof": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.1",
        "which-builtin-type": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regenerate": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
      "integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==",
      "license": "MIT"
    },
    "node_modules/regenerate-unicode-properties": {
      "version": "10.2.0",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.2.0.tgz",
      "integrity": "sha512-DqHn3DwbmmPVzeKj9woBadqmXxLvQoQIwu7nopMc72ztvxVmVk2SBhSnx67zuye5TP+lJsb/TBQsjLKhnDf3MA==",
      "license": "MIT",
      "dependencies": {
        "regenerate": "^1.4.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.13.11",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz",
      "integrity": "sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==",
      "license": "MIT"
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-errors": "^1.3.0",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regexpu-core": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-6.2.0.tgz",
      "integrity": "sha512-H66BPQMrv+V16t8xtmq+UC0CBpiTBA60V8ibS1QVReIp8T1z8hwFxqcGzm9K6lgsN7sB5edVH8a+ze6Fqm4weA==",
      "license": "MIT",
      "dependencies": {
        "regenerate": "^1.4.2",
        "regenerate-unicode-properties": "^10.2.0",
        "regjsgen": "^0.8.0",
        "regjsparser": "^0.12.0",
        "unicode-match-property-ecmascript": "^2.0.0",
        "unicode-match-property-value-ecmascript": "^2.1.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regjsgen": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.8.0.tgz",
      "integrity": "sha512-RvwtGe3d7LvWiDQXeQw8p5asZUmfU1G/l6WbUXeHta7Y2PEIvBTwH6E2EfmYUK8pxcxEdEmaomqyp0vZZ7C+3Q==",
      "license": "MIT"
    },
    "node_modules/regjsparser": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.12.0.tgz",
      "integrity": "sha512-cnE+y8bz4NhMjISKbgeVJtqNbtf5QpjZP+Bslo+UqkIt9QPnX9q095eiRRASJG1/tz6dlNr6Z5NsBiWYokp6EQ==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "jsesc": "~3.0.2"
      },
      "bin": {
        "regjsparser": "bin/parser"
      }
    },
    "node_modules/regjsparser/node_modules/jsesc": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.0.2.tgz",
      "integrity": "sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==",
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-from-string": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",
      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
      "license": "ISC"
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/resolve-pkg-maps": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz",
      "integrity": "sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/privatenumber/resolve-pkg-maps?sponsor=1"
      }
    },
    "node_modules/restore-cursor": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
      "integrity": "sha512-6IzJLuGi4+R14vwagDHX+JrXmPVtPpn4mffDJ1UdR7/Edm87fl6yi8mMBIVvFtJaNTUvjughmW4hwLhRG7gC1Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "onetime": "^2.0.0",
        "signal-exit": "^3.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/robots-parser": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/robots-parser/-/robots-parser-3.0.1.tgz",
      "integrity": "sha512-s+pyvQeIKIZ0dx5iJiQk1tPLJAWln39+MI5jtM8wnyws+G5azk+dMnMX0qfbqNetKKNgcWWOdi0sfm+FbQbgdQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/rollup": {
      "version": "2.79.2",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-2.79.2.tgz",
      "integrity": "sha512-fS6iqSPZDs3dr/y7Od6y5nha8dW1YnbgtsyotCVvoFGKbERG++CVRFv1meyGDE1SNItQA8BrnCw7ScdAhRJ3XQ==",
      "license": "MIT",
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-async": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz",
      "integrity": "sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/rw": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/rw/-/rw-1.3.3.tgz",
      "integrity": "sha512-PdhdWy89SiZogBLaw42zdeqtRJ//zFd2PgQavcICDUgJT5oW10QCRKbJ6bg4r0/UY2M6BWd5tkxuGFRvCkgfHQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/rxjs": {
      "version": "6.6.7",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.6.7.tgz",
      "integrity": "sha512-hTdwr+7yYNIT5n4AMYp85KA6yw2Va0FLa3Rguvbpa4W3I5xynaBZo41cM3XM+4Q6fRMj3sBYIR1VAmZMXYJvRQ==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^1.9.0"
      },
      "engines": {
        "npm": ">=2.0.0"
      }
    },
    "node_modules/rxjs/node_modules/tslib": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz",
      "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==",
      "dev": true,
      "license": "0BSD"
    },
    "node_modules/safe-array-concat": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "has-symbols": "^1.1.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">=0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safe-push-apply": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-regex-test": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-regex": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-stable-stringify": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/safe-stable-stringify/-/safe-stable-stringify-2.5.0.tgz",
      "integrity": "sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "license": "MIT"
    },
    "node_modules/scheduler": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.25.0.tgz",
      "integrity": "sha512-xFVuu11jh+xcO7JOAGJNOXld8/TcEHK/4CituBUeUb5hqxJLj9YuemAEuvm9gQ/+pgXYfbQuqAkiYu+u7YEsNA==",
      "license": "MIT"
    },
    "node_modules/schema-utils": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-4.3.2.tgz",
      "integrity": "sha512-Gn/JaSk/Mt9gYubxTtSn/QCV4em9mpAPiR1rqy/Ocu19u/G9J5WWdNoUT4SiV6mFC3y6cxyFcFwdzPM3FgxGAQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/json-schema": "^7.0.9",
        "ajv": "^8.9.0",
        "ajv-formats": "^2.1.1",
        "ajv-keywords": "^5.1.0"
      },
      "engines": {
        "node": ">= 10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      }
    },
    "node_modules/schema-utils/node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/schema-utils/node_modules/ajv-keywords": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-5.1.0.tgz",
      "integrity": "sha512-YCS/JNFAUyr5vAuhk1DWm1CBxRHW9LbJ2ozWeemrIqpbsqKjHVxYPyi5GC0rjZIT5JxJ3virVTS8wk4i/Z+krw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.3"
      },
      "peerDependencies": {
        "ajv": "^8.8.2"
      }
    },
    "node_modules/schema-utils/node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/seedrandom": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/seedrandom/-/seedrandom-3.0.5.tgz",
      "integrity": "sha512-8OwmbklUNzwezjGInmZ+2clQmExQPvomqjL7LFqOYqtmuxRgQYqOD3mHaU+MvZn5FLUeVxVfQjwLZW/n/JFuqg==",
      "license": "MIT"
    },
    "node_modules/selderee": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/selderee/-/selderee-0.11.0.tgz",
      "integrity": "sha512-5TF+l7p4+OsnP8BCCvSyZiSPc4x4//p5uPwK8TCnVPJYRmU2aYKMpOXvw8zM5a5JvuuCGN1jmsMwuU2W02ukfA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parseley": "^0.12.0"
      },
      "funding": {
        "url": "https://ko-fi.com/killymxi"
      }
    },
    "node_modules/semver": {
      "version": "7.6.3",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.3.tgz",
      "integrity": "sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/send": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/send/node_modules/debug/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/send/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/serialize-javascript": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.2.tgz",
      "integrity": "sha512-Saa1xPByTTq2gdeFZYLLo+RFE35NHZkAbqZeWNd3BpzppeVisAqpDjcp8dyf6uIvEqJRd46jemmyA4iFIeVk8g==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "randombytes": "^2.1.0"
      }
    },
    "node_modules/serve-static": {
      "version": "1.16.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.19.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
      "license": "ISC"
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-function-name": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "functions-have-names": "^1.2.3",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-proto": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/setimmediate": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
      "integrity": "sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA==",
      "license": "MIT"
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/shallowequal": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/shallowequal/-/shallowequal-1.1.0.tgz",
      "integrity": "sha512-y0m1JoUZSlPAjXVtPPW70aZWfIL/dSP7AFkRnniLCrK/8MDKog3TySTBmckD+RObVxH0v4Tox67+F14PdED2oQ==",
      "license": "MIT"
    },
    "node_modules/sharp": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/sharp/-/sharp-0.34.3.tgz",
      "integrity": "sha512-eX2IQ6nFohW4DbvHIOLRB3MHFpYqaqvXd3Tp5e/T/dSH83fxaNJQRvDMhASmkNTsNTVF2/OOopzRCt7xokgPfg==",
      "devOptional": true,
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "color": "^4.2.3",
        "detect-libc": "^2.0.4",
        "semver": "^7.7.2"
      },
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-darwin-arm64": "0.34.3",
        "@img/sharp-darwin-x64": "0.34.3",
        "@img/sharp-libvips-darwin-arm64": "1.2.0",
        "@img/sharp-libvips-darwin-x64": "1.2.0",
        "@img/sharp-libvips-linux-arm": "1.2.0",
        "@img/sharp-libvips-linux-arm64": "1.2.0",
        "@img/sharp-libvips-linux-ppc64": "1.2.0",
        "@img/sharp-libvips-linux-s390x": "1.2.0",
        "@img/sharp-libvips-linux-x64": "1.2.0",
        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0",
        "@img/sharp-libvips-linuxmusl-x64": "1.2.0",
        "@img/sharp-linux-arm": "0.34.3",
        "@img/sharp-linux-arm64": "0.34.3",
        "@img/sharp-linux-ppc64": "0.34.3",
        "@img/sharp-linux-s390x": "0.34.3",
        "@img/sharp-linux-x64": "0.34.3",
        "@img/sharp-linuxmusl-arm64": "0.34.3",
        "@img/sharp-linuxmusl-x64": "0.34.3",
        "@img/sharp-wasm32": "0.34.3",
        "@img/sharp-win32-arm64": "0.34.3",
        "@img/sharp-win32-ia32": "0.34.3",
        "@img/sharp-win32-x64": "0.34.3"
      }
    },
    "node_modules/sharp/node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "devOptional": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/sift": {
      "version": "17.1.3",
      "resolved": "https://registry.npmjs.org/sift/-/sift-17.1.3.tgz",
      "integrity": "sha512-Rtlj66/b0ICeFzYTuNvX/EF1igRbbnGSvEyT79McoZa/DeGhMyC5pWKOEsZKnpkqtSeovd5FL/bjHWC3CIIvCQ==",
      "license": "MIT"
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/simple-swizzle": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
      "integrity": "sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "is-arrayish": "^0.3.1"
      }
    },
    "node_modules/sirv": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/sirv/-/sirv-2.0.4.tgz",
      "integrity": "sha512-94Bdh3cC2PKrbgSOUqTiGPWVZeSiXfKOVZNJniWoqrWrRkB1CJzBU3NEbiTsPcYy1lDsANA/THzS+9WBiy5nfQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@polka/url": "^1.0.0-next.24",
        "mrmime": "^2.0.0",
        "totalist": "^3.0.0"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/smart-buffer": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz",
      "integrity": "sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6.0.0",
        "npm": ">= 3.0.0"
      }
    },
    "node_modules/smob": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/smob/-/smob-1.5.0.tgz",
      "integrity": "sha512-g6T+p7QO8npa+/hNx9ohv1E5pVCmWrVCUzUXJyLdMmftX6ER0oiWY/w9knEonLpnOp6b6FenKnMfR8gqwWdwig==",
      "license": "MIT"
    },
    "node_modules/socks": {
      "version": "2.8.7",
      "resolved": "https://registry.npmjs.org/socks/-/socks-2.8.7.tgz",
      "integrity": "sha512-HLpt+uLy/pxB+bum/9DzAgiKS8CX1EvbWxI4zlmgGCExImLdiad2iCwXT5Z4c9c3Eq8rP2318mPW2c+QbtjK8A==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "ip-address": "^10.0.1",
        "smart-buffer": "^4.2.0"
      },
      "engines": {
        "node": ">= 10.0.0",
        "npm": ">= 3.0.0"
      }
    },
    "node_modules/socks-proxy-agent": {
      "version": "8.0.5",
      "resolved": "https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-8.0.5.tgz",
      "integrity": "sha512-HehCEsotFqbPW9sJ8WVYB6UbmIMv7kUUORIF2Nncq4VQvBfNBLibW9YZR5dlYCSUhwcD628pRllm7n+E+YTzJw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "^4.3.4",
        "socks": "^2.8.3"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/socks-proxy-agent/node_modules/agent-base": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/sonic-boom": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/sonic-boom/-/sonic-boom-4.2.0.tgz",
      "integrity": "sha512-INb7TM37/mAcsGmc9hyyI6+QR3rR1zVRu36B0NeGXKnOOLiZOfER5SA+N7X7k3yUYRzLWafduTDvJAfDswwEww==",
      "license": "MIT",
      "dependencies": {
        "atomic-sleep": "^1.0.0"
      }
    },
    "node_modules/source-list-map": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/source-list-map/-/source-list-map-2.0.1.tgz",
      "integrity": "sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw==",
      "license": "MIT"
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "license": "MIT",
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/sourcemap-codec": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
      "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==",
      "deprecated": "Please use @jridgewell/sourcemap-codec instead",
      "license": "MIT"
    },
    "node_modules/sparse-bitfield": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz",
      "integrity": "sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==",
      "license": "MIT",
      "dependencies": {
        "memory-pager": "^1.0.2"
      }
    },
    "node_modules/speedline-core": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/speedline-core/-/speedline-core-1.4.3.tgz",
      "integrity": "sha512-DI7/OuAUD+GMpR6dmu8lliO2Wg5zfeh+/xsdyJZCzd8o5JgFUjCeLsBDuZjIQJdwXS3J0L/uZYrELKYqx+PXog==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "image-ssim": "^0.2.0",
        "jpeg-js": "^0.4.1"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/split2": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
      "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
      "license": "ISC",
      "engines": {
        "node": ">= 10.x"
      }
    },
    "node_modules/sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
      "license": "BSD-3-Clause"
    },
    "node_modules/stable-hash": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/stable-hash/-/stable-hash-0.0.5.tgz",
      "integrity": "sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/stats-gl": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/stats-gl/-/stats-gl-2.4.2.tgz",
      "integrity": "sha512-g5O9B0hm9CvnM36+v7SFl39T7hmAlv541tU81ME8YeSb3i1CIP5/QdDeSB3A0la0bKNHpxpwxOVRo2wFTYEosQ==",
      "license": "MIT",
      "dependencies": {
        "@types/three": "*",
        "three": "^0.170.0"
      },
      "peerDependencies": {
        "@types/three": "*",
        "three": "*"
      }
    },
    "node_modules/stats-gl/node_modules/three": {
      "version": "0.170.0",
      "resolved": "https://registry.npmjs.org/three/-/three-0.170.0.tgz",
      "integrity": "sha512-FQK+LEpYc0fBD+J8g6oSEyyNzjp+Q7Ks1C568WWaoMRLW+TkNNWmenWeGgJjV105Gd+p/2ql1ZcjYvNiPZBhuQ==",
      "license": "MIT"
    },
    "node_modules/stats.js": {
      "version": "0.17.0",
      "resolved": "https://registry.npmjs.org/stats.js/-/stats.js-0.17.0.tgz",
      "integrity": "sha512-hNKz8phvYLPEcRkeG1rsGmV5ChMjKDAWU7/OJJdDErPBNChQXxCo3WZurGpnWc6gZhAzEPFad1aVgyOANH1sMw==",
      "license": "MIT"
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/stop-iteration-iterator": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz",
      "integrity": "sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "internal-slot": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/streamx": {
      "version": "2.22.1",
      "resolved": "https://registry.npmjs.org/streamx/-/streamx-2.22.1.tgz",
      "integrity": "sha512-znKXEBxfatz2GBNK02kRnCXjV+AA4kjZIUxeWSr3UGirZMJfTE9uiwKHobnbgxWyL/JWro8tTq+vOqAK1/qbSA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-fifo": "^1.3.2",
        "text-decoder": "^1.1.0"
      },
      "optionalDependencies": {
        "bare-events": "^2.2.0"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
      "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-fullwidth-code-point": "^2.0.0",
        "strip-ansi": "^4.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/string-width/node_modules/ansi-regex": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.1.tgz",
      "integrity": "sha512-+O9Jct8wf++lXxxFc4hc8LsjaSq0HFzzL7cVsw8pRDIPdjKD2mT4ytDZlLuSBZ4cLKZFXIrMGO7DbQCtMJJMKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/string-width/node_modules/strip-ansi": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
      "integrity": "sha512-4XaJ2zQdCzROZDivEVIDPkcQn8LMFSa8kj8Gxb/Lnwzv9A8VctNZ+lfivC/sV3ivW8ElJTERXZoPBRrZKkNKow==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/string.prototype.includes": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz",
      "integrity": "sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/string.prototype.matchall": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz",
      "integrity": "sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "regexp.prototype.flags": "^1.5.3",
        "set-function-name": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.repeat": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.5"
      }
    },
    "node_modules/string.prototype.trim": {
      "version": "1.2.10",
      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-data-property": "^1.1.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-object-atoms": "^1.0.0",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/stringify-object": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/stringify-object/-/stringify-object-3.3.0.tgz",
      "integrity": "sha512-rHqiFh1elqCQ9WPLIC8I0Q/g/wj5J1eMkyoiD6eoQApWHP0FtlK7rqnhmabL5VUY9JQCcqwwvlOaSuutekgyrw==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "get-own-enumerable-property-symbols": "^3.0.0",
        "is-obj": "^1.0.1",
        "is-regexp": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/stringify-object/node_modules/is-obj": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz",
      "integrity": "sha512-l4RyHgRqGN4Y3+9JHVrNqO+tN0rV5My76uW5/nuO4K1b6vw5G8d/cmFjP9tRfEsdhZNt0IFdZuK/c2Vr4Nb+Qg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-ansi": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
      "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^4.1.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/strip-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-comments/-/strip-comments-2.0.1.tgz",
      "integrity": "sha512-ZprKx+bBLXv067WTCALv8SSz5l2+XhpYCsVtSqlMnkAXMWDq+/ekVbl1ghqP9rUHTzv6sm/DwCOiYutU/yp1fw==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/stripe": {
      "version": "18.5.0",
      "resolved": "https://registry.npmjs.org/stripe/-/stripe-18.5.0.tgz",
      "integrity": "sha512-Hp+wFiEQtCB0LlNgcFh5uVyKznpDjzyUZ+CNVEf+I3fhlYvh7rZruIg+jOwzJRCpy0ZTPMjlzm7J2/M2N6d+DA==",
      "license": "MIT",
      "dependencies": {
        "qs": "^6.11.0"
      },
      "engines": {
        "node": ">=12.*"
      },
      "peerDependencies": {
        "@types/node": ">=12.x.x"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        }
      }
    },
    "node_modules/styled-components": {
      "version": "6.1.19",
      "resolved": "https://registry.npmjs.org/styled-components/-/styled-components-6.1.19.tgz",
      "integrity": "sha512-1v/e3Dl1BknC37cXMhwGomhO8AkYmN41CqyX9xhUDxry1ns3BFQy2lLDRQXJRdVVWB9OHemv/53xaStimvWyuA==",
      "license": "MIT",
      "dependencies": {
        "@emotion/is-prop-valid": "1.2.2",
        "@emotion/unitless": "0.8.1",
        "@types/stylis": "4.2.5",
        "css-to-react-native": "3.2.0",
        "csstype": "3.1.3",
        "postcss": "8.4.49",
        "shallowequal": "1.1.0",
        "stylis": "4.3.2",
        "tslib": "2.6.2"
      },
      "engines": {
        "node": ">= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/styled-components"
      },
      "peerDependencies": {
        "react": ">= 16.8.0",
        "react-dom": ">= 16.8.0"
      }
    },
    "node_modules/styled-components/node_modules/postcss": {
      "version": "8.4.49",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.49.tgz",
      "integrity": "sha512-OCVPnIObs4N29kxTjzLfUryOkvZEq+pf8jTF0lg8E7uETuWHA+v7j3c/xJmiqpX450191LlmZfUKkXxkTry7nA==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.7",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/styled-components/node_modules/tslib": {
      "version": "2.6.2",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.6.2.tgz",
      "integrity": "sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==",
      "license": "0BSD"
    },
    "node_modules/styled-jsx": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.6.tgz",
      "integrity": "sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==",
      "license": "MIT",
      "dependencies": {
        "client-only": "0.0.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "peerDependencies": {
        "react": ">= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0"
      },
      "peerDependenciesMeta": {
        "@babel/core": {
          "optional": true
        },
        "babel-plugin-macros": {
          "optional": true
        }
      }
    },
    "node_modules/stylis": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/stylis/-/stylis-4.3.2.tgz",
      "integrity": "sha512-bhtUjWd/z6ltJiQwg0dUfxEJ+W+jdqQd8TbWLWyeIJHlnsqmGLRFFd8e5mA0AZi/zx90smXRlN66YMTcaSFifg==",
      "license": "MIT"
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/suspend-react": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/suspend-react/-/suspend-react-0.1.3.tgz",
      "integrity": "sha512-aqldKgX9aZqpoDp3e8/BZ8Dm7x1pJl+qI3ZKxDN0i/IQTWUwBx/ManmlVJ3wowqbno6c2bmiIfs+Um6LbsjJyQ==",
      "license": "MIT",
      "peerDependencies": {
        "react": ">=17.0"
      }
    },
    "node_modules/swr": {
      "version": "2.3.6",
      "resolved": "https://registry.npmjs.org/swr/-/swr-2.3.6.tgz",
      "integrity": "sha512-wfHRmHWk/isGNMwlLGlZX5Gzz/uTgo0o2IRuTMcf4CPuPFJZlq0rDaKUx+ozB5nBOReNV1kiOyzMfj+MBMikLw==",
      "license": "MIT",
      "dependencies": {
        "dequal": "^2.0.3",
        "use-sync-external-store": "^1.4.0"
      },
      "peerDependencies": {
        "react": "^16.11.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/tailwindcss": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.12.tgz",
      "integrity": "sha512-DzFtxOi+7NsFf7DBtI3BJsynR+0Yp6etH+nRPTbpWnS2pZBaSksv/JGctNwSWzbFjp0vxSqknaUylseZqMDGrA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/tapable": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.3.tgz",
      "integrity": "sha512-ZL6DDuAlRlLGghwcfmSn9sK3Hr6ArtyudlSAiCqQ6IfE+b+HHbydbYDIG15IfS5do+7XQQBdBiubF/cV2dnDzg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      }
    },
    "node_modules/tar": {
      "version": "7.4.3",
      "resolved": "https://registry.npmjs.org/tar/-/tar-7.4.3.tgz",
      "integrity": "sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "@isaacs/fs-minipass": "^4.0.0",
        "chownr": "^3.0.0",
        "minipass": "^7.1.2",
        "minizlib": "^3.0.1",
        "mkdirp": "^3.0.1",
        "yallist": "^5.0.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tar-fs": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-3.1.0.tgz",
      "integrity": "sha512-5Mty5y/sOF1YWj1J6GiBodjlDc05CUR8PKXrsnFAiSG0xA+GHeWLovaZPYUDXkH/1iKRf2+M5+OrRgzC7O9b7w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "pump": "^3.0.0",
        "tar-stream": "^3.1.5"
      },
      "optionalDependencies": {
        "bare-fs": "^4.0.1",
        "bare-path": "^3.0.0"
      }
    },
    "node_modules/tar-stream": {
      "version": "3.1.7",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-3.1.7.tgz",
      "integrity": "sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "b4a": "^1.6.4",
        "fast-fifo": "^1.2.0",
        "streamx": "^2.15.0"
      }
    },
    "node_modules/tar/node_modules/mkdirp": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
      "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "mkdirp": "dist/cjs/src/bin.js"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/tar/node_modules/yallist": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/temp-dir": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/temp-dir/-/temp-dir-2.0.0.tgz",
      "integrity": "sha512-aoBAniQmmwtcKp/7BzsH8Cxzv8OL736p7v1ihGb5e9DJ9kTwGWHrQrVB5+lfVDzfGrdRzXch+ig7LHaY1JTOrg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/tempy": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tempy/-/tempy-0.6.0.tgz",
      "integrity": "sha512-G13vtMYPT/J8A4X2SjdtBTphZlrp1gKv6hZiOjw14RCWg6GbHuQBGtjlx75xLbYV/wEc0D7G5K4rxKP/cXk8Bw==",
      "license": "MIT",
      "dependencies": {
        "is-stream": "^2.0.0",
        "temp-dir": "^2.0.0",
        "type-fest": "^0.16.0",
        "unique-string": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/terser": {
      "version": "5.43.1",
      "resolved": "https://registry.npmjs.org/terser/-/terser-5.43.1.tgz",
      "integrity": "sha512-+6erLbBm0+LROX2sPXlUYx/ux5PyE9K/a92Wrt6oA+WDAoFTdpHE5tCYCI5PNzq2y8df4rA+QgHLJuR4jNymsg==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "@jridgewell/source-map": "^0.3.3",
        "acorn": "^8.14.0",
        "commander": "^2.20.0",
        "source-map-support": "~0.5.20"
      },
      "bin": {
        "terser": "bin/terser"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/terser-webpack-plugin": {
      "version": "5.3.14",
      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-5.3.14.tgz",
      "integrity": "sha512-vkZjpUjb6OMS7dhV+tILUW6BhpDR7P2L/aQSAv+Uwk+m8KATX9EccViHTJR2qDtACKPIYndLGCyl3FMo+r2LMw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "^0.3.25",
        "jest-worker": "^27.4.5",
        "schema-utils": "^4.3.0",
        "serialize-javascript": "^6.0.2",
        "terser": "^5.31.1"
      },
      "engines": {
        "node": ">= 10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      },
      "peerDependencies": {
        "webpack": "^5.1.0"
      },
      "peerDependenciesMeta": {
        "@swc/core": {
          "optional": true
        },
        "esbuild": {
          "optional": true
        },
        "uglify-js": {
          "optional": true
        }
      }
    },
    "node_modules/text-decoder": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/text-decoder/-/text-decoder-1.2.3.tgz",
      "integrity": "sha512-3/o9z3X0X0fTupwsYvR03pJ/DjWuqqrfwBgTQzdWDiQSm9KitAyz/9WqsT2JQW7KV2m+bC2ol/zqpW37NHxLaA==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "b4a": "^1.6.4"
      }
    },
    "node_modules/third-party-web": {
      "version": "0.24.5",
      "resolved": "https://registry.npmjs.org/third-party-web/-/third-party-web-0.24.5.tgz",
      "integrity": "sha512-1rUOdMYpNTRajgk1F7CmHD26oA6rTKekBjHay854J6OkPXeNyPcR54rhWDaamlWyi9t2wAVPQESdedBhucmOLA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/thread-stream": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/thread-stream/-/thread-stream-3.1.0.tgz",
      "integrity": "sha512-OqyPZ9u96VohAyMfJykzmivOrY2wfMSf3C5TtFJVgN+Hm6aj+voFhlK+kZEIv2FBh1X6Xp3DlnCOfEQ3B2J86A==",
      "license": "MIT",
      "dependencies": {
        "real-require": "^0.2.0"
      }
    },
    "node_modules/three": {
      "version": "0.179.1",
      "resolved": "https://registry.npmjs.org/three/-/three-0.179.1.tgz",
      "integrity": "sha512-5y/elSIQbrvKOISxpwXCR4sQqHtGiOI+MKLc3SsBdDXA2hz3Mdp3X59aUp8DyybMa34aeBwbFTpdoLJaUDEWSw==",
      "license": "MIT"
    },
    "node_modules/three-mesh-bvh": {
      "version": "0.7.6",
      "resolved": "https://registry.npmjs.org/three-mesh-bvh/-/three-mesh-bvh-0.7.6.tgz",
      "integrity": "sha512-rCjsnxEqR9r1/C/lCqzGLS67NDty/S/eT6rAJfDvsanrIctTWdNoR4ZOGWewCB13h1QkVo2BpmC0wakj1+0m8A==",
      "license": "MIT",
      "peerDependencies": {
        "three": ">= 0.151.0"
      }
    },
    "node_modules/three-stdlib": {
      "version": "2.36.0",
      "resolved": "https://registry.npmjs.org/three-stdlib/-/three-stdlib-2.36.0.tgz",
      "integrity": "sha512-kv0Byb++AXztEGsULgMAs8U2jgUdz6HPpAB/wDJnLiLlaWQX2APHhiTJIN7rqW+Of0eRgcp7jn05U1BsCP3xBA==",
      "license": "MIT",
      "dependencies": {
        "@types/draco3d": "^1.4.0",
        "@types/offscreencanvas": "^2019.6.4",
        "@types/webxr": "^0.5.2",
        "draco3d": "^1.4.1",
        "fflate": "^0.6.9",
        "potpack": "^1.0.1"
      },
      "peerDependencies": {
        "three": ">=0.128.0"
      }
    },
    "node_modules/three-stdlib/node_modules/@types/offscreencanvas": {
      "version": "2019.7.3",
      "resolved": "https://registry.npmjs.org/@types/offscreencanvas/-/offscreencanvas-2019.7.3.tgz",
      "integrity": "sha512-ieXiYmgSRXUDeOntE1InxjWyvEelZGP63M+cGuquuRLuIKKT1osnkXjxev9B7d1nXSug5vpunx+gNlbVxMlC9A==",
      "license": "MIT"
    },
    "node_modules/three-stdlib/node_modules/fflate": {
      "version": "0.6.10",
      "resolved": "https://registry.npmjs.org/fflate/-/fflate-0.6.10.tgz",
      "integrity": "sha512-IQrh3lEPM93wVCEczc9SaAOvkmcoQn/G8Bo1e8ZPlY3X3bnAxWaBdvTdvM1hP62iZp0BXWDy4vTAy4fF0+Dlpg==",
      "license": "MIT"
    },
    "node_modules/through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==",
      "license": "MIT"
    },
    "node_modules/tinyexec": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/tinyexec/-/tinyexec-1.0.1.tgz",
      "integrity": "sha512-5uC6DDlmeqiOwCPmK9jMSdOuZTh8bU39Ys6yidB+UTt5hfZUPGAypSgFRiEp+jbi9qH40BLDvy85jIU88wKSqw==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/tinyglobby": {
      "version": "0.2.14",
      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fdir": "^6.4.4",
        "picomatch": "^4.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/SuperchupuDev"
      }
    },
    "node_modules/tinyglobby/node_modules/fdir": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.5.0.tgz",
      "integrity": "sha512-tIbYtZbucOs0BRGqPJkshJUYdL+SDH7dVM8gjy+ERp3WAUjLEFJE+02kanyHtwjWOnwrKYBiwAmM0p4kLJAnXg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12.0.0"
      },
      "peerDependencies": {
        "picomatch": "^3 || ^4"
      },
      "peerDependenciesMeta": {
        "picomatch": {
          "optional": true
        }
      }
    },
    "node_modules/tinyglobby/node_modules/picomatch": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/tldts-core": {
      "version": "6.1.86",
      "resolved": "https://registry.npmjs.org/tldts-core/-/tldts-core-6.1.86.tgz",
      "integrity": "sha512-Je6p7pkk+KMzMv2XXKmAE3McmolOQFdxkKw0R8EYNr7sELW46JqnNeTX8ybPiQgvg1ymCoF8LXs5fzFaZvJPTA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/tldts-icann": {
      "version": "6.1.86",
      "resolved": "https://registry.npmjs.org/tldts-icann/-/tldts-icann-6.1.86.tgz",
      "integrity": "sha512-NFxmRT2lAEMcCOBgeZ0NuM0zsK/xgmNajnY6n4S1mwAKocft2s2ise1O3nQxrH3c+uY6hgHUV9GGNVp7tUE4Sg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "tldts-core": "^6.1.86"
      }
    },
    "node_modules/tmp": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.1.0.tgz",
      "integrity": "sha512-J7Z2K08jbGcdA1kkQpJSqLF6T0tdQqpR2pnSUXsIchbPdTI9v3e85cLW0d6WDhwuAleOV71j2xWs8qMPfK7nKw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "rimraf": "^2.6.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tmp/node_modules/rimraf": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
      "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/topojson-client": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/topojson-client/-/topojson-client-3.1.0.tgz",
      "integrity": "sha512-605uxS6bcYxGXw9qi62XyrV6Q3xwbndjachmNxu8HWTtVPxZfEJN9fd/SZS1Q54Sn2y0TMyMxFj/cJINqGHrKw==",
      "license": "ISC",
      "dependencies": {
        "commander": "2"
      },
      "bin": {
        "topo2geo": "bin/topo2geo",
        "topomerge": "bin/topomerge",
        "topoquantize": "bin/topoquantize"
      }
    },
    "node_modules/totalist": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/totalist/-/totalist-3.0.1.tgz",
      "integrity": "sha512-sf4i37nQ2LBx4m3wB74y+ubopq6W/dIzXg0FDGjsYnZHVa1Da8FH853wlL2gtUhg+xJXjfk3kUZS3BRoQeoQBQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tr46": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-5.1.1.tgz",
      "integrity": "sha512-hdF5ZgjTqgAntKkklYw0R03MG2x/bSzTtkxmIRw/sTNV8YXsCJ1tfLAX23lhxhHJlEf3CRCOCGGWw3vI3GaSPw==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.3.1"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tree-kill": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz",
      "integrity": "sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "tree-kill": "cli.js"
      }
    },
    "node_modules/troika-three-text": {
      "version": "0.49.1",
      "resolved": "https://registry.npmjs.org/troika-three-text/-/troika-three-text-0.49.1.tgz",
      "integrity": "sha512-lXGWxgjJP9kw4i4Wh+0k0Q/7cRfS6iOME4knKht/KozPu9GcFA9NnNpRvehIhrUawq9B0ZRw+0oiFHgRO+4Wig==",
      "license": "MIT",
      "dependencies": {
        "bidi-js": "^1.0.2",
        "troika-three-utils": "^0.49.0",
        "troika-worker-utils": "^0.49.0",
        "webgl-sdf-generator": "1.1.1"
      },
      "peerDependencies": {
        "three": ">=0.125.0"
      }
    },
    "node_modules/troika-three-utils": {
      "version": "0.49.0",
      "resolved": "https://registry.npmjs.org/troika-three-utils/-/troika-three-utils-0.49.0.tgz",
      "integrity": "sha512-umitFL4cT+Fm/uONmaQEq4oZlyRHWwVClaS6ZrdcueRvwc2w+cpNQ47LlJKJswpqtMFWbEhOLy0TekmcPZOdYA==",
      "license": "MIT",
      "peerDependencies": {
        "three": ">=0.125.0"
      }
    },
    "node_modules/troika-worker-utils": {
      "version": "0.49.0",
      "resolved": "https://registry.npmjs.org/troika-worker-utils/-/troika-worker-utils-0.49.0.tgz",
      "integrity": "sha512-1xZHoJrG0HFfCvT/iyN41DvI/nRykiBtHqFkGaGgJwq5iXfIZFBiPPEHFpPpgyKM3Oo5ITHXP5wM2TNQszYdVg==",
      "license": "MIT"
    },
    "node_modules/ts-api-utils": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz",
      "integrity": "sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.12"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4"
      }
    },
    "node_modules/ts-poet": {
      "version": "6.12.0",
      "resolved": "https://registry.npmjs.org/ts-poet/-/ts-poet-6.12.0.tgz",
      "integrity": "sha512-xo+iRNMWqyvXpFTaOAvLPA5QAWO6TZrSUs5s4Odaya3epqofBu/fMLHEWl8jPmjhA0s9sgj9sNvF1BmaQlmQkA==",
      "license": "Apache-2.0",
      "dependencies": {
        "dprint-node": "^1.0.8"
      }
    },
    "node_modules/ts-proto": {
      "version": "2.7.7",
      "resolved": "https://registry.npmjs.org/ts-proto/-/ts-proto-2.7.7.tgz",
      "integrity": "sha512-/OfN9/Yriji2bbpOysZ/Jzc96isOKz+eBTJEcKaIZ0PR6x1TNgVm4Lz0zfbo+J0jwFO7fJjJyssefBPQ0o1V9A==",
      "license": "ISC",
      "dependencies": {
        "@bufbuild/protobuf": "^2.0.0",
        "case-anything": "^2.1.13",
        "ts-poet": "^6.12.0",
        "ts-proto-descriptors": "2.0.0"
      },
      "bin": {
        "protoc-gen-ts_proto": "protoc-gen-ts_proto"
      }
    },
    "node_modules/ts-proto-descriptors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ts-proto-descriptors/-/ts-proto-descriptors-2.0.0.tgz",
      "integrity": "sha512-wHcTH3xIv11jxgkX5OyCSFfw27agpInAd6yh89hKG6zqIXnjW9SYqSER2CVQxdPj4czeOhGagNvZBEbJPy7qkw==",
      "license": "ISC",
      "dependencies": {
        "@bufbuild/protobuf": "^2.0.0"
      }
    },
    "node_modules/tsconfig-paths": {
      "version": "3.15.0",
      "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz",
      "integrity": "sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/json5": "^0.0.29",
        "json5": "^1.0.2",
        "minimist": "^1.2.6",
        "strip-bom": "^3.0.0"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/tsx": {
      "version": "4.20.5",
      "resolved": "https://registry.npmjs.org/tsx/-/tsx-4.20.5.tgz",
      "integrity": "sha512-+wKjMNU9w/EaQayHXb7WA7ZaHY6hN8WgfvHNQ3t1PnU91/7O8TcTnIhCDYTZwnt8JsO9IBqZ30Ln1r7pPF52Aw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "~0.25.0",
        "get-tsconfig": "^4.7.5"
      },
      "bin": {
        "tsx": "dist/cli.mjs"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      }
    },
    "node_modules/tunnel-rat": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/tunnel-rat/-/tunnel-rat-0.1.2.tgz",
      "integrity": "sha512-lR5VHmkPhzdhrM092lI2nACsLO4QubF0/yoOhzX7c+wIpbN1GjHNzCc91QlpxBi+cnx8vVJ+Ur6vL5cEoQPFpQ==",
      "license": "MIT",
      "dependencies": {
        "zustand": "^4.3.2"
      }
    },
    "node_modules/tunnel-rat/node_modules/zustand": {
      "version": "4.5.7",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-4.5.7.tgz",
      "integrity": "sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==",
      "license": "MIT",
      "dependencies": {
        "use-sync-external-store": "^1.2.2"
      },
      "engines": {
        "node": ">=12.7.0"
      },
      "peerDependencies": {
        "@types/react": ">=16.8",
        "immer": ">=9.0.6",
        "react": ">=16.8"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "immer": {
          "optional": true
        },
        "react": {
          "optional": true
        }
      }
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-fest": {
      "version": "0.16.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.16.0.tgz",
      "integrity": "sha512-eaBzG6MxNzEn9kiwvtre90cXaNLkmadMWa1zQMs3XORCXNbsH/OewwbxC5ia9dCxIxnTAsSxXJaa/p5y8DlvJg==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/typed-array-buffer": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/typed-array-byte-length": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-byte-offset": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.15",
        "reflect.getprototypeof": "^1.0.9"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-length": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "is-typed-array": "^1.1.13",
        "possible-typed-array-names": "^1.0.0",
        "reflect.getprototypeof": "^1.0.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-typedarray": "^1.0.0"
      }
    },
    "node_modules/typescript": {
      "version": "5.5.4",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.5.4.tgz",
      "integrity": "sha512-Mtq29sKDAEYP7aljRgtPOpTvOfbwRWlS6dPRzwjdE+C0R4brX/GUyhHSecbHMFLNBLcJIPt9nl9yG5TZ1weH+Q==",
      "devOptional": true,
      "license": "Apache-2.0",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/ua-parser-js": {
      "version": "0.7.41",
      "resolved": "https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.41.tgz",
      "integrity": "sha512-O3oYyCMPYgNNHuO7Jjk3uacJWZF8loBgwrfd/5LE/HyZ3lUIOdniQ7DNXJcIgZbwioZxk0fLfI4EVnetdiX5jg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/ua-parser-js"
        },
        {
          "type": "paypal",
          "url": "https://paypal.me/faisalman"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/faisalman"
        }
      ],
      "license": "MIT",
      "bin": {
        "ua-parser-js": "script/cli.js"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/unbox-primitive": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.1.0",
        "which-boxed-primitive": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/unbzip2-stream": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz",
      "integrity": "sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "buffer": "^5.2.1",
        "through": "^2.3.8"
      }
    },
    "node_modules/unbzip2-stream/node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/uncrypto": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/uncrypto/-/uncrypto-0.1.3.tgz",
      "integrity": "sha512-Ql87qFHB3s/De2ClA9e0gsnS6zXG27SkTiSJwjCc9MebbfapQfuPzumMIUMi38ezPZVNFcHI9sUIepeQfw8J8Q==",
      "license": "MIT"
    },
    "node_modules/undici-types": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
      "license": "MIT"
    },
    "node_modules/unicode-canonical-property-names-ecmascript": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.1.tgz",
      "integrity": "sha512-dA8WbNeb2a6oQzAQ55YlT5vQAWGV9WXOsi3SskE3bcCdM0P4SDd+24zS/OCacdRq5BkdsRj9q3Pg6YyQoxIGqg==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==",
      "license": "MIT",
      "dependencies": {
        "unicode-canonical-property-names-ecmascript": "^2.0.0",
        "unicode-property-aliases-ecmascript": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-value-ecmascript": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.2.0.tgz",
      "integrity": "sha512-4IehN3V/+kkr5YeSSDDQG8QLqO26XpL2XP3GQtqwlT/QYSECAwFztxVHjlbh0+gjJ3XmNLS0zDsbgs9jWKExLg==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-property-aliases-ecmascript": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.1.0.tgz",
      "integrity": "sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unique-string": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unique-string/-/unique-string-2.0.0.tgz",
      "integrity": "sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==",
      "license": "MIT",
      "dependencies": {
        "crypto-random-string": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/universalify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz",
      "integrity": "sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==",
      "license": "MIT",
      "engines": {
        "node": ">= 10.0.0"
      }
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/unrs-resolver": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/unrs-resolver/-/unrs-resolver-1.11.1.tgz",
      "integrity": "sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "napi-postinstall": "^0.3.0"
      },
      "funding": {
        "url": "https://opencollective.com/unrs-resolver"
      },
      "optionalDependencies": {
        "@unrs/resolver-binding-android-arm-eabi": "1.11.1",
        "@unrs/resolver-binding-android-arm64": "1.11.1",
        "@unrs/resolver-binding-darwin-arm64": "1.11.1",
        "@unrs/resolver-binding-darwin-x64": "1.11.1",
        "@unrs/resolver-binding-freebsd-x64": "1.11.1",
        "@unrs/resolver-binding-linux-arm-gnueabihf": "1.11.1",
        "@unrs/resolver-binding-linux-arm-musleabihf": "1.11.1",
        "@unrs/resolver-binding-linux-arm64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-arm64-musl": "1.11.1",
        "@unrs/resolver-binding-linux-ppc64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-riscv64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-riscv64-musl": "1.11.1",
        "@unrs/resolver-binding-linux-s390x-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-x64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-x64-musl": "1.11.1",
        "@unrs/resolver-binding-wasm32-wasi": "1.11.1",
        "@unrs/resolver-binding-win32-arm64-msvc": "1.11.1",
        "@unrs/resolver-binding-win32-ia32-msvc": "1.11.1",
        "@unrs/resolver-binding-win32-x64-msvc": "1.11.1"
      }
    },
    "node_modules/upath": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/upath/-/upath-1.2.0.tgz",
      "integrity": "sha512-aZwGpamFO61g3OlfT7OQCHqhGnW43ieH9WZeP7QxN/G/jS4jfqUkZxoryvJgVPEcrl5NL/ggHsSmLMHuH64Lhg==",
      "license": "MIT",
      "engines": {
        "node": ">=4",
        "yarn": "*"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/urlpattern-polyfill": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/urlpattern-polyfill/-/urlpattern-polyfill-10.0.0.tgz",
      "integrity": "sha512-H/A06tKD7sS1O1X2SshBVeA5FLycRpjqiBeqGKmBwBDBy28EnRjORxTNe269KSSr5un5qyWi1iL61wLxpd+ZOg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/use-sync-external-store": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
      "integrity": "sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/utility-types": {
      "version": "3.11.0",
      "resolved": "https://registry.npmjs.org/utility-types/-/utility-types-3.11.0.tgz",
      "integrity": "sha512-6Z7Ma2aVEWisaL6TvBCy7P8rm2LQoPv6dJ7ecIaIixHcwfbJ0x7mWdbcwlIM5IGQxPZSFYeqRCqlOOeKoJYMkw==",
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "license": "MIT",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/vega": {
      "version": "5.20.0",
      "resolved": "https://registry.npmjs.org/vega/-/vega-5.20.0.tgz",
      "integrity": "sha512-L2hDaTH2gz9DFbu7l1B8fR637HzctViuosFCo/Db5aBe93fCJ/w/oJu+vQNfQELzfm9sntkS/+A4u+39xrDCNA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-crossfilter": "~4.0.5",
        "vega-dataflow": "~5.7.3",
        "vega-encode": "~4.8.3",
        "vega-event-selector": "~2.0.6",
        "vega-expression": "~4.0.1",
        "vega-force": "~4.0.7",
        "vega-format": "~1.0.4",
        "vega-functions": "~5.12.0",
        "vega-geo": "~4.3.8",
        "vega-hierarchy": "~4.0.9",
        "vega-label": "~1.0.0",
        "vega-loader": "~4.4.0",
        "vega-parser": "~6.1.3",
        "vega-projection": "~1.4.5",
        "vega-regression": "~1.0.9",
        "vega-runtime": "~6.1.3",
        "vega-scale": "~7.1.1",
        "vega-scenegraph": "~4.9.4",
        "vega-statistics": "~1.7.9",
        "vega-time": "~2.0.4",
        "vega-transforms": "~4.9.3",
        "vega-typings": "~0.20.0",
        "vega-util": "~1.16.1",
        "vega-view": "~5.10.0",
        "vega-view-transforms": "~4.5.8",
        "vega-voronoi": "~4.1.5",
        "vega-wordcloud": "~4.1.3"
      }
    },
    "node_modules/vega-canvas": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/vega-canvas/-/vega-canvas-1.2.7.tgz",
      "integrity": "sha512-OkJ9CACVcN9R5Pi9uF6MZBF06pO6qFpDYHWSKBJsdHP5o724KrsgR6UvbnXFH82FdsiTOff/HqjuaG8C7FL+9Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-crossfilter": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/vega-crossfilter/-/vega-crossfilter-4.0.5.tgz",
      "integrity": "sha512-yF+iyGP+ZxU7Tcj5yBsMfoUHTCebTALTXIkBNA99RKdaIHp1E690UaGVLZe6xde2n5WaYpho6I/I6wdAW3NXcg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "vega-dataflow": "^5.7.3",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-dataflow": {
      "version": "5.7.7",
      "resolved": "https://registry.npmjs.org/vega-dataflow/-/vega-dataflow-5.7.7.tgz",
      "integrity": "sha512-R2NX2HvgXL+u4E6u+L5lKvvRiCtnE6N6l+umgojfi53suhhkFP+zB+2UAQo4syxuZ4763H1csfkKc4xpqLzKnw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-format": "^1.1.3",
        "vega-loader": "^4.5.3",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-dataflow/node_modules/commander": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
      "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==",
      "license": "MIT",
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/vega-dataflow/node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-dataflow/node_modules/d3-dsv": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-dsv/-/d3-dsv-3.0.1.tgz",
      "integrity": "sha512-UG6OvdI5afDIFP9w4G0mNq50dSOsXHJaRE8arAS5o9ApWnIElp8GZw1Dun8vP8OyHOZ/QJUKUJwxiiCCnUwm+Q==",
      "license": "ISC",
      "dependencies": {
        "commander": "7",
        "iconv-lite": "0.6",
        "rw": "1"
      },
      "bin": {
        "csv2json": "bin/dsv2json.js",
        "csv2tsv": "bin/dsv2dsv.js",
        "dsv2dsv": "bin/dsv2dsv.js",
        "dsv2json": "bin/dsv2json.js",
        "json2csv": "bin/json2dsv.js",
        "json2dsv": "bin/json2dsv.js",
        "json2tsv": "bin/json2dsv.js",
        "tsv2csv": "bin/dsv2dsv.js",
        "tsv2json": "bin/dsv2json.js"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-dataflow/node_modules/d3-format": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz",
      "integrity": "sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-dataflow/node_modules/d3-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
      "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-dataflow/node_modules/d3-time-format": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz",
      "integrity": "sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==",
      "license": "ISC",
      "dependencies": {
        "d3-time": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-dataflow/node_modules/iconv-lite": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/vega-dataflow/node_modules/vega-format": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/vega-format/-/vega-format-1.1.3.tgz",
      "integrity": "sha512-wQhw7KR46wKJAip28FF/CicW+oiJaPAwMKdrxlnTA0Nv8Bf7bloRlc+O3kON4b4H1iALLr9KgRcYTOeXNs2MOA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^3.2.2",
        "d3-format": "^3.1.0",
        "d3-time-format": "^4.1.0",
        "vega-time": "^2.1.3",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-dataflow/node_modules/vega-loader": {
      "version": "4.5.3",
      "resolved": "https://registry.npmjs.org/vega-loader/-/vega-loader-4.5.3.tgz",
      "integrity": "sha512-dUfIpxTLF2magoMaur+jXGvwMxjtdlDZaIS8lFj6N7IhUST6nIvBzuUlRM+zLYepI5GHtCLOnqdKU4XV0NggCA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-dsv": "^3.0.1",
        "node-fetch": "^2.6.7",
        "topojson-client": "^3.1.0",
        "vega-format": "^1.1.3",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-dataflow/node_modules/vega-time": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/vega-time/-/vega-time-2.1.3.tgz",
      "integrity": "sha512-hFcWPdTV844IiY0m97+WUoMLADCp+8yUQR1NStWhzBzwDDA7QEGGwYGxALhdMOaDTwkyoNj3V/nox2rQAJD/vQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^3.2.2",
        "d3-time": "^3.1.0",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-dataflow/node_modules/vega-util": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.17.3.tgz",
      "integrity": "sha512-nSNpZLUrRvFo46M5OK4O6x6f08WD1yOcEzHNlqivF+sDLSsVpstaF6fdJYwrbf/debFi2L9Tkp4gZQtssup9iQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-embed": {
      "version": "6.17.0",
      "resolved": "https://registry.npmjs.org/vega-embed/-/vega-embed-6.17.0.tgz",
      "integrity": "sha512-9eiVZCrLDb/EiVCMbMYouWB/q9dOeVkL5Bh0vU6wsUpIV/bbEvS47uljuo3YSxFqkfNpJ+Qt8xvLRiYSnN4lqw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "fast-json-patch": "^3.0.0-1",
        "json-stringify-pretty-compact": "^3.0.0",
        "semver": "^7.3.5",
        "vega-schema-url-parser": "^2.1.0",
        "vega-themes": "^2.10.0",
        "vega-tooltip": "^0.25.1"
      },
      "peerDependencies": {
        "vega": "^5.13.0",
        "vega-lite": "*"
      }
    },
    "node_modules/vega-encode": {
      "version": "4.8.3",
      "resolved": "https://registry.npmjs.org/vega-encode/-/vega-encode-4.8.3.tgz",
      "integrity": "sha512-JoRYtaV2Hs8spWLzTu/IjR7J9jqRmuIOEicAaWj6T9NSZrNWQzu2zF3IVsX85WnrIDIRUDaehXaFZvy9uv9RQg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "d3-interpolate": "^2.0.1",
        "vega-dataflow": "^5.7.3",
        "vega-scale": "^7.0.3",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-event-selector": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/vega-event-selector/-/vega-event-selector-2.0.6.tgz",
      "integrity": "sha512-UwCu50Sqd8kNZ1X/XgiAY+QAyQUmGFAwyDu7y0T5fs6/TPQnDo/Bo346NgSgINBEhEKOAMY1Nd/rPOk4UEm/ew==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-expression": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/vega-expression/-/vega-expression-4.0.1.tgz",
      "integrity": "sha512-ZrDj0hP8NmrCpdLFf7Rd/xMUHGoSYsAOTaYp7uXZ2dkEH5x0uPy5laECMc8TiQvL8W+8IrN2HAWCMRthTSRe2Q==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-util": "^1.16.0"
      }
    },
    "node_modules/vega-force": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/vega-force/-/vega-force-4.0.7.tgz",
      "integrity": "sha512-pyLKdwXSZ9C1dVIqdJOobvBY29rLvZjvRRTla9BU/nMwAiAGlGi6WKUFdRGdneyGe3zo2nSZDTZlZM/Z5VaQNA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-force": "^2.1.1",
        "vega-dataflow": "^5.7.3",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-format": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/vega-format/-/vega-format-1.0.4.tgz",
      "integrity": "sha512-oTAeub3KWm6nKhXoYCx1q9G3K43R6/pDMXvqDlTSUtjoY7b/Gixm8iLcir5S9bPjvH40n4AcbZsPmNfL/Up77A==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "d3-format": "^2.0.0",
        "d3-time-format": "^3.0.0",
        "vega-time": "^2.0.3",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-format/node_modules/d3-format": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-2.0.0.tgz",
      "integrity": "sha512-Ab3S6XuE/Q+flY96HXT0jOXcM4EAClYFnRGY5zsjRGNy6qCYrQsMffs7cV5Q9xejb35zxW5hf/guKw34kvIKsA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-functions": {
      "version": "5.12.1",
      "resolved": "https://registry.npmjs.org/vega-functions/-/vega-functions-5.12.1.tgz",
      "integrity": "sha512-7cHfcjXOj27qEbh2FTzWDl7FJK4xGcMFF7+oiyqa0fp7BU/wNT5YdNV0t5kCX9WjV7mfJWACKV74usLJbyM6GA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "d3-color": "^2.0.0",
        "d3-geo": "^2.0.1",
        "vega-dataflow": "^5.7.3",
        "vega-expression": "^5.0.0",
        "vega-scale": "^7.1.1",
        "vega-scenegraph": "^4.9.3",
        "vega-selections": "^5.3.1",
        "vega-statistics": "^1.7.9",
        "vega-time": "^2.0.4",
        "vega-util": "^1.16.0"
      }
    },
    "node_modules/vega-functions/node_modules/vega-expression": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/vega-expression/-/vega-expression-5.2.0.tgz",
      "integrity": "sha512-WRMa4ny3iZIVAzDlBh3ipY2QUuLk2hnJJbfbncPgvTF7BUgbIbKq947z+JicWksYbokl8n1JHXJoqi3XvpG0Zw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-functions/node_modules/vega-util": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.17.3.tgz",
      "integrity": "sha512-nSNpZLUrRvFo46M5OK4O6x6f08WD1yOcEzHNlqivF+sDLSsVpstaF6fdJYwrbf/debFi2L9Tkp4gZQtssup9iQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-geo": {
      "version": "4.3.8",
      "resolved": "https://registry.npmjs.org/vega-geo/-/vega-geo-4.3.8.tgz",
      "integrity": "sha512-fsGxV96Q/QRgPqOPtMBZdI+DneIiROKTG3YDZvGn0EdV16OG5LzFhbNgLT5GPzI+kTwgLpAsucBHklexlB4kfg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "d3-color": "^2.0.0",
        "d3-geo": "^2.0.1",
        "vega-canvas": "^1.2.5",
        "vega-dataflow": "^5.7.3",
        "vega-projection": "^1.4.5",
        "vega-statistics": "^1.7.9",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-hierarchy": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/vega-hierarchy/-/vega-hierarchy-4.0.9.tgz",
      "integrity": "sha512-4XaWK6V38/QOZ+vllKKTafiwL25m8Kd+ebHmDV+Q236ONHmqc/gv82wwn9nBeXPEfPv4FyJw2SRoqa2Jol6fug==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-hierarchy": "^2.0.0",
        "vega-dataflow": "^5.7.3",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-label": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/vega-label/-/vega-label-1.0.0.tgz",
      "integrity": "sha512-hCdm2pcHgkKgxnzW9GvX5JmYNiUMlOXOibtMmBzvFBQHX3NiV9giQ5nsPiQiFbV08VxEPtM+VYXr2HyrIcq5zQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-canvas": "^1.2.5",
        "vega-dataflow": "^5.7.3",
        "vega-scenegraph": "^4.9.2",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-lite": {
      "version": "4.13.1",
      "resolved": "https://registry.npmjs.org/vega-lite/-/vega-lite-4.13.1.tgz",
      "integrity": "sha512-OHZSSqVLuikoZ3idz3jIRk0UCKtVU2Lq5gaD6cLNTnJjNetoHKKdfZ023LVj4+Y9yWPz5meb+EJUsfBAGfF4Vw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@types/clone": "~0.1.30",
        "@types/fast-json-stable-stringify": "^2.0.0",
        "array-flat-polyfill": "^1.0.1",
        "clone": "~2.1.2",
        "fast-deep-equal": "~3.1.1",
        "fast-json-stable-stringify": "~2.1.0",
        "json-stringify-pretty-compact": "~2.0.0",
        "tslib": "~2.0.0",
        "vega-event-selector": "~2.0.3",
        "vega-expression": "~2.6.5",
        "vega-util": "~1.14.0",
        "yargs": "~15.3.1"
      },
      "bin": {
        "vl2pdf": "bin/vl2pdf",
        "vl2png": "bin/vl2png",
        "vl2svg": "bin/vl2svg",
        "vl2vg": "bin/vl2vg"
      },
      "peerDependencies": {
        "vega": "^5.12.1"
      }
    },
    "node_modules/vega-lite/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/vega-lite/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/vega-lite/node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "license": "MIT",
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/vega-lite/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/vega-lite/node_modules/json-stringify-pretty-compact": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/json-stringify-pretty-compact/-/json-stringify-pretty-compact-2.0.0.tgz",
      "integrity": "sha512-WRitRfs6BGq4q8gTgOy4ek7iPFXjbra0H3PmDLKm2xnZ+Gh1HUhiKGgCZkSPNULlP7mvfu6FV/mOLhCarspADQ==",
      "license": "MIT"
    },
    "node_modules/vega-lite/node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "license": "MIT",
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/vega-lite/node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "license": "MIT",
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/vega-lite/node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "license": "MIT",
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/vega-lite/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/vega-lite/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/vega-lite/node_modules/tslib": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.0.3.tgz",
      "integrity": "sha512-uZtkfKblCEQtZKBF6EBXVZeQNl82yqtDQdv+eck8u7tdPxjLu2/lp5/uPW+um2tpuxINHWy3GhiccY7QgEaVHQ==",
      "license": "0BSD"
    },
    "node_modules/vega-lite/node_modules/vega-expression": {
      "version": "2.6.6",
      "resolved": "https://registry.npmjs.org/vega-expression/-/vega-expression-2.6.6.tgz",
      "integrity": "sha512-zxPzXO33FawU3WQHRmHJaRreyJlyMaNMn1uuCFSouJttPkBBWB5gCrha2f5+pF3t4NMFWTnSrgCkR6mcaubnng==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-util": "^1.15.0"
      }
    },
    "node_modules/vega-lite/node_modules/vega-expression/node_modules/vega-util": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.17.3.tgz",
      "integrity": "sha512-nSNpZLUrRvFo46M5OK4O6x6f08WD1yOcEzHNlqivF+sDLSsVpstaF6fdJYwrbf/debFi2L9Tkp4gZQtssup9iQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-lite/node_modules/vega-util": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.14.1.tgz",
      "integrity": "sha512-pSKJ8OCkgfgHZDTljyj+gmGltgulceWbk1BV6LWrXqp6P3J8qPA/oZA8+a93YNApYxXZ3yzIVUDOo5O27xk0jw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-lite/node_modules/yargs": {
      "version": "15.3.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.3.1.tgz",
      "integrity": "sha512-92O1HWEjw27sBfgmXiixJWT5hRBp2eobqXicLtPBIDBhYB+1HpwZlXmbW2luivBJHBzki+7VyCLRtAkScbTBQA==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^6.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^4.1.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^4.2.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^18.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/vega-lite/node_modules/yargs-parser": {
      "version": "18.1.3",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
      "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
      "license": "ISC",
      "dependencies": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/vega-loader": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/vega-loader/-/vega-loader-4.4.1.tgz",
      "integrity": "sha512-dj65i4qlNhK0mOmjuchHgUrF5YUaWrYpx0A8kXA68lBk5Hkx8FNRztkcl07CZJ1+8V81ymEyJii9jzGbhEX0ag==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-dsv": "^2.0.0",
        "node-fetch": "^2.6.1",
        "topojson-client": "^3.1.0",
        "vega-format": "^1.0.4",
        "vega-util": "^1.16.0"
      }
    },
    "node_modules/vega-parser": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/vega-parser/-/vega-parser-6.1.4.tgz",
      "integrity": "sha512-tORdpWXiH/kkXcpNdbSVEvtaxBuuDtgYp9rBunVW9oLsjFvFXbSWlM1wvJ9ZFSaTfx6CqyTyGMiJemmr1QnTjQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-dataflow": "^5.7.3",
        "vega-event-selector": "^3.0.0",
        "vega-functions": "^5.12.1",
        "vega-scale": "^7.1.1",
        "vega-util": "^1.16.0"
      }
    },
    "node_modules/vega-parser/node_modules/vega-event-selector": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/vega-event-selector/-/vega-event-selector-3.0.1.tgz",
      "integrity": "sha512-K5zd7s5tjr1LiOOkjGpcVls8GsH/f2CWCrWcpKy74gTCp+llCdwz0Enqo013ZlGaRNjfgD/o1caJRt3GSaec4A==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-projection": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/vega-projection/-/vega-projection-1.4.5.tgz",
      "integrity": "sha512-85kWcPv0zrrNfxescqHtSYpRknilrS0K3CVRZc7IYQxnLtL1oma9WEbrSr1LCmDoCP5hl2Z1kKbomPXkrQX5Ag==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-geo": "^2.0.1",
        "d3-geo-projection": "^3.0.0"
      }
    },
    "node_modules/vega-regression": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/vega-regression/-/vega-regression-1.0.9.tgz",
      "integrity": "sha512-KSr3QbCF0vJEAWFVY2MA9X786oiJncTTr3gqRMPoaLr/Yo3f7OPKXRoUcw36RiWa0WCOEMgTYtM28iK6ZuSgaA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "vega-dataflow": "^5.7.3",
        "vega-statistics": "^1.7.9",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-runtime": {
      "version": "6.1.4",
      "resolved": "https://registry.npmjs.org/vega-runtime/-/vega-runtime-6.1.4.tgz",
      "integrity": "sha512-0dDYXyFLQcxPQ2OQU0WuBVYLRZnm+/CwVu6i6N4idS7R9VXIX5581EkCh3pZ20pQ/+oaA7oJ0pR9rJgJ6rukRQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-dataflow": "^5.7.5",
        "vega-util": "^1.17.1"
      }
    },
    "node_modules/vega-runtime/node_modules/vega-util": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.17.3.tgz",
      "integrity": "sha512-nSNpZLUrRvFo46M5OK4O6x6f08WD1yOcEzHNlqivF+sDLSsVpstaF6fdJYwrbf/debFi2L9Tkp4gZQtssup9iQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-scale": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/vega-scale/-/vega-scale-7.1.1.tgz",
      "integrity": "sha512-yE0to0prA9E5PBJ/XP77TO0BMkzyUVyt7TH5PAwj+CZT7PMsMO6ozihelRhoIiVcP0Ae/ByCEQBUQkzN5zJ0ZA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "d3-interpolate": "^2.0.1",
        "d3-scale": "^3.2.2",
        "vega-time": "^2.0.4",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-scenegraph": {
      "version": "4.9.4",
      "resolved": "https://registry.npmjs.org/vega-scenegraph/-/vega-scenegraph-4.9.4.tgz",
      "integrity": "sha512-QaegQzbFE2yhYLNWAmHwAuguW3yTtQrmwvfxYT8tk0g+KKodrQ5WSmNrphWXhqwtsgVSvtdZkfp2IPeumcOQJg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-path": "^2.0.0",
        "d3-shape": "^2.0.0",
        "vega-canvas": "^1.2.5",
        "vega-loader": "^4.3.3",
        "vega-scale": "^7.1.1",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-schema-url-parser": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/vega-schema-url-parser/-/vega-schema-url-parser-2.2.0.tgz",
      "integrity": "sha512-yAtdBnfYOhECv9YC70H2gEiqfIbVkq09aaE4y/9V/ovEFmH9gPKaEgzIZqgT7PSPQjKhsNkb6jk6XvSoboxOBw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-selections": {
      "version": "5.6.0",
      "resolved": "https://registry.npmjs.org/vega-selections/-/vega-selections-5.6.0.tgz",
      "integrity": "sha512-UE2w78rUUbaV3Ph+vQbQDwh8eywIJYRxBiZdxEG/Tr/KtFMLdy2BDgNZuuDO1Nv8jImPJwONmqjNhNDYwM0VJQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "3.2.4",
        "vega-expression": "^5.2.0",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-selections/node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-selections/node_modules/vega-expression": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/vega-expression/-/vega-expression-5.2.0.tgz",
      "integrity": "sha512-WRMa4ny3iZIVAzDlBh3ipY2QUuLk2hnJJbfbncPgvTF7BUgbIbKq947z+JicWksYbokl8n1JHXJoqi3XvpG0Zw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@types/estree": "^1.0.0",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-selections/node_modules/vega-util": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.17.3.tgz",
      "integrity": "sha512-nSNpZLUrRvFo46M5OK4O6x6f08WD1yOcEzHNlqivF+sDLSsVpstaF6fdJYwrbf/debFi2L9Tkp4gZQtssup9iQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-statistics": {
      "version": "1.7.10",
      "resolved": "https://registry.npmjs.org/vega-statistics/-/vega-statistics-1.7.10.tgz",
      "integrity": "sha512-QLb12gcfpDZ9K5h3TLGrlz4UXDH9wSPyg9LLfOJZacxvvJEPohacUQNrGEAVtFO9ccUCerRfH9cs25ZtHsOZrw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1"
      }
    },
    "node_modules/vega-themes": {
      "version": "2.15.0",
      "resolved": "https://registry.npmjs.org/vega-themes/-/vega-themes-2.15.0.tgz",
      "integrity": "sha512-DicRAKG9z+23A+rH/3w3QjJvKnlGhSbbUXGjBvYGseZ1lvj9KQ0BXZ2NS/+MKns59LNpFNHGi9us/wMlci4TOA==",
      "license": "BSD-3-Clause",
      "peerDependencies": {
        "vega": "*",
        "vega-lite": "*"
      }
    },
    "node_modules/vega-time": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/vega-time/-/vega-time-2.0.4.tgz",
      "integrity": "sha512-U314UDR9+ZlWrD3KBaeH+j/c2WSMdvcZq5yJfFT0yTg1jsBKAQBYFGvl+orackD8Zx3FveHOxx3XAObaQeDX+Q==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "d3-time": "^2.0.0",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-tooltip": {
      "version": "0.25.1",
      "resolved": "https://registry.npmjs.org/vega-tooltip/-/vega-tooltip-0.25.1.tgz",
      "integrity": "sha512-ugGwGi2/p3OpB8N15xieuzP8DyV5DreqMWcmJ9zpWT8GlkyKtef4dGRXnvHeHQ+iJFmWrq4oZJ+kLTrdiECjAg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-util": "^1.16.0"
      }
    },
    "node_modules/vega-transforms": {
      "version": "4.9.4",
      "resolved": "https://registry.npmjs.org/vega-transforms/-/vega-transforms-4.9.4.tgz",
      "integrity": "sha512-JGBhm5Bf6fiGTUSB5Qr5ckw/KU9FJcSV5xIe/y4IobM/i/KNwI1i1fP45LzP4F4yZc0DMTwJod2UvFHGk9plKA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "vega-dataflow": "^5.7.4",
        "vega-statistics": "^1.7.9",
        "vega-time": "^2.0.4",
        "vega-util": "^1.16.1"
      }
    },
    "node_modules/vega-typings": {
      "version": "0.20.0",
      "resolved": "https://registry.npmjs.org/vega-typings/-/vega-typings-0.20.0.tgz",
      "integrity": "sha512-S+HIRN/3WYiS5zrQjJ4FDEOlvFVHLxPXMJerrnN3YZ6bxCDYo7tEvQUUuByGZ3d19GuKjgejczWS7XHvF3WjDw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-util": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.16.1.tgz",
      "integrity": "sha512-FdgD72fmZMPJE99FxvFXth0IL4BbLA93WmBg/lvcJmfkK4Uf90WIlvGwaIUdSePIsdpkZjBPyQcHMQ8OcS8Smg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-view": {
      "version": "5.10.1",
      "resolved": "https://registry.npmjs.org/vega-view/-/vega-view-5.10.1.tgz",
      "integrity": "sha512-4xvQ5KZcgKdZx1Z7jjenCUumvlyr/j4XcHLRf9gyeFrFvvS596dVpL92V8twhV6O++DmS2+fj+rHagO8Di4nMg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^2.7.1",
        "d3-timer": "^2.0.0",
        "vega-dataflow": "^5.7.3",
        "vega-format": "^1.0.4",
        "vega-functions": "^5.10.0",
        "vega-runtime": "^6.1.3",
        "vega-scenegraph": "^4.9.4",
        "vega-util": "^1.16.1"
      }
    },
    "node_modules/vega-view-transforms": {
      "version": "4.5.9",
      "resolved": "https://registry.npmjs.org/vega-view-transforms/-/vega-view-transforms-4.5.9.tgz",
      "integrity": "sha512-NxEq4ZD4QwWGRrl2yDLnBRXM9FgCI+vvYb3ZC2+nVDtkUxOlEIKZsMMw31op5GZpfClWLbjCT3mVvzO2xaTF+g==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-dataflow": "^5.7.5",
        "vega-scenegraph": "^4.10.2",
        "vega-util": "^1.17.1"
      }
    },
    "node_modules/vega-view-transforms/node_modules/commander": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
      "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==",
      "license": "MIT",
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-dsv": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-dsv/-/d3-dsv-3.0.1.tgz",
      "integrity": "sha512-UG6OvdI5afDIFP9w4G0mNq50dSOsXHJaRE8arAS5o9ApWnIElp8GZw1Dun8vP8OyHOZ/QJUKUJwxiiCCnUwm+Q==",
      "license": "ISC",
      "dependencies": {
        "commander": "7",
        "iconv-lite": "0.6",
        "rw": "1"
      },
      "bin": {
        "csv2json": "bin/dsv2json.js",
        "csv2tsv": "bin/dsv2dsv.js",
        "dsv2dsv": "bin/dsv2dsv.js",
        "dsv2json": "bin/dsv2json.js",
        "json2csv": "bin/json2dsv.js",
        "json2dsv": "bin/json2dsv.js",
        "json2tsv": "bin/json2dsv.js",
        "tsv2csv": "bin/dsv2dsv.js",
        "tsv2json": "bin/dsv2json.js"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-format": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz",
      "integrity": "sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-interpolate": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
      "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz",
      "integrity": "sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-scale": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
      "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2.10.0 - 3",
        "d3-format": "1 - 3",
        "d3-interpolate": "1.2.0 - 3",
        "d3-time": "2.1.1 - 3",
        "d3-time-format": "2 - 4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-shape": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz",
      "integrity": "sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==",
      "license": "ISC",
      "dependencies": {
        "d3-path": "^3.1.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
      "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/d3-time-format": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz",
      "integrity": "sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==",
      "license": "ISC",
      "dependencies": {
        "d3-time": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-view-transforms/node_modules/iconv-lite": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/vega-view-transforms/node_modules/vega-format": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/vega-format/-/vega-format-1.1.3.tgz",
      "integrity": "sha512-wQhw7KR46wKJAip28FF/CicW+oiJaPAwMKdrxlnTA0Nv8Bf7bloRlc+O3kON4b4H1iALLr9KgRcYTOeXNs2MOA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^3.2.2",
        "d3-format": "^3.1.0",
        "d3-time-format": "^4.1.0",
        "vega-time": "^2.1.3",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-view-transforms/node_modules/vega-loader": {
      "version": "4.5.3",
      "resolved": "https://registry.npmjs.org/vega-loader/-/vega-loader-4.5.3.tgz",
      "integrity": "sha512-dUfIpxTLF2magoMaur+jXGvwMxjtdlDZaIS8lFj6N7IhUST6nIvBzuUlRM+zLYepI5GHtCLOnqdKU4XV0NggCA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-dsv": "^3.0.1",
        "node-fetch": "^2.6.7",
        "topojson-client": "^3.1.0",
        "vega-format": "^1.1.3",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-view-transforms/node_modules/vega-scale": {
      "version": "7.4.2",
      "resolved": "https://registry.npmjs.org/vega-scale/-/vega-scale-7.4.2.tgz",
      "integrity": "sha512-o6Hl76aU1jlCK7Q8DPYZ8OGsp4PtzLdzI6nGpLt8rxoE78QuB3GBGEwGAQJitp4IF7Lb2rL5oAXEl3ZP6xf9jg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^3.2.2",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-scale-chromatic": "^3.1.0",
        "vega-time": "^2.1.3",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-view-transforms/node_modules/vega-scenegraph": {
      "version": "4.13.1",
      "resolved": "https://registry.npmjs.org/vega-scenegraph/-/vega-scenegraph-4.13.1.tgz",
      "integrity": "sha512-LFY9+sLIxRfdDI9ZTKjLoijMkIAzPLBWHpPkwv4NPYgdyx+0qFmv+puBpAUGUY9VZqAZ736Uj5NJY9zw+/M3yQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-path": "^3.1.0",
        "d3-shape": "^3.2.0",
        "vega-canvas": "^1.2.7",
        "vega-loader": "^4.5.3",
        "vega-scale": "^7.4.2",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-view-transforms/node_modules/vega-time": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/vega-time/-/vega-time-2.1.3.tgz",
      "integrity": "sha512-hFcWPdTV844IiY0m97+WUoMLADCp+8yUQR1NStWhzBzwDDA7QEGGwYGxALhdMOaDTwkyoNj3V/nox2rQAJD/vQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^3.2.2",
        "d3-time": "^3.1.0",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-view-transforms/node_modules/vega-util": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.17.3.tgz",
      "integrity": "sha512-nSNpZLUrRvFo46M5OK4O6x6f08WD1yOcEzHNlqivF+sDLSsVpstaF6fdJYwrbf/debFi2L9Tkp4gZQtssup9iQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/vega-voronoi": {
      "version": "4.1.5",
      "resolved": "https://registry.npmjs.org/vega-voronoi/-/vega-voronoi-4.1.5.tgz",
      "integrity": "sha512-950IkgCFLj0zG33EWLAm1hZcp+FMqWcNQliMYt+MJzOD5S4MSpZpZ7K4wp2M1Jktjw/CLKFL9n38JCI0i3UonA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-delaunay": "^5.3.0",
        "vega-dataflow": "^5.7.3",
        "vega-util": "^1.15.2"
      }
    },
    "node_modules/vega-wordcloud": {
      "version": "4.1.6",
      "resolved": "https://registry.npmjs.org/vega-wordcloud/-/vega-wordcloud-4.1.6.tgz",
      "integrity": "sha512-lFmF3u9/ozU0P+WqPjeThQfZm0PigdbXDwpIUCxczrCXKYJLYFmZuZLZR7cxtmpZ0/yuvRvAJ4g123LXbSZF8A==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "vega-canvas": "^1.2.7",
        "vega-dataflow": "^5.7.7",
        "vega-scale": "^7.4.2",
        "vega-statistics": "^1.9.0",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-wordcloud/node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-wordcloud/node_modules/d3-interpolate": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
      "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-wordcloud/node_modules/d3-scale": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
      "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2.10.0 - 3",
        "d3-format": "1 - 3",
        "d3-interpolate": "1.2.0 - 3",
        "d3-time": "2.1.1 - 3",
        "d3-time-format": "2 - 4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-wordcloud/node_modules/d3-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
      "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/vega-wordcloud/node_modules/vega-scale": {
      "version": "7.4.2",
      "resolved": "https://registry.npmjs.org/vega-scale/-/vega-scale-7.4.2.tgz",
      "integrity": "sha512-o6Hl76aU1jlCK7Q8DPYZ8OGsp4PtzLdzI6nGpLt8rxoE78QuB3GBGEwGAQJitp4IF7Lb2rL5oAXEl3ZP6xf9jg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^3.2.2",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-scale-chromatic": "^3.1.0",
        "vega-time": "^2.1.3",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-wordcloud/node_modules/vega-statistics": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/vega-statistics/-/vega-statistics-1.9.0.tgz",
      "integrity": "sha512-GAqS7mkatpXcMCQKWtFu1eMUKLUymjInU0O8kXshWaQrVWjPIO2lllZ1VNhdgE0qGj4oOIRRS11kzuijLshGXQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^3.2.2"
      }
    },
    "node_modules/vega-wordcloud/node_modules/vega-time": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/vega-time/-/vega-time-2.1.3.tgz",
      "integrity": "sha512-hFcWPdTV844IiY0m97+WUoMLADCp+8yUQR1NStWhzBzwDDA7QEGGwYGxALhdMOaDTwkyoNj3V/nox2rQAJD/vQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "^3.2.2",
        "d3-time": "^3.1.0",
        "vega-util": "^1.17.3"
      }
    },
    "node_modules/vega-wordcloud/node_modules/vega-util": {
      "version": "1.17.3",
      "resolved": "https://registry.npmjs.org/vega-util/-/vega-util-1.17.3.tgz",
      "integrity": "sha512-nSNpZLUrRvFo46M5OK4O6x6f08WD1yOcEzHNlqivF+sDLSsVpstaF6fdJYwrbf/debFi2L9Tkp4gZQtssup9iQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/void-elements": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/void-elements/-/void-elements-3.1.0.tgz",
      "integrity": "sha512-Dhxzh5HZuiHQhbvTW9AMetFfBHDMYpo23Uo9btPXgdYP+3T5S+p+jgNy7spra+veYhBP2dCSgxR/i2Y02h5/6w==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/watchpack": {
      "version": "2.4.4",
      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.4.4.tgz",
      "integrity": "sha512-c5EGNOiyxxV5qmTtAB7rbiXxi1ooX1pQKMLX/MIabJjRA0SJBQOjKF+KSVfHkr9U1cADPon0mRiVe/riyaiDUA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "glob-to-regexp": "^0.4.1",
        "graceful-fs": "^4.1.2"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/webgl-constants": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/webgl-constants/-/webgl-constants-1.1.1.tgz",
      "integrity": "sha512-LkBXKjU5r9vAW7Gcu3T5u+5cvSvh5WwINdr0C+9jpzVB41cjQAP5ePArDtk/WHYdVj0GefCgM73BA7FlIiNtdg=="
    },
    "node_modules/webgl-sdf-generator": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/webgl-sdf-generator/-/webgl-sdf-generator-1.1.1.tgz",
      "integrity": "sha512-9Z0JcMTFxeE+b2x1LJTdnaT8rT8aEp7MVxkNwoycNmJWwPdzoXzMh0BjJSh/AEFP+KPYZUli814h8bJZFIZ2jA==",
      "license": "MIT"
    },
    "node_modules/webidl-conversions": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz",
      "integrity": "sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/webpack": {
      "version": "5.101.3",
      "resolved": "https://registry.npmjs.org/webpack/-/webpack-5.101.3.tgz",
      "integrity": "sha512-7b0dTKR3Ed//AD/6kkx/o7duS8H3f1a4w3BYpIriX4BzIhjkn4teo05cptsxvLesHFKK5KObnadmCHBwGc+51A==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@types/eslint-scope": "^3.7.7",
        "@types/estree": "^1.0.8",
        "@types/json-schema": "^7.0.15",
        "@webassemblyjs/ast": "^1.14.1",
        "@webassemblyjs/wasm-edit": "^1.14.1",
        "@webassemblyjs/wasm-parser": "^1.14.1",
        "acorn": "^8.15.0",
        "acorn-import-phases": "^1.0.3",
        "browserslist": "^4.24.0",
        "chrome-trace-event": "^1.0.2",
        "enhanced-resolve": "^5.17.3",
        "es-module-lexer": "^1.2.1",
        "eslint-scope": "5.1.1",
        "events": "^3.2.0",
        "glob-to-regexp": "^0.4.1",
        "graceful-fs": "^4.2.11",
        "json-parse-even-better-errors": "^2.3.1",
        "loader-runner": "^4.2.0",
        "mime-types": "^2.1.27",
        "neo-async": "^2.6.2",
        "schema-utils": "^4.3.2",
        "tapable": "^2.1.1",
        "terser-webpack-plugin": "^5.3.11",
        "watchpack": "^2.4.1",
        "webpack-sources": "^3.3.3"
      },
      "bin": {
        "webpack": "bin/webpack.js"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      },
      "peerDependenciesMeta": {
        "webpack-cli": {
          "optional": true
        }
      }
    },
    "node_modules/webpack-bundle-analyzer": {
      "version": "4.10.1",
      "resolved": "https://registry.npmjs.org/webpack-bundle-analyzer/-/webpack-bundle-analyzer-4.10.1.tgz",
      "integrity": "sha512-s3P7pgexgT/HTUSYgxJyn28A+99mmLq4HsJepMPzu0R8ImJc52QNqaFYW1Z2z2uIb1/J3eYgaAWVpaC+v/1aAQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@discoveryjs/json-ext": "0.5.7",
        "acorn": "^8.0.4",
        "acorn-walk": "^8.0.0",
        "commander": "^7.2.0",
        "debounce": "^1.2.1",
        "escape-string-regexp": "^4.0.0",
        "gzip-size": "^6.0.0",
        "html-escaper": "^2.0.2",
        "is-plain-object": "^5.0.0",
        "opener": "^1.5.2",
        "picocolors": "^1.0.0",
        "sirv": "^2.0.3",
        "ws": "^7.3.1"
      },
      "bin": {
        "webpack-bundle-analyzer": "lib/bin/analyzer.js"
      },
      "engines": {
        "node": ">= 10.13.0"
      }
    },
    "node_modules/webpack-bundle-analyzer/node_modules/commander": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-7.2.0.tgz",
      "integrity": "sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/webpack-bundle-analyzer/node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/webpack-sources": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-3.3.3.tgz",
      "integrity": "sha512-yd1RBzSGanHkitROoPFd6qsrxt+oFhg/129YzheDGqeustzX0vTZJZsSsQjVQC4yzBQ56K55XU8gaNCtIzOnTg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/webpack/node_modules/eslint-scope": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
      "integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/webpack/node_modules/estraverse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
      "license": "BSD-2-Clause",
      "peer": true,
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/webxr-layers-polyfill": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/webxr-layers-polyfill/-/webxr-layers-polyfill-1.1.0.tgz",
      "integrity": "sha512-GqWE6IFlut8a1Lnh9t1RPnOXud1rZ7wLPvWp7mqTDOYtgorXqlNMhEnI9EqjU33grBx0v3jm0Oc13opkAdmgMQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "gl-matrix": "^3.4.3"
      }
    },
    "node_modules/whatwg-fetch": {
      "version": "3.6.20",
      "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.6.20.tgz",
      "integrity": "sha512-EqhiFU6daOA8kpjOWTL0olhVOF3i7OrFzSYiGsEMB8GcXS+RrzauAERX65xMeNWVqxA6HXH2m69Z9LaKKdisfg==",
      "license": "MIT"
    },
    "node_modules/whatwg-url": {
      "version": "14.2.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-14.2.0.tgz",
      "integrity": "sha512-De72GdQZzNTUBBChsXueQUnPKDkg/5A5zp7pFDuQAj5UFoENpiACU0wlCvzpAGnTkj++ihpKwKyYewn/XNUbKw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "^5.1.0",
        "webidl-conversions": "^7.0.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
      "license": "MIT",
      "dependencies": {
        "is-bigint": "^1.1.0",
        "is-boolean-object": "^1.2.1",
        "is-number-object": "^1.1.1",
        "is-string": "^1.1.1",
        "is-symbol": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-builtin-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "function.prototype.name": "^1.1.6",
        "has-tostringtag": "^1.0.2",
        "is-async-function": "^2.0.0",
        "is-date-object": "^1.1.0",
        "is-finalizationregistry": "^1.1.0",
        "is-generator-function": "^1.0.10",
        "is-regex": "^1.2.1",
        "is-weakref": "^1.0.2",
        "isarray": "^2.0.5",
        "which-boxed-primitive": "^1.1.0",
        "which-collection": "^1.0.2",
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-collection": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
      "license": "MIT",
      "dependencies": {
        "is-map": "^2.0.3",
        "is-set": "^2.0.3",
        "is-weakmap": "^2.0.2",
        "is-weakset": "^2.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-module": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.1.tgz",
      "integrity": "sha512-iBdZ57RDvnOR9AGBhML2vFZf7h8vmBjhoaZqODJBFWHVtKkDmKuHai3cx5PgVMrX5YDNp27AofYbAwctSS+vhQ==",
      "license": "ISC"
    },
    "node_modules/which-typed-array": {
      "version": "1.1.19",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
      "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "for-each": "^0.3.5",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/workbox-background-sync": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-background-sync/-/workbox-background-sync-7.1.0.tgz",
      "integrity": "sha512-rMbgrzueVWDFcEq1610YyDW71z0oAXLfdRHRQcKw4SGihkfOK0JUEvqWHFwA6rJ+6TClnMIn7KQI5PNN1XQXwQ==",
      "license": "MIT",
      "dependencies": {
        "idb": "^7.0.1",
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-broadcast-update": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-broadcast-update/-/workbox-broadcast-update-7.1.0.tgz",
      "integrity": "sha512-O36hIfhjej/c5ar95pO67k1GQw0/bw5tKP7CERNgK+JdxBANQhDmIuOXZTNvwb2IHBx9hj2kxvcDyRIh5nzOgQ==",
      "license": "MIT",
      "dependencies": {
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-build": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/workbox-build/-/workbox-build-7.1.1.tgz",
      "integrity": "sha512-WdkVdC70VMpf5NBCtNbiwdSZeKVuhTEd5PV3mAwpTQCGAB5XbOny1P9egEgNdetv4srAMmMKjvBk4RD58LpooA==",
      "license": "MIT",
      "dependencies": {
        "@apideck/better-ajv-errors": "^0.3.1",
        "@babel/core": "^7.24.4",
        "@babel/preset-env": "^7.11.0",
        "@babel/runtime": "^7.11.2",
        "@rollup/plugin-babel": "^5.2.0",
        "@rollup/plugin-node-resolve": "^15.2.3",
        "@rollup/plugin-replace": "^2.4.1",
        "@rollup/plugin-terser": "^0.4.3",
        "@surma/rollup-plugin-off-main-thread": "^2.2.3",
        "ajv": "^8.6.0",
        "common-tags": "^1.8.0",
        "fast-json-stable-stringify": "^2.1.0",
        "fs-extra": "^9.0.1",
        "glob": "^7.1.6",
        "lodash": "^4.17.20",
        "pretty-bytes": "^5.3.0",
        "rollup": "^2.43.1",
        "source-map": "^0.8.0-beta.0",
        "stringify-object": "^3.3.0",
        "strip-comments": "^2.0.1",
        "tempy": "^0.6.0",
        "upath": "^1.2.0",
        "workbox-background-sync": "7.1.0",
        "workbox-broadcast-update": "7.1.0",
        "workbox-cacheable-response": "7.1.0",
        "workbox-core": "7.1.0",
        "workbox-expiration": "7.1.0",
        "workbox-google-analytics": "7.1.0",
        "workbox-navigation-preload": "7.1.0",
        "workbox-precaching": "7.1.0",
        "workbox-range-requests": "7.1.0",
        "workbox-recipes": "7.1.0",
        "workbox-routing": "7.1.0",
        "workbox-strategies": "7.1.0",
        "workbox-streams": "7.1.0",
        "workbox-sw": "7.1.0",
        "workbox-window": "7.1.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/workbox-build/node_modules/@apideck/better-ajv-errors": {
      "version": "0.3.6",
      "resolved": "https://registry.npmjs.org/@apideck/better-ajv-errors/-/better-ajv-errors-0.3.6.tgz",
      "integrity": "sha512-P+ZygBLZtkp0qqOAJJVX4oX/sFo5JR3eBWwwuqHHhK0GIgQOKWrAfiAaWX0aArHkRWHMuggFEgAZNxVPwPZYaA==",
      "license": "MIT",
      "dependencies": {
        "json-schema": "^0.4.0",
        "jsonpointer": "^5.0.0",
        "leven": "^3.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "ajv": ">=8"
      }
    },
    "node_modules/workbox-build/node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/workbox-build/node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==",
      "license": "MIT"
    },
    "node_modules/workbox-build/node_modules/source-map": {
      "version": "0.8.0-beta.0",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.8.0-beta.0.tgz",
      "integrity": "sha512-2ymg6oRBpebeZi9UUNsgQ89bhx01TcTkmNTGnNO88imTmbSgy4nfujrgVEFKWpMTEGA11EDkTt7mqObTPdigIA==",
      "deprecated": "The work that was done in this beta branch won't be included in future versions",
      "license": "BSD-3-Clause",
      "dependencies": {
        "whatwg-url": "^7.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/workbox-build/node_modules/tr46": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",
      "integrity": "sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/workbox-build/node_modules/webidl-conversions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",
      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==",
      "license": "BSD-2-Clause"
    },
    "node_modules/workbox-build/node_modules/whatwg-url": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
      "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
      "license": "MIT",
      "dependencies": {
        "lodash.sortby": "^4.7.0",
        "tr46": "^1.0.1",
        "webidl-conversions": "^4.0.2"
      }
    },
    "node_modules/workbox-build/node_modules/workbox-window": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-window/-/workbox-window-7.1.0.tgz",
      "integrity": "sha512-ZHeROyqR+AS5UPzholQRDttLFqGMwP0Np8MKWAdyxsDETxq3qOAyXvqessc3GniohG6e0mAqSQyKOHmT8zPF7g==",
      "license": "MIT",
      "dependencies": {
        "@types/trusted-types": "^2.0.2",
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-cacheable-response": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-cacheable-response/-/workbox-cacheable-response-7.1.0.tgz",
      "integrity": "sha512-iwsLBll8Hvua3xCuBB9h92+/e0wdsmSVgR2ZlvcfjepZWwhd3osumQB3x9o7flj+FehtWM2VHbZn8UJeBXXo6Q==",
      "license": "MIT",
      "dependencies": {
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-core": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-core/-/workbox-core-7.1.0.tgz",
      "integrity": "sha512-5KB4KOY8rtL31nEF7BfvU7FMzKT4B5TkbYa2tzkS+Peqj0gayMT9SytSFtNzlrvMaWgv6y/yvP9C0IbpFjV30Q==",
      "license": "MIT"
    },
    "node_modules/workbox-expiration": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-expiration/-/workbox-expiration-7.1.0.tgz",
      "integrity": "sha512-m5DcMY+A63rJlPTbbBNtpJ20i3enkyOtSgYfv/l8h+D6YbbNiA0zKEkCUaMsdDlxggla1oOfRkyqTvl5Ni5KQQ==",
      "license": "MIT",
      "dependencies": {
        "idb": "^7.0.1",
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-google-analytics": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-google-analytics/-/workbox-google-analytics-7.1.0.tgz",
      "integrity": "sha512-FvE53kBQHfVTcZyczeBVRexhh7JTkyQ8HAvbVY6mXd2n2A7Oyz/9fIwnY406ZcDhvE4NFfKGjW56N4gBiqkrew==",
      "license": "MIT",
      "dependencies": {
        "workbox-background-sync": "7.1.0",
        "workbox-core": "7.1.0",
        "workbox-routing": "7.1.0",
        "workbox-strategies": "7.1.0"
      }
    },
    "node_modules/workbox-navigation-preload": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-navigation-preload/-/workbox-navigation-preload-7.1.0.tgz",
      "integrity": "sha512-4wyAbo0vNI/X0uWNJhCMKxnPanNyhybsReMGN9QUpaePLTiDpKxPqFxl4oUmBNddPwIXug01eTSLVIFXimRG/A==",
      "license": "MIT",
      "dependencies": {
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-precaching": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-precaching/-/workbox-precaching-7.1.0.tgz",
      "integrity": "sha512-LyxzQts+UEpgtmfnolo0hHdNjoB7EoRWcF7EDslt+lQGd0lW4iTvvSe3v5JiIckQSB5KTW5xiCqjFviRKPj1zA==",
      "license": "MIT",
      "dependencies": {
        "workbox-core": "7.1.0",
        "workbox-routing": "7.1.0",
        "workbox-strategies": "7.1.0"
      }
    },
    "node_modules/workbox-range-requests": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-range-requests/-/workbox-range-requests-7.1.0.tgz",
      "integrity": "sha512-m7+O4EHolNs5yb/79CrnwPR/g/PRzMFYEdo01LqwixVnc/sbzNSvKz0d04OE3aMRel1CwAAZQheRsqGDwATgPQ==",
      "license": "MIT",
      "dependencies": {
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-recipes": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-recipes/-/workbox-recipes-7.1.0.tgz",
      "integrity": "sha512-NRrk4ycFN9BHXJB6WrKiRX3W3w75YNrNrzSX9cEZgFB5ubeGoO8s/SDmOYVrFYp9HMw6sh1Pm3eAY/1gVS8YLg==",
      "license": "MIT",
      "dependencies": {
        "workbox-cacheable-response": "7.1.0",
        "workbox-core": "7.1.0",
        "workbox-expiration": "7.1.0",
        "workbox-precaching": "7.1.0",
        "workbox-routing": "7.1.0",
        "workbox-strategies": "7.1.0"
      }
    },
    "node_modules/workbox-routing": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-routing/-/workbox-routing-7.1.0.tgz",
      "integrity": "sha512-oOYk+kLriUY2QyHkIilxUlVcFqwduLJB7oRZIENbqPGeBP/3TWHYNNdmGNhz1dvKuw7aqvJ7CQxn27/jprlTdg==",
      "license": "MIT",
      "dependencies": {
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-strategies": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-strategies/-/workbox-strategies-7.1.0.tgz",
      "integrity": "sha512-/UracPiGhUNehGjRm/tLUQ+9PtWmCbRufWtV0tNrALuf+HZ4F7cmObSEK+E4/Bx1p8Syx2tM+pkIrvtyetdlew==",
      "license": "MIT",
      "dependencies": {
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-streams": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-streams/-/workbox-streams-7.1.0.tgz",
      "integrity": "sha512-WyHAVxRXBMfysM8ORwiZnI98wvGWTVAq/lOyBjf00pXFvG0mNaVz4Ji+u+fKa/mf1i2SnTfikoYKto4ihHeS6w==",
      "license": "MIT",
      "dependencies": {
        "workbox-core": "7.1.0",
        "workbox-routing": "7.1.0"
      }
    },
    "node_modules/workbox-sw": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-sw/-/workbox-sw-7.1.0.tgz",
      "integrity": "sha512-Hml/9+/njUXBglv3dtZ9WBKHI235AQJyLBV1G7EFmh4/mUdSQuXui80RtjDeVRrXnm/6QWgRUEHG3/YBVbxtsA==",
      "license": "MIT"
    },
    "node_modules/workbox-webpack-plugin": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-webpack-plugin/-/workbox-webpack-plugin-7.1.0.tgz",
      "integrity": "sha512-em0vY0Uq7zXzOeEJYpFNX7x6q3RrRVqfaMhA4kadd3UkX/JuClgT9IUW2iX2cjmMPwI3W611c4fSRjtG5wPm2w==",
      "license": "MIT",
      "dependencies": {
        "fast-json-stable-stringify": "^2.1.0",
        "pretty-bytes": "^5.4.1",
        "upath": "^1.2.0",
        "webpack-sources": "^1.4.3",
        "workbox-build": "7.1.0"
      },
      "engines": {
        "node": ">=16.0.0"
      },
      "peerDependencies": {
        "webpack": "^4.4.0 || ^5.91.0"
      }
    },
    "node_modules/workbox-webpack-plugin/node_modules/@apideck/better-ajv-errors": {
      "version": "0.3.6",
      "resolved": "https://registry.npmjs.org/@apideck/better-ajv-errors/-/better-ajv-errors-0.3.6.tgz",
      "integrity": "sha512-P+ZygBLZtkp0qqOAJJVX4oX/sFo5JR3eBWwwuqHHhK0GIgQOKWrAfiAaWX0aArHkRWHMuggFEgAZNxVPwPZYaA==",
      "license": "MIT",
      "dependencies": {
        "json-schema": "^0.4.0",
        "jsonpointer": "^5.0.0",
        "leven": "^3.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "ajv": ">=8"
      }
    },
    "node_modules/workbox-webpack-plugin/node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/workbox-webpack-plugin/node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==",
      "license": "MIT"
    },
    "node_modules/workbox-webpack-plugin/node_modules/tr46": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",
      "integrity": "sha512-dTpowEjclQ7Kgx5SdBkqRzVhERQXov8/l9Ft9dVM9fmg0W0KQSVaXX9T4i6twCPNtYiZM53lpSSUAwJbFPOHxA==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/workbox-webpack-plugin/node_modules/webidl-conversions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",
      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg==",
      "license": "BSD-2-Clause"
    },
    "node_modules/workbox-webpack-plugin/node_modules/webpack-sources": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-1.4.3.tgz",
      "integrity": "sha512-lgTS3Xhv1lCOKo7SA5TjKXMjpSM4sBjNV5+q2bqesbSPs5FjGmU6jjtBSkX9b4qW87vDIsCIlUPOEhbZrMdjeQ==",
      "license": "MIT",
      "dependencies": {
        "source-list-map": "^2.0.0",
        "source-map": "~0.6.1"
      }
    },
    "node_modules/workbox-webpack-plugin/node_modules/whatwg-url": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.1.0.tgz",
      "integrity": "sha512-WUu7Rg1DroM7oQvGWfOiAK21n74Gg+T4elXEQYkOhtyLeWiJFoOGLXPKI/9gzIie9CtwVLm8wtw6YJdKyxSjeg==",
      "license": "MIT",
      "dependencies": {
        "lodash.sortby": "^4.7.0",
        "tr46": "^1.0.1",
        "webidl-conversions": "^4.0.2"
      }
    },
    "node_modules/workbox-webpack-plugin/node_modules/workbox-build": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-build/-/workbox-build-7.1.0.tgz",
      "integrity": "sha512-F6R94XAxjB2j4ETMkP1EXKfjECOtDmyvt0vz3BzgWJMI68TNSXIVNkgatwUKBlPGOfy9n2F/4voYRNAhEvPJNg==",
      "license": "MIT",
      "dependencies": {
        "@apideck/better-ajv-errors": "^0.3.1",
        "@babel/core": "^7.24.4",
        "@babel/preset-env": "^7.11.0",
        "@babel/runtime": "^7.11.2",
        "@rollup/plugin-babel": "^5.2.0",
        "@rollup/plugin-node-resolve": "^15.2.3",
        "@rollup/plugin-replace": "^2.4.1",
        "@rollup/plugin-terser": "^0.4.3",
        "@surma/rollup-plugin-off-main-thread": "^2.2.3",
        "ajv": "^8.6.0",
        "common-tags": "^1.8.0",
        "fast-json-stable-stringify": "^2.1.0",
        "fs-extra": "^9.0.1",
        "glob": "^7.1.6",
        "lodash": "^4.17.20",
        "pretty-bytes": "^5.3.0",
        "rollup": "^2.43.1",
        "source-map": "^0.8.0-beta.0",
        "stringify-object": "^3.3.0",
        "strip-comments": "^2.0.1",
        "tempy": "^0.6.0",
        "upath": "^1.2.0",
        "workbox-background-sync": "7.1.0",
        "workbox-broadcast-update": "7.1.0",
        "workbox-cacheable-response": "7.1.0",
        "workbox-core": "7.1.0",
        "workbox-expiration": "7.1.0",
        "workbox-google-analytics": "7.1.0",
        "workbox-navigation-preload": "7.1.0",
        "workbox-precaching": "7.1.0",
        "workbox-range-requests": "7.1.0",
        "workbox-recipes": "7.1.0",
        "workbox-routing": "7.1.0",
        "workbox-strategies": "7.1.0",
        "workbox-streams": "7.1.0",
        "workbox-sw": "7.1.0",
        "workbox-window": "7.1.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/workbox-webpack-plugin/node_modules/workbox-build/node_modules/source-map": {
      "version": "0.8.0-beta.0",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.8.0-beta.0.tgz",
      "integrity": "sha512-2ymg6oRBpebeZi9UUNsgQ89bhx01TcTkmNTGnNO88imTmbSgy4nfujrgVEFKWpMTEGA11EDkTt7mqObTPdigIA==",
      "deprecated": "The work that was done in this beta branch won't be included in future versions",
      "license": "BSD-3-Clause",
      "dependencies": {
        "whatwg-url": "^7.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/workbox-webpack-plugin/node_modules/workbox-window": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/workbox-window/-/workbox-window-7.1.0.tgz",
      "integrity": "sha512-ZHeROyqR+AS5UPzholQRDttLFqGMwP0Np8MKWAdyxsDETxq3qOAyXvqessc3GniohG6e0mAqSQyKOHmT8zPF7g==",
      "license": "MIT",
      "dependencies": {
        "@types/trusted-types": "^2.0.2",
        "workbox-core": "7.1.0"
      }
    },
    "node_modules/workbox-window": {
      "version": "7.3.0",
      "resolved": "https://registry.npmjs.org/workbox-window/-/workbox-window-7.3.0.tgz",
      "integrity": "sha512-qW8PDy16OV1UBaUNGlTVcepzrlzyzNW/ZJvFQQs2j2TzGsg6IKjcpZC1RSquqQnTOafl5pCj5bGfAHlCjOOjdA==",
      "license": "MIT",
      "dependencies": {
        "@types/trusted-types": "^2.0.2",
        "workbox-core": "7.3.0"
      }
    },
    "node_modules/workbox-window/node_modules/workbox-core": {
      "version": "7.3.0",
      "resolved": "https://registry.npmjs.org/workbox-core/-/workbox-core-7.3.0.tgz",
      "integrity": "sha512-Z+mYrErfh4t3zi7NVTvOuACB0A/jA3bgxUN3PwtAVHvfEsZxV9Iju580VEETug3zYJRc0Dmii/aixI/Uxj8fmw==",
      "license": "MIT"
    },
    "node_modules/wrap-ansi": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/wrap-ansi/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "license": "ISC"
    },
    "node_modules/write-file-atomic": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "imurmurhash": "^0.1.4",
        "is-typedarray": "^1.0.0",
        "signal-exit": "^3.0.2",
        "typedarray-to-buffer": "^3.1.5"
      }
    },
    "node_modules/ws": {
      "version": "7.5.10",
      "resolved": "https://registry.npmjs.org/ws/-/ws-7.5.10.tgz",
      "integrity": "sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.3.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/xdg-basedir": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xdg-basedir/-/xdg-basedir-4.0.0.tgz",
      "integrity": "sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/y18n": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==",
      "license": "ISC"
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "license": "ISC"
    },
    "node_modules/yargs": {
      "version": "15.4.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cliui": "^6.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^4.1.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^4.2.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^18.1.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs-parser": {
      "version": "13.1.2",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-13.1.2.tgz",
      "integrity": "sha512-3lbsNRf/j+A4QuSZfDRA7HRSfWrzO0YjqTJd5kjAq37Zep1CEgaYmrH9Q3GwPiB9cHyd1Y1UwggGhJGoxipbzg==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      }
    },
    "node_modules/yargs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/yargs/node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/yargs/node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/yargs-parser": {
      "version": "18.1.3",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
      "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "buffer-crc32": "~0.2.3",
        "fd-slicer": "~1.1.0"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/zod": {
      "version": "4.1.5",
      "resolved": "https://registry.npmjs.org/zod/-/zod-4.1.5.tgz",
      "integrity": "sha512-rcUUZqlLJgBC33IT3PNMgsCq6TzLQEG/Ei/KTCU0PedSWRMAXoOUN+4t/0H+Q8bdnLPdqUYnvboJT0bn/229qg==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/colinhacks"
      }
    },
    "node_modules/zustand": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/zustand/-/zustand-5.0.8.tgz",
      "integrity": "sha512-gyPKpIaxY9XcO2vSMrLbiER7QMAMGOQZVRdJ6Zi782jkbzZygq5GI9nG8g+sMgitRtndwaBSl7uiqC49o1SSiw==",
      "license": "MIT",
      "engines": {
        "node": ">=12.20.0"
      },
      "peerDependencies": {
        "@types/react": ">=18.0.0",
        "immer": ">=9.0.6",
        "react": ">=18.0.0",
        "use-sync-external-store": ">=1.2.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "immer": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "use-sync-external-store": {
          "optional": true
        }
      }
    }
  }
}



üìÑ package.json

============================================================
FILE: package.json
============================================================
{
  "name": "insanyck-luxury",
  "version": "0.1.0",
  "private": true,
  "engines": {
    "node": ">=18.18.0"
  },
  "scripts": {
    "dev": "next dev",
    "dev:webpack": "next dev",
    "build": "next build",
    "start": "next start -p 3000",
    "lint": "next lint",
    "typecheck": "tsc --noEmit",
    "lhci:ci": "lhci autorun",
    "clean": "rimraf .next || rd /s /q .next 2>nul || true",
    "prepare": "husky",
    "postinstall": "prisma generate",
    "db:seed": "tsx prisma/seed.ts",
    "changeset": "changeset",
    "version-packages": "changeset version",
    "release-notes": "changeset status --verbose",
    "test:e2e": "playwright test -c playwright.config.ts",
    "test:e2e:ci": "playwright test -c playwright.config.ts --reporter=list,html",
    "test:e2e:update": "playwright test -c playwright.config.ts --update-snapshots",
    "test:a11y": "playwright test -c playwright.a11y.config.ts",
    "test:all": "npm run test:e2e && npm run test:a11y"
  },
  "dependencies": {
    "@ducanh2912/next-pwa": "^10.2.9",
    "@hookform/resolvers": "^5.2.1",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@prisma/client": "^6.13.0",
    "@react-three/drei": "9.112.0",
    "@react-three/fiber": "^9.3.0",
    "@react-three/xr": "^6.6.20",
    "@stripe/react-stripe-js": "^3.9.0",
    "@stripe/stripe-js": "^7.8.0",
    "@tanstack/react-virtual": "^3.13.12",
    "@tensorflow/tfjs": "^4.22.0",
    "@tensorflow/tfjs-vis": "^1.1.0",
    "@upstash/redis": "^1.35.3",
    "bcrypt": "^6.0.0",
    "framer-motion": "^12.23.12",
    "i18next": "^25.3.4",
    "i18next-browser-languagedetector": "^8.2.0",
    "idb-keyval": "^6.2.2",
    "lucide-react": "^0.539.0",
    "micro": "^10.0.1",
    "mongodb": "^6.18.0",
    "mongoose": "^8.17.0",
    "next": "^15.4.5",
    "next-auth": "^4.24.11",
    "next-i18next": "^15.4.2",
    "next-seo": "^6.8.0",
    "pino": "^9.7.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-hook-form": "^7.62.0",
    "react-i18next": "^15.6.1",
    "react-toastify": "^11.0.5",
    "react-virtuoso": "^4.13.0",
    "react-window": "^1.8.11",
    "stripe": "^18.4.0",
    "swr": "^2.3.4",
    "three": "^0.179.1",
    "workbox-window": "^7.3.0",
    "zod": "^4.0.17",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@lhci/cli": "^0.14.0",
    "@next/bundle-analyzer": "^15.4.6",
    "@playwright/test": "^1.55.0",
    "@react-email/components": "^0.5.3",
    "@tailwindcss/postcss": "^4",
    "@types/micro": "^7.3.7",
    "@types/node": "^20",
    "@types/pino": "^7.0.4",
    "@types/react": "^19.1.9",
    "@types/react-dom": "^19.1.7",
    "@types/react-window": "^1.8.8",
    "eslint": "9.34.0",
    "eslint-config-next": "15.5.2",
    "playwright": "^1.55.0",
    "prisma": "^6.13.0",
    "sharp": "^0.34.3",
    "tailwindcss": "^4",
    "tsx": "^4.20.4",
    "typescript": "5.5.4"
  }
}



üìÑ playwright.a11y.config.ts

============================================================
FILE: playwright.a11y.config.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Playwright A11y config
import { defineConfig, devices } from '@playwright/test';

const baseURL = process.env.BASE_URL ?? "http://localhost:3001";

export default defineConfig({
  testDir: './tests/a11y',
  timeout: 30 * 1000,

  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî A11y com DOM est√°vel (timeout estendido)
  expect: { timeout: 10000 },

  fullyParallel: true,
  forbidOnly: !!process.env.CI,
  retries: process.env.CI ? 2 : 0,
  workers: process.env.CI ? 1 : undefined,
  reporter: process.env.CI
    ? [['list'], ['html', { outputFolder: 'playwright-report-a11y' }]]
    : 'list',

  use: {
    baseURL,
    locale: 'pt-BR',
    viewport: { width: 1366, height: 900 },
    trace: 'retain-on-failure',
    video: 'off',
    screenshot: 'only-on-failure',
    actionTimeout: 15 * 1000,
  },

  projects: [
    { name: 'chromium', use: { ...devices['Desktop Chrome'] } },
  ],

  webServer: {
    command: 'npm run build && npm start -- -p 3001',
    port: 3001,
    reuseExistingServer: true,
  },

  outputDir: 'test-results-a11y/',
});


üìÑ playwright.config.ts

============================================================
FILE: playwright.config.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Playwright E2E/Visual config final
import { defineConfig, devices } from '@playwright/test';

const baseURL = process.env.BASE_URL ?? "http://localhost:3001";

export default defineConfig({
  testDir: './tests/e2e',
  timeout: 30 * 1000,

  expect: {
    timeout: 5000,
    toHaveScreenshot: {
      // 0,3% de toler√¢ncia visual
      threshold: 0.003,
      maxDiffPixels: 1000,
    },
  },

  fullyParallel: true,
  forbidOnly: !!process.env.CI,
  retries: process.env.CI ? 2 : 0,
  workers: process.env.CI ? 1 : undefined,
  reporter: process.env.CI
    ? [['list'], ['html', { outputFolder: 'playwright-report' }]]
    : 'list',

  use: {
    baseURL,
    locale: 'pt-BR',
    viewport: { width: 1366, height: 900 },
    trace: 'retain-on-failure',
    video: 'retain-on-failure',
    screenshot: 'only-on-failure',
    actionTimeout: 15 * 1000,
  },

  projects: [
    { name: 'chromium', use: { ...devices['Desktop Chrome'] } },
  ],

  webServer: process.env.CI ? undefined : {
    command: 'npm run dev -- -p 3001',
    port: 3001,
    reuseExistingServer: !process.env.CI,
  },

  outputDir: 'test-results/',
});


üìÑ playwright.pwa.config.ts

============================================================
FILE: playwright.pwa.config.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Playwright PWA config tempor√°rio
import { defineConfig, devices } from '@playwright/test';

const baseURL = process.env.BASE_URL ?? "http://localhost:3001";

export default defineConfig({
  testDir: './tests/pwa',
  timeout: 30 * 1000,

  expect: {
    timeout: 5000,
  },

  fullyParallel: true,
  forbidOnly: !!process.env.CI,
  retries: process.env.CI ? 2 : 0,
  workers: process.env.CI ? 1 : undefined,
  reporter: process.env.CI
    ? [['list'], ['html', { outputFolder: 'playwright-report' }]]
    : 'list',

  use: {
    baseURL,
    locale: 'pt-BR',
    viewport: { width: 1366, height: 900 },
    trace: 'retain-on-failure',
    video: 'retain-on-failure',
    screenshot: 'only-on-failure',
  },

  projects: [
    {
      name: 'chromium',
      use: { ...devices['Desktop Chrome'] },
    },
  ],
});


üìÑ postcss.config.mjs

============================================================
FILE: postcss.config.mjs
============================================================
// postcss.config.mjs
/** @type {import('postcss-load-config').Config} */
export default {
  plugins: {
    "@tailwindcss/postcss": {},
  },
};



üìÑ prepare-analysis.js

============================================================
FILE: prepare-analysis.js
============================================================
const fs = require('fs');
const path = require('path');

const extensions = ['.tsx', '.ts', '.jsx', '.js', '.css', '.scss', '.json', '.md', '.env', '.mjs'];
const ignoreDirs = ['node_modules', '.git', '.next', 'dist', 'build', 'out'];
const output = [];

function readDirectory(dirPath, level = 0) {
    const items = fs.readdirSync(dirPath);
    
    items.forEach(item => {
        const fullPath = path.join(dirPath, item);
        const stat = fs.statSync(fullPath);
        
        if (stat.isDirectory()) {
            if (!ignoreDirs.includes(item) && !item.startsWith('.')) {
                output.push(`${'  '.repeat(level)}üìÅ ${item}/`);
                readDirectory(fullPath, level + 1);
            }
        } else if (extensions.some(ext => item.endsWith(ext))) {
            output.push(`${'  '.repeat(level)}üìÑ ${item}`);
            
            // Adiciona o conte√∫do do arquivo
            output.push('\n' + '='.repeat(60));
            output.push(`FILE: ${fullPath}`);
            output.push('='.repeat(60));
            try {
                const content = fs.readFileSync(fullPath, 'utf8');
                output.push(content);
            } catch (err) {
                output.push(`[Erro ao ler arquivo: ${err.message}]`);
            }
            output.push('\n');
        }
    });
}

console.log('üîç Analisando estrutura do projeto INSANYCK...\n');
output.push('# ESTRUTURA DO PROJETO INSANYCK\n');
readDirectory('./');

// Salva tudo em um arquivo
fs.writeFileSync('analise_insanyck.txt', output.join('\n'));
console.log('‚úÖ Arquivo "analise_insanyck.txt" criado com sucesso!');
console.log('üì§ Agora envie este arquivo para o Claude fazer a an√°lise completa.');


üìÅ prisma/
  üìÅ migrations/
    üìÅ 20250808022344_init/
    üìÅ 20250821230309_step10_catalog_variants_inventory/
  üìÑ seed.ts

============================================================
FILE: prisma\seed.ts
============================================================
// INSANYCK STEP 10 ‚Äî Seed leve para cat√°logo
// prisma/seed.ts
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± INSANYCK STEP 10 ‚Äî Seeding catalog...');

  // 1. Criar op√ß√µes base
  const sizeOption = await prisma.option.upsert({
    where: { slug: 'size' },
    update: {},
    create: {
      name: 'Tamanho',
      slug: 'size',
      type: 'size',
      values: {
        create: [
          { name: 'P', slug: 'p', value: 'P', order: 1 },
          { name: 'M', slug: 'm', value: 'M', order: 2 },
          { name: 'G', slug: 'g', value: 'G', order: 3 },
          { name: 'EG', slug: 'eg', value: 'EG', order: 4 },
        ],
      },
    },
    include: { values: true },
  });

  const colorOption = await prisma.option.upsert({
    where: { slug: 'color' },
    update: {},
    create: {
      name: 'Cor',
      slug: 'color',
      type: 'color',
      values: {
        create: [
          { name: 'Preto', slug: 'preto', value: '#000000', order: 1 },
          { name: 'Branco', slug: 'branco', value: '#FFFFFF', order: 2 },
          { name: 'Vermelho', slug: 'vermelho', value: '#FF0000', order: 3 },
        ],
      },
    },
    include: { values: true },
  });

  // 2. Criar categoria
  const category = await prisma.category.upsert({
    where: { slug: 'camisetas' },
    update: {},
    create: {
      name: 'Camisetas',
      slug: 'camisetas',
      description: 'Camisetas INSANYCK premium',
    },
  });

  // 3. Criar produtos com variantes
  const products = [
    {
      title: 'Oversized Classic',
      slug: 'oversized-classic',
      description: 'Camiseta oversized premium INSANYCK',
      images: [
        { url: '/products/oversized-classic/front.webp', alt: 'Frente', order: 1 },
        { url: '/products/oversized-classic/back.webp', alt: 'Costas', order: 2 },
      ],
      variants: [
        { size: 'P', color: 'Preto', price: 19900 },
        { size: 'M', color: 'Preto', price: 19900 },
        { size: 'G', color: 'Preto', price: 19900 },
      ],
    },
    {
      title: 'Essential Fit',
      slug: 'essential-fit',
      description: 'Camiseta essential com corte perfeito',
      images: [
        { url: '/products/essential-fit/front.webp', alt: 'Frente', order: 1 },
      ],
      variants: [
        { size: 'P', color: 'Branco', price: 17900 },
        { size: 'M', color: 'Branco', price: 17900 },
        { size: 'M', color: 'Preto', price: 17900 },
      ],
    },
    {
      title: 'Street Premium',
      slug: 'street-premium',
      description: 'Linha street com acabamento premium',
      images: [
        { url: '/products/street-premium/front.webp', alt: 'Frente', order: 1 },
      ],
      variants: [
        { size: 'P', color: 'Vermelho', price: 22900 },
        { size: 'M', color: 'Vermelho', price: 22900 },
        { size: 'G', color: 'Vermelho', price: 22900 },
        { size: 'EG', color: 'Vermelho', price: 22900 },
      ],
    },
  ];

  for (const productData of products) {
    const product = await prisma.product.upsert({
      where: { slug: productData.slug },
      update: {},
      create: {
        title: productData.title,
        slug: productData.slug,
        description: productData.description,
        status: 'active',
        isFeatured: true,
        categoryId: category.id,
        images: {
          create: productData.images,
        },
      },
    });

    // Criar variantes para cada produto
    for (const variantData of productData.variants) {
      const sizeValue = sizeOption.values.find(v => v.value === variantData.size);
      const colorValue = colorOption.values.find(v => v.name === variantData.color);
      
      if (!sizeValue || !colorValue) continue;

      const sku = `${productData.slug.toUpperCase()}-${variantData.size}-${colorValue.slug.toUpperCase()}`;
      
      const variant = await prisma.variant.upsert({
        where: { sku },
        update: {},
        create: {
          sku,
          title: `${variantData.size}/${colorValue.name}`,
          productId: product.id,
          status: 'active',
          options: {
            create: [
              { optionValueId: sizeValue.id },
              { optionValueId: colorValue.id },
            ],
          },
        },
      });

      // Criar pre√ßo
      await prisma.price.upsert({
        where: { variantId: variant.id },
        update: {},
        create: {
          variantId: variant.id,
          currency: 'BRL',
          cents: variantData.price,
        },
      });

      // Criar estoque inicial
      await prisma.inventory.upsert({
        where: { variantId: variant.id },
        update: {},
        create: {
          variantId: variant.id,
          quantity: Math.floor(Math.random() * 50) + 10, // 10-60 unidades
          reserved: 0,
          trackInventory: true,
          allowBackorder: false,
        },
      });
    }

    console.log(`‚úì Produto "${productData.title}" criado com ${productData.variants.length} variantes`);
  }

  console.log('‚úÖ Seed conclu√≠do!');
}

main()
  .catch((e) => {
    console.error('‚ùå Erro no seed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });


üìÅ public/
  üìÅ brand/
  üìÅ icons/
  üìÅ locales/
    üìÅ en/
      üìÑ account.json

============================================================
FILE: public\locales\en\account.json
============================================================
{
    "dashboard": {
      "title": "My account",
      "hello": "Hello",
      "lastOrders": "Recent orders",
      "noOrders": "You have no orders yet.",
      "viewAll": "View all",
      "quick": "Quick access"
    },
    "nav": {
      "overview": "Overview",
      "addresses": "Addresses",
      "orders": "Orders",
      "wishlist": "Favorites",
      "signout": "Sign out"
    },
    "addresses": {
      "title": "Addresses",
      "subtitle": "Manage your shipping addresses.",
      "add": "Add address",
      "empty": "You haven‚Äôt added addresses yet.",
      "default": "Default",
      "setDefault": "Make default",
      "remove": "Remove"
    },
    "orders": {
      "title": "Orders",
      "empty": {
        "title": "Your journey starts here",
        "description": "No orders in your account yet. Discover pieces that define your unique style."
      },
      "benefits": {
        "shipping": "Express delivery",
        "quality": "Premium quality",
        "service": "24/7 support"
      },
      "status": {
        "pending": "Pending",
        "processing": "Processing",
        "shipped": "Shipped",
        "delivered": "Delivered",
        "cancelled": "Cancelled"
      },
      "details": {
        "orderNumber": "Order #{{number}}",
        "orderDate": "Ordered on",
        "total": "Total",
        "items": "{{count}} item",
        "items_plural": "{{count}} items",
        "trackOrder": "Track order",
        "reorder": "Reorder"
      }
    },
    "login": {
      "title": "Sign in",
      "subtitle": "Access your INSANYCK account",
      "email": "Email",
      "password": "Password",
      "submit": "Sign in"
    },
    "signup": {
      "title": "Create account",
      "subtitle": "Join INSANYCK",
      "name": "Full name",
      "email": "Email",
      "password": "Password",
      "submit": "Create account",
      "mock": "Mock signup ‚Äî configure via NextAuth"
    }
  }
  


      üìÑ admin.json

============================================================
FILE: public\locales\en\admin.json
============================================================
{
  "dashboard": {
    "title": "Dashboard",
    "subtitle": "INSANYCK system overview",
    "stats": {
      "products": "Products",
      "categories": "Categories", 
      "orders": "Orders",
      "variants": "Variants"
    },
    "quickActions": {
      "title": "Quick Actions",
      "newProduct": "New Product",
      "manageCategories": "Manage Categories",
      "viewOrders": "View Orders"
    }
  },
  "products": {
    "title": "Products",
    "subtitle": "Manage product catalog",
    "newProduct": "New Product",
    "search": "Search products...",
    "searchButton": "Search",
    "loading": "Loading products...",
    "table": {
      "product": "Product",
      "status": "Status",
      "category": "Category",
      "variants": "Variants",
      "updated": "Updated",
      "actions": "Actions"
    },
    "actions": {
      "view": "View product",
      "edit": "Edit product",
      "delete": "Delete product"
    },
    "status": {
      "active": "Active",
      "draft": "Draft",
      "archived": "Archived"
    },
    "pagination": {
      "showing": "Showing {{count}} of {{total}} products",
      "previous": "Previous",
      "next": "Next"
    }
  },
  "variants": {
    "title": "Variants",
    "newVariant": "New Variant",
    "sku": "SKU",
    "options": "Options",
    "price": "Price",
    "inventory": "Inventory",
    "available": "{{count}} available",
    "outOfStock": "Out of stock",
    "inStock": "In stock"
  },
  "categories": {
    "title": "Categories",
    "newCategory": "New Category",
    "name": "Name",
    "slug": "Slug",
    "description": "Description",
    "parent": "Parent category",
    "products": "Products"
  },
  "forms": {
    "save": "Save",
    "cancel": "Cancel",
    "delete": "Delete",
    "create": "Create",
    "update": "Update",
    "required": "Required field",
    "loading": "Loading...",
    "saving": "Saving...",
    "deleting": "Deleting..."
  },
  "navigation": {
    "products": "Products",
    "categories": "Categories",
    "orders": "Orders",
    "reports": "Reports",
    "settings": "Settings",
    "logout": "Logout"
  }
}


      üìÑ bag.json

============================================================
FILE: public\locales\en\bag.json
============================================================
{
    "title": "Your bag",
    "description": "Review your items before checkout.",
    "items": "Items",
    "empty": "Your bag is empty.",
    "goShop": "Go to store",
    "qty": "Qty",
    "remove": "Remove",
    "subtotal": "Subtotal",
    "discount": "Discount",
    "shipping": "Shipping",
    "free": "Free",
    "total": "Total",
    "installments": "Pay in up to 6x interest-free (mock)",
    "coupon": {
      "label": "Discount coupon",
      "apply": "Apply"
    },
    "shipping.simulate": "Estimate shipping",
    "shipping.cep": "ZIP code",
    "checkoutCta": "Go to checkout",
    "continue": "Continue shopping",
    "summary": "Order summary"
  }
  


      üìÑ cart.json

============================================================
FILE: public\locales\en\cart.json
============================================================
{
    "title": "Your bag",
    "empty": "Your bag is empty.",
    "subtotal": "Subtotal",
    "checkout": "Checkout",
    "viewBag": "View bag",
    "addToCart": "Add to cart",
    "added": "Added to bag",
    "qty": "Qty",
    "remove": "Remove",
    "outOfStock": "Out of stock",
    "selectVariant": "Select options",
    "lowStock": "Only {{count}} units left",
    "inStock": "In stock"
  }
  


      üìÑ catalog.json

============================================================
FILE: public\locales\en\catalog.json
============================================================
{
  "filters": {
    "all_categories": "All Categories",
    "category": "Category",
    "size": "Size",
    "color": "Color",
    "price": "Price",
    "in_stock": "In Stock",
    "out_of_stock": "Out of Stock",
    "clear_filters": "Clear Filters",
    "apply_filters": "Apply Filters"
  },
  "sort": {
    "newest": "Newest",
    "oldest": "Oldest",
    "name": "Name A-Z",
    "name_desc": "Name Z-A",
    "price_asc": "Price: Low to High",
    "price_desc": "Price: High to Low",
    "featured": "Featured"
  },
  "product": {
    "price_from": "From {{price}}",
    "price_range": "{{min}} - {{max}}",
    "variants": "{{count}} variant",
    "variants_plural": "{{count}} variants",
    "out_of_stock": "Out of stock",
    "low_stock": "Last units",
    "featured": "Featured",
    "new": "New"
  },
  "options": {
    "size": "Size",
    "color": "Color",
    "material": "Material",
    "style": "Style",
    "select_option": "Select {{option}}",
    "unavailable": "Unavailable"
  },
  "inventory": {
    "in_stock": "In stock",
    "out_of_stock": "Out of stock",
    "low_stock": "Low stock",
    "available": "{{count}} available",
    "available_plural": "{{count}} available"
  },
  "actions": {
    "view_details": "View details",
    "select_options": "Select options",
    "quick_add": "Quick add"
  },
  "pagination": {
    "showing": "Showing {{start}}-{{end}} of {{total}} products",
    "load_more": "Load more",
    "previous": "Previous",
    "next": "Next",
    "page": "Page {{current}} of {{total}}"
  }
}


      üìÑ checkout.json

============================================================
FILE: public\locales\en\checkout.json
============================================================
{
  "title": "Checkout",
  "subtitle": "Complete your purchase safely.",
  "sections": {
    "customer": "Your details",
    "shipping": "Shipping",
    "payment": "Payment"
  },
  "fields": {
    "fullName": "Full name",
    "email": "E-mail",
    "phone": "Phone",
    "cep": "ZIP code",
    "street": "Street",
    "number": "Number",
    "complement": "Complement",
    "district": "District",
    "city": "City",
    "state": "State",
    "country": "Country"
  },
  "shipping": {
    "standard": "Standard",
    "express": "Express",
    "eta5": "5 business days",
    "eta2": "2 business days"
  },
  "payment": {
    "fake": "Demo mode: payment is simulated."
  },
  "placeOrder": "Place order",
  "processing": "Processing...",
  "error": "Could not start payment.",
  "success": {
    "title": "Order Confirmed!",
    "description": "Your order has been processed successfully",
    "message": "Your order has been processed successfully.",
    "sessionId": "Session ID:",
    "emailSent": "You will soon receive an email with order details.",
    "continueShopping": "Continue shopping",
    "viewOrders": "My orders",
    "support": "Questions? Contact us through"
  },
  "cancel": {
    "title": "Checkout Cancelled",
    "description": "The checkout process was cancelled",
    "message": "Don't worry, no charge was made.",
    "itemsSaved": "Your items remain saved in the cart.",
    "backToBag": "Back to cart",
    "continueShopping": "Continue shopping",
    "needHelp": "Need help?"
  },
  "coupon": {
    "applied10": "10% coupon applied",
    "freeShipping": "Free shipping applied"
  },
  "errors": {
    "required": "This field is required",
    "email": "Invalid email",
    "couponInvalid": "Invalid coupon",
    "couponEmpty": "Enter a coupon code"
  }
}



      üìÑ common.json

============================================================
FILE: public\locales\en\common.json
============================================================
{
  "brand": "INSANYCK",
  "cta": {
    "shopNow": "Shop collection",
    "discover": "Discover pieces",
    "exploreAll": "Explore all",
    "home": "Back to home",
    "wishlist": "View wishlist",
    "viewWishlist": "View wishlist",
    "startShopping": "Start exploring",
    "continueShoppingCart": "Continue shopping",
    "newSearch": "New search",
    "clearFilters": "Clear filters"
  },
  "empty": {
    "cart": {
      "title": "Your bag is empty",
      "description": "Discover exclusive pieces that define your unique style",
      "hint": "Free shipping nationwide"
    },
    "wishlist": {
      "title": "Your favorites await",
      "description": "Save pieces that capture your essence and return when ready to decide",
      "tip": "Tap the heart to save your favorite pieces"
    }
  },
  "loading": "Loading...",
  "error": "Something went wrong",
  "retry": "Try again",
  "close": "Close",
  "back": "Back",
  "next": "Next",
  "previous": "Previous",
  "save": "Save",
  "cancel": "Cancel",
  "confirm": "Confirm",
  "aria": {
    "collection": "INSANYCK Collection",
    "productImage": "Product image",
    "logo": "INSANYCK Logo",
    "menu": "Main menu",
    "cart": "Shopping cart"
  }
}
  


      üìÑ home.json

============================================================
FILE: public\locales\en\home.json
============================================================
{
  "manifesto": {
    "line1": "Deconstruct the ordinary.",
    "line2": "Rebuild the extraordinary."
  },
  "cta": {
    "shop": "Enter the store",
    "manifesto": "Manifest"
  },
  "scrollToExplore": "Scroll to explore",
  "aria": {
    "carousel": "Collections carousel"
  },
  "carousel": {
    "dropZero": "Drop Zero",
    "oversizedClassic": "Oversized Classic",
    "regatas": "Tank Tops",
    "acessorios": "Accessories"
  },
  "hero": {
    "title": "INSANYCK",
    "subtitle": "Essential luxury in motion"
  }
}
  


      üìÑ nav.json

============================================================
FILE: public\locales\en\nav.json
============================================================
{
    "news": "News",
    "store": "Store",
    "collection": "Collection",
    "search": "Search",
    "cart": "Cart",
    "language": "Language",
    "pt": "PT",
    "en": "EN"
  }
  


      üìÑ order.json

============================================================
FILE: public\locales\en\order.json
============================================================

// INSANYCK STEP 7
{
    "confirmed": "Order confirmed",
    "id": "Order ID",
    "viewStore": "View store",
    "trackOrder": "Track order"
  }
  


      üìÑ pdp.json

============================================================
FILE: public\locales\en\pdp.json
============================================================
{
    "subtitle": "Drop-shoulder ‚Ä¢ 100% premium cotton",
    "ctaBuy": "Buy now",
    "ctaDetails": "View details",
    "front": "Front",
    "back": "Back",
    "detail": "Details",
    "instruction": "Drag to rotate ‚Äî move the mouse",
    "backToStore": "Back to store"
  }
  


      üìÑ plp.json

============================================================
FILE: public\locales\en\plp.json
============================================================
{
    "title": "INSANYCK Store",
    "subtitle": "6 product(s) ‚Ä¢ Light glass ‚Ä¢ hairline border",
    "filters": {
      "category": "Category",
      "price": "Price",
      "sort": "Relevance"
    },
    "badge": {
      "new": "New",
      "soldout": "Sold out"
    },
    "viewDetails": "View details",
    "loadMore": "Load more",
    "empty": "No products found."
  }
  


      üìÑ product.json

============================================================
FILE: public\locales\en\product.json
============================================================
{
    "title": "Oversized Classic",
    "subtitle": "Drop-shoulder ‚Ä¢ 100% premium cotton",
    "ctaBuy": "Buy now",
    "ctaDetails": "View details",
    "drag": "Drag to rotate ‚Äî move the mouse",
    "front": "Front",
    "back": "Back",
    "detail": "Details",
    "fps": "60 FPS"
  }
  


      üìÑ search.json

============================================================
FILE: public\locales\en\search.json
============================================================
{
  "title": "Search",
  "open": "Search",
  "label": "Search products",
  "placeholder": "Search products",
  "empty": {
    "noQuery": {
      "title": "Start your search",
      "description": "Type what you're looking for or explore our categories"
    },
    "withQuery": {
      "title": "No results found",
      "description": "We couldn't find anything for",
      "suggestion": "Try more general terms or explore our collection"
    },
    "suggestions": {
      "title": "Popular terms:"
    },
    "actions": {
      "clearFilters": "Clear filters",
      "newSearch": "New search"
    }
  },
  "filters": {
    "title": "Filters",
    "clear": "Clear all",
    "apply": "Apply filters",
    "category": "Category",
    "price": "Price",
    "color": "Color",
    "size": "Size",
    "availability": "Availability"
  },
  "results": {
    "showing": "Showing {{count}} results",
    "showingFor": "Showing {{count}} results for \"{{query}}\"",
    "sortBy": "Sort by",
    "relevance": "Relevance",
    "priceAsc": "Lowest price",
    "priceDesc": "Highest price",
    "newest": "Newest"
  },
  "description": "Find the perfect INSANYCK pieces",
  "resultsFor": "Results for"
}
  


      üìÑ seo.json

============================================================
FILE: public\locales\en\seo.json
============================================================
{
  "brand": "INSANYCK",
  "home": {
    "title": "INSANYCK ‚Äî Essential luxury in motion",
    "description": "Premium pieces with precise design and magnetic presence. Discover a collection that defines contemporary luxury."
  },
  "shop": {
    "title": "INSANYCK Collection ‚Äî Exclusive Pieces",
    "description": "Explore our essential luxury collection. Unique pieces that capture the essence of contemporary design."
  },
  "product": {
    "titleSuffix": "‚Äî INSANYCK",
    "defaultDescription": "Exclusive piece from the INSANYCK collection. Precise design, premium quality, magnetic presence."
  },
  "wishlist": {
    "title": "Your Wishlist ‚Äî INSANYCK",
    "description": "Your favorite pieces from the INSANYCK collection. Save what inspires your unique style."
  },
  "cart": {
    "title": "Your Bag ‚Äî INSANYCK",
    "description": "Review your selected items and complete your purchase safely and conveniently."
  },
  "about": {
    "title": "About ‚Äî INSANYCK",
    "description": "Learn about the INSANYCK philosophy: essential luxury, precise design and magnetic presence that defines contemporary."
  },
  "faq": {
    "title": "FAQ ‚Äî INSANYCK",
    "description": "Find answers about our collection, purchasing process, delivery and care for INSANYCK pieces."
  },
  "contact": {
    "title": "Contact ‚Äî INSANYCK",
    "description": "Get in touch with us. Our team is ready to assist you on your INSANYCK style journey."
  },
  "search": {
    "title": "Search ‚Äî INSANYCK",
    "titleWithQuery": "Search for '{{query}}' ‚Äî INSANYCK",
    "description": "Find the INSANYCK pieces that define your style. Search by category, color, size or style."
  },
  "account": {
    "title": "My Account ‚Äî INSANYCK",
    "description": "Manage your orders, favorites and personal information in your INSANYCK account."
  }
}


      üìÑ ui.json

============================================================
FILE: public\locales\en\ui.json
============================================================
{
    "buttons": {
      "primary": "Confirm",
      "ghost": "View details"
    },
    "favorites": {
      "tooltip": "Favorites"
    },
    "cart": {
      "tooltip": "Cart"
    },
    "loading": "Loading‚Ä¶"
  }
  


      üìÑ wishlist.json

============================================================
FILE: public\locales\en\wishlist.json
============================================================
{
    "title": "Favorites",
    "description": "Your favorite pieces from the INSANYCK collection",
    "empty": "No items in favorites.",
    "add": "Add to favorites",
    "remove": "Remove from favorites",
    "toggle": "Toggle favorite"
  }
  


    üìÅ pt/
      üìÑ account.json

============================================================
FILE: public\locales\pt\account.json
============================================================
{
    "dashboard": {
      "title": "Minha conta",
      "hello": "Ol√°",
      "lastOrders": "√öltimos pedidos",
      "noOrders": "Voc√™ ainda n√£o tem pedidos.",
      "viewAll": "Ver todos",
      "quick": "Acessos r√°pidos"
    },
    "nav": {
      "overview": "Vis√£o geral",
      "addresses": "Endere√ßos",
      "orders": "Pedidos",
      "wishlist": "Favoritos",
      "signout": "Sair"
    },
    "addresses": {
      "title": "Endere√ßos",
      "subtitle": "Gerencie seus endere√ßos de entrega.",
      "add": "Adicionar endere√ßo",
      "empty": "Voc√™ ainda n√£o adicionou endere√ßos.",
      "default": "Padr√£o",
      "setDefault": "Tornar padr√£o",
      "remove": "Remover"
    },
    "orders": {
      "title": "Pedidos",
      "empty": {
        "title": "Sua jornada come√ßa aqui",
        "description": "Ainda n√£o h√° pedidos em sua conta. Descubra pe√ßas que definem seu estilo √∫nico."
      },
      "benefits": {
        "shipping": "Entrega expressa",
        "quality": "Qualidade premium",
        "service": "Suporte 24/7"
      },
      "status": {
        "pending": "Pendente",
        "processing": "Processando",
        "shipped": "Enviado",
        "delivered": "Entregue",
        "cancelled": "Cancelado"
      },
      "details": {
        "orderNumber": "Pedido #{{number}}",
        "orderDate": "Pedido em",
        "total": "Total",
        "items": "{{count}} item",
        "items_plural": "{{count}} itens",
        "trackOrder": "Rastrear pedido",
        "reorder": "Repetir pedido"
      }
    },
    "login": {
      "title": "Entrar",
      "subtitle": "Acesse sua conta INSANYCK",
      "email": "E-mail",
      "password": "Senha",
      "submit": "Entrar"
    },
    "signup": {
      "title": "Criar conta",
      "subtitle": "Junte-se √† INSANYCK",
      "name": "Nome completo",
      "email": "E-mail",
      "password": "Senha",
      "submit": "Criar conta",
      "mock": "Cadastro mock ‚Äî configure no NextAuth"
    }
  }
  


      üìÑ admin.json

============================================================
FILE: public\locales\pt\admin.json
============================================================
{
  "dashboard": {
    "title": "Dashboard",
    "subtitle": "Vis√£o geral do sistema INSANYCK",
    "stats": {
      "products": "Produtos",
      "categories": "Categorias", 
      "orders": "Pedidos",
      "variants": "Variantes"
    },
    "quickActions": {
      "title": "A√ß√µes R√°pidas",
      "newProduct": "Novo Produto",
      "manageCategories": "Gerenciar Categorias",
      "viewOrders": "Ver Pedidos"
    }
  },
  "products": {
    "title": "Produtos",
    "subtitle": "Gerencie o cat√°logo de produtos",
    "newProduct": "Novo Produto",
    "search": "Buscar produtos...",
    "searchButton": "Buscar",
    "loading": "Carregando produtos...",
    "table": {
      "product": "Produto",
      "status": "Status",
      "category": "Categoria",
      "variants": "Variantes",
      "updated": "Atualizado",
      "actions": "A√ß√µes"
    },
    "actions": {
      "view": "Ver produto",
      "edit": "Editar produto",
      "delete": "Deletar produto"
    },
    "status": {
      "active": "Ativo",
      "draft": "Rascunho",
      "archived": "Arquivado"
    },
    "pagination": {
      "showing": "Mostrando {{count}} de {{total}} produtos",
      "previous": "Anterior",
      "next": "Pr√≥ximo"
    }
  },
  "variants": {
    "title": "Variantes",
    "newVariant": "Nova Variante",
    "sku": "SKU",
    "options": "Op√ß√µes",
    "price": "Pre√ßo",
    "inventory": "Estoque",
    "available": "{{count}} dispon√≠vel",
    "outOfStock": "Fora de estoque",
    "inStock": "Em estoque"
  },
  "categories": {
    "title": "Categorias",
    "newCategory": "Nova Categoria",
    "name": "Nome",
    "slug": "Slug",
    "description": "Descri√ß√£o",
    "parent": "Categoria pai",
    "products": "Produtos"
  },
  "forms": {
    "save": "Salvar",
    "cancel": "Cancelar",
    "delete": "Deletar",
    "create": "Criar",
    "update": "Atualizar",
    "required": "Campo obrigat√≥rio",
    "loading": "Carregando...",
    "saving": "Salvando...",
    "deleting": "Deletando..."
  },
  "navigation": {
    "products": "Produtos",
    "categories": "Categorias",
    "orders": "Pedidos",
    "reports": "Relat√≥rios",
    "settings": "Configura√ß√µes",
    "logout": "Sair"
  }
}


      üìÑ bag.json

============================================================
FILE: public\locales\pt\bag.json
============================================================
{
    "title": "Sua sacola",
    "description": "Revise seus itens antes do checkout.",
    "items": "Itens",
    "empty": "Sua sacola est√° vazia.",
    "goShop": "Ir para a loja",
    "qty": "Qtd",
    "remove": "Remover",
    "subtotal": "Subtotal",
    "discount": "Desconto",
    "shipping": "Frete",
    "free": "Gr√°tis",
    "total": "Total",
    "installments": "Parcele em at√© 6x sem juros (mock)",
    "coupon": {
      "label": "Cupom de desconto",
      "apply": "Aplicar"
    },
    "shipping.simulate": "Simular frete",
    "shipping.cep": "CEP",
    "checkoutCta": "Ir para checkout",
    "continue": "Continuar comprando",
    "summary": "Resumo do pedido"
  }
  


      üìÑ cart.json

============================================================
FILE: public\locales\pt\cart.json
============================================================
{
    "title": "Sua sacola",
    "empty": "Sua sacola est√° vazia.",
    "subtotal": "Subtotal",
    "checkout": "Finalizar compra",
    "viewBag": "Ver sacola",
    "addToCart": "Adicionar ao carrinho",
    "added": "Adicionado √† sacola",
    "qty": "Qtd",
    "remove": "Remover",
    "outOfStock": "Fora de estoque",
    "selectVariant": "Selecione as op√ß√µes",
    "lowStock": "√öltimas {{count}} unidades",
    "inStock": "Em estoque"
  }
  


      üìÑ catalog.json

============================================================
FILE: public\locales\pt\catalog.json
============================================================
{
  "filters": {
    "all_categories": "Todas Categorias",
    "category": "Categoria",
    "size": "Tamanho",
    "color": "Cor",
    "price": "Pre√ßo",
    "in_stock": "Em Estoque",
    "out_of_stock": "Fora de Estoque",
    "clear_filters": "Limpar Filtros",
    "apply_filters": "Aplicar Filtros"
  },
  "sort": {
    "newest": "Mais Recentes",
    "oldest": "Mais Antigos",
    "name": "Nome A-Z",
    "name_desc": "Nome Z-A",
    "price_asc": "Menor Pre√ßo",
    "price_desc": "Maior Pre√ßo",
    "featured": "Destaques"
  },
  "product": {
    "price_from": "A partir de {{price}}",
    "price_range": "{{min}} - {{max}}",
    "variants": "{{count}} variante",
    "variants_plural": "{{count}} variantes",
    "out_of_stock": "Fora de estoque",
    "low_stock": "√öltimas unidades",
    "featured": "Destaque",
    "new": "Novo"
  },
  "options": {
    "size": "Tamanho",
    "color": "Cor",
    "material": "Material",
    "style": "Estilo",
    "select_option": "Selecione {{option}}",
    "unavailable": "Indispon√≠vel"
  },
  "inventory": {
    "in_stock": "Em estoque",
    "out_of_stock": "Fora de estoque",
    "low_stock": "Poucas unidades",
    "available": "{{count}} dispon√≠vel",
    "available_plural": "{{count}} dispon√≠veis"
  },
  "actions": {
    "view_details": "Ver detalhes",
    "select_options": "Selecionar op√ß√µes",
    "quick_add": "Adicionar rapidamente"
  },
  "pagination": {
    "showing": "Mostrando {{start}}-{{end}} de {{total}} produtos",
    "load_more": "Carregar mais",
    "previous": "Anterior",
    "next": "Pr√≥xima",
    "page": "P√°gina {{current}} de {{total}}"
  }
}


      üìÑ checkout.json

============================================================
FILE: public\locales\pt\checkout.json
============================================================
{
  "title": "Checkout",
  "subtitle": "Finalize sua compra com seguran√ßa.",
  "sections": {
    "customer": "Seus dados",
    "shipping": "Entrega",
    "payment": "Pagamento"
  },
  "fields": {
    "fullName": "Nome completo",
    "email": "E-mail",
    "phone": "Telefone",
    "cep": "CEP",
    "street": "Rua",
    "number": "N√∫mero",
    "complement": "Complemento",
    "district": "Bairro",
    "city": "Cidade",
    "state": "UF",
    "country": "Pa√≠s"
  },
  "shipping": {
    "standard": "Padr√£o",
    "express": "Expresso",
    "eta5": "5 dias √∫teis",
    "eta2": "2 dias √∫teis"
  },
  "payment": {
    "fake": "Modo demonstra√ß√£o: o pagamento √© simulado."
  },
  "placeOrder": "Finalizar pedido",
  "processing": "Processando...",
  "error": "N√£o foi poss√≠vel iniciar o pagamento.",
  "success": {
    "title": "Pedido Confirmado!",
    "description": "Seu pedido foi processado com sucesso",
    "message": "Seu pedido foi processado com sucesso.",
    "sessionId": "ID da sess√£o:",
    "emailSent": "Em breve voc√™ receber√° um email com os detalhes do pedido.",
    "continueShopping": "Continuar comprando",
    "viewOrders": "Meus pedidos",
    "support": "D√∫vidas? Entre em contato conosco atrav√©s do"
  },
  "cancel": {
    "title": "Checkout Cancelado",
    "description": "O processo de checkout foi cancelado",
    "message": "N√£o se preocupe, nenhuma cobran√ßa foi realizada.",
    "itemsSaved": "Seus itens continuam salvos na sacola.",
    "backToBag": "Voltar para sacola",
    "continueShopping": "Continuar comprando",
    "needHelp": "Precisa de ajuda?"
  },
  "coupon": {
    "applied10": "Cupom de 10% aplicado",
    "freeShipping": "Frete gr√°tis aplicado"
  },
  "errors": {
    "required": "Campo obrigat√≥rio",
    "email": "E-mail inv√°lido",
    "couponInvalid": "Cupom inv√°lido",
    "couponEmpty": "Informe um cupom"
  }
}



      üìÑ common.json

============================================================
FILE: public\locales\pt\common.json
============================================================
{
  "brand": "INSANYCK",
  "cta": {
    "shopNow": "Explorar cole√ß√£o",
    "discover": "Descobrir pe√ßas",
    "exploreAll": "Explorar tudo",
    "home": "Voltar ao in√≠cio",
    "wishlist": "Ver favoritos",
    "viewWishlist": "Ver favoritos",
    "startShopping": "Come√ßar a explorar",
    "continueShoppingCart": "Continuar comprando",
    "newSearch": "Nova busca",
    "clearFilters": "Limpar filtros"
  },
  "empty": {
    "cart": {
      "title": "Sua sacola est√° vazia",
      "description": "Descubra pe√ßas exclusivas que definem seu estilo √∫nico",
      "hint": "Frete gr√°tis para todo Brasil"
    },
    "wishlist": {
      "title": "Seus favoritos aguardam",
      "description": "Salve as pe√ßas que capturam sua ess√™ncia e volte quando estiver pronto para decidir",
      "tip": "Toque no cora√ß√£o para salvar suas pe√ßas favoritas"
    }
  },
  "loading": "Carregando...",
  "error": "Algo deu errado",
  "retry": "Tentar novamente",
  "close": "Fechar",
  "back": "Voltar",
  "next": "Pr√≥ximo",
  "previous": "Anterior",
  "save": "Salvar",
  "cancel": "Cancelar",
  "confirm": "Confirmar",
  "aria": {
    "collection": "Cole√ß√£o INSANYCK",
    "productImage": "Imagem do produto",
    "logo": "Logo INSANYCK",
    "menu": "Menu principal",
    "cart": "Carrinho de compras"
  }
}
  


      üìÑ home.json

============================================================
FILE: public\locales\pt\home.json
============================================================
{
  "manifesto": {
    "line1": "Desconstruir o ordin√°rio.",
    "line2": "Reconstruir o extraordin√°rio."
  },
  "cta": {
    "shop": "Entrar na loja",
    "manifesto": "Manifesto"
  },
  "scrollToExplore": "Role para explorar",
  "aria": {
    "carousel": "Carrossel de cole√ß√µes"
  },
  "carousel": {
    "dropZero": "Drop Zero",
    "oversizedClassic": "Oversized Classic",
    "regatas": "Regatas",
    "acessorios": "Acess√≥rios"
  },
  "hero": {
    "title": "INSANYCK",
    "subtitle": "Luxo essencial em movimento"
  }
}
  


      üìÑ nav.json

============================================================
FILE: public\locales\pt\nav.json
============================================================
{
    "news": "Novidades",
    "store": "Loja",
    "collection": "Cole√ß√£o",
    "search": "Pesquisar",
    "cart": "Carrinho",
    "language": "Idioma",
    "pt": "PT",
    "en": "EN"
  }
  


      üìÑ order.json

============================================================
FILE: public\locales\pt\order.json
============================================================
// INSANYCK STEP 7
{
    "confirmed": "Pedido confirmado",
    "id": "ID do pedido",
    "viewStore": "Ver loja",
    "trackOrder": "Acompanhar pedido"
  }
  


      üìÑ pdp.json

============================================================
FILE: public\locales\pt\pdp.json
============================================================
{
    "subtitle": "Drop-shoulder ‚Ä¢ 100% algod√£o premium",
    "ctaBuy": "Comprar agora",
    "ctaDetails": "Ver detalhes",
    "front": "Frente",
    "back": "Verso",
    "detail": "Detalhes",
    "instruction": "Arraste para girar ‚Äî passe o mouse",
    "backToStore": "Voltar √† loja"
  }
  


      üìÑ plp.json

============================================================
FILE: public\locales\pt\plp.json
============================================================
{
    "title": "Loja INSANYCK",
    "subtitle": "6 produto(s) ‚Ä¢ Vidro leve ‚Ä¢ borda hairline",
    "filters": {
      "category": "Categoria",
      "price": "Pre√ßo",
      "sort": "Relev√¢ncia"
    },
    "badge": {
      "new": "Novo",
      "soldout": "Esgotado"
    },
    "viewDetails": "Ver detalhes",
    "loadMore": "Carregar mais",
    "empty": "Nenhum produto encontrado."
  }
  


      üìÑ product.json

============================================================
FILE: public\locales\pt\product.json
============================================================
{
    "title": "Oversized Classic",
    "subtitle": "Drop-shoulder ‚Ä¢ 100% algod√£o premium",
    "ctaBuy": "Comprar agora",
    "ctaDetails": "Ver detalhes",
    "drag": "Arraste para girar ‚Äî passe o mouse",
    "front": "Frente",
    "back": "Verso",
    "detail": "Detalhes",
    "fps": "60 FPS"
  }
  


      üìÑ search.json

============================================================
FILE: public\locales\pt\search.json
============================================================
{
  "title": "Buscar",
  "open": "Buscar",
  "label": "Buscar produtos",
  "placeholder": "Busque por produtos",
  "empty": {
    "noQuery": {
      "title": "Comece sua busca",
      "description": "Digite o que procura ou explore nossas categorias"
    },
    "withQuery": {
      "title": "Nenhum resultado encontrado",
      "description": "N√£o encontramos nada para",
      "suggestion": "Tente termos mais gerais ou explore nossa cole√ß√£o"
    },
    "suggestions": {
      "title": "Termos populares:"
    },
    "actions": {
      "clearFilters": "Limpar filtros",
      "newSearch": "Nova busca"
    }
  },
  "filters": {
    "title": "Filtros",
    "clear": "Limpar todos",
    "apply": "Aplicar filtros",
    "category": "Categoria",
    "price": "Pre√ßo",
    "color": "Cor",
    "size": "Tamanho",
    "availability": "Disponibilidade"
  },
  "results": {
    "showing": "Mostrando {{count}} resultados",
    "showingFor": "Mostrando {{count}} resultados para \"{{query}}\"",
    "sortBy": "Ordenar por",
    "relevance": "Relev√¢ncia",
    "priceAsc": "Menor pre√ßo",
    "priceDesc": "Maior pre√ßo",
    "newest": "Mais recentes"
  },
  "description": "Encontre as pe√ßas INSANYCK perfeitas",
  "resultsFor": "Resultados para"
}
  


      üìÑ seo.json

============================================================
FILE: public\locales\pt\seo.json
============================================================
{
  "brand": "INSANYCK",
  "home": {
    "title": "INSANYCK ‚Äî Luxo essencial em movimento",
    "description": "Pe√ßas premium com design preciso e presen√ßa magn√©tica. Descubra uma cole√ß√£o que define o luxo contempor√¢neo."
  },
  "shop": {
    "title": "Cole√ß√£o INSANYCK ‚Äî Pe√ßas Exclusivas",
    "description": "Explore nossa cole√ß√£o de luxo essencial. Pe√ßas √∫nicas que capturam a ess√™ncia do design contempor√¢neo."
  },
  "product": {
    "titleSuffix": "‚Äî INSANYCK",
    "defaultDescription": "Pe√ßa exclusiva da cole√ß√£o INSANYCK. Design preciso, qualidade premium, presen√ßa magn√©tica."
  },
  "wishlist": {
    "title": "Seus Favoritos ‚Äî INSANYCK",
    "description": "Suas pe√ßas favoritas da cole√ß√£o INSANYCK. Salve o que mais inspira seu estilo √∫nico."
  },
  "cart": {
    "title": "Sua Sacola ‚Äî INSANYCK",
    "description": "Revise seus itens selecionados e finalize sua compra com seguran√ßa e praticidade."
  },
  "about": {
    "title": "Sobre ‚Äî INSANYCK",
    "description": "Conhe√ßa a filosofia INSANYCK: luxo essencial, design preciso e presen√ßa magn√©tica que define o contempor√¢neo."
  },
  "faq": {
    "title": "Perguntas Frequentes ‚Äî INSANYCK",
    "description": "Encontre respostas sobre nossa cole√ß√£o, processos de compra, entrega e cuidados com as pe√ßas INSANYCK."
  },
  "contact": {
    "title": "Contato ‚Äî INSANYCK",
    "description": "Entre em contato conosco. Nossa equipe est√° pronta para auxiliar em sua jornada de estilo INSANYCK."
  },
  "search": {
    "title": "Busca ‚Äî INSANYCK",
    "titleWithQuery": "Busca por '{{query}}' ‚Äî INSANYCK",
    "description": "Encontre as pe√ßas INSANYCK que definem seu estilo. Busque por categoria, cor, tamanho ou estilo."
  },
  "account": {
    "title": "Minha Conta ‚Äî INSANYCK",
    "description": "Gerencie seus pedidos, favoritos e informa√ß√µes pessoais em sua conta INSANYCK."
  }
}


      üìÑ ui.json

============================================================
FILE: public\locales\pt\ui.json
============================================================
{
    "buttons": {
      "primary": "Confirmar",
      "ghost": "Ver detalhes"
    },
    "favorites": {
      "tooltip": "Favoritos"
    },
    "cart": {
      "tooltip": "Carrinho"
    },
    "loading": "Carregando‚Ä¶"
  }
  


      üìÑ wishlist.json

============================================================
FILE: public\locales\pt\wishlist.json
============================================================
{
    "title": "Favoritos",
    "description": "Suas pe√ßas favoritas da cole√ß√£o INSANYCK",
    "empty": "Nenhum item nos favoritos.",
    "add": "Adicionar aos favoritos",
    "remove": "Remover dos favoritos",
    "toggle": "Favoritar"
  }
  


  üìÑ manifest.json

============================================================
FILE: public\manifest.json
============================================================
{
  "name": "INSANYCK",
  "short_name": "INSANYCK",
  "description": "Luxury streetwear fashion - INSANYCK premium collection",
  "start_url": "/?source=pwa",
  "scope": "/",
  "display": "standalone",
  "orientation": "portrait-primary",
  "theme_color": "#000000",
  "background_color": "#000000",
  "categories": ["shopping", "lifestyle", "business"],
  "lang": "pt-BR",
  "icons": [
    { "src": "/icons/icon-192.png", "sizes": "192x192", "type": "image/png" },
    { "src": "/icons/icon-512.png", "sizes": "512x512", "type": "image/png" },
    { "src": "/icons/maskable-512.png", "sizes": "512x512", "type": "image/png", "purpose": "maskable any" }
  ],
  "screenshots": [
    { "src": "/products/oversized-classic/front.webp", "sizes": "1200x800", "type": "image/webp", "form_factor": "wide" }
  ],
  "shortcuts": [
    {
      "name": "Loja",
      "short_name": "Loja",
      "description": "Explorar cole√ß√£o INSANYCK",
      "url": "/catalog?source=pwa_shortcut",
      "icons": [{ "src": "/icons/icon-192.png", "sizes": "192x192" }]
    },
    {
      "name": "Favoritos",
      "short_name": "Favoritos",
      "description": "Meus produtos favoritos",
      "url": "/favoritos?source=pwa_shortcut",
      "icons": [{ "src": "/icons/icon-192.png", "sizes": "192x192" }]
    },
    {
      "name": "Sacola",
      "short_name": "Sacola",
      "description": "Minha sacola de compras",
      "url": "/sacola?source=pwa_shortcut",
      "icons": [{ "src": "/icons/icon-192.png", "sizes": "192x192" }]
    },
    {
      "name": "Pedidos",
      "short_name": "Pedidos",
      "description": "Meus pedidos",
      "url": "/account/orders?source=pwa_shortcut",
      "icons": [{ "src": "/icons/icon-192.png", "sizes": "192x192" }]
    }
  ]
}



  üìÅ products/
    üìÅ oversized-classic/
    üìÅ placeholder/
  üìÑ sw.js

============================================================
FILE: public\sw.js
============================================================
if(!self.define){let e,c={};const s=(s,a)=>(s=new URL(s+".js",a).href,c[s]||new Promise(c=>{if("document"in self){const e=document.createElement("script");e.src=s,e.onload=c,document.head.appendChild(e)}else e=s,importScripts(s),c()}).then(()=>{let e=c[s];if(!e)throw new Error(`Module ${s} didn‚Äôt register its module`);return e}));self.define=(a,n)=>{const i=e||("document"in self?document.currentScript.src:"")||location.href;if(c[i])return;let r={};const t=e=>s(e,i),o={module:{uri:i},exports:r,require:t};c[i]=Promise.all(a.map(e=>o[e]||t(e))).then(e=>(n(...e),r))}}define(["./workbox-8e54c003"],function(e){"use strict";importScripts(),self.skipWaiting(),e.clientsClaim(),e.precacheAndRoute([{url:"/_next/dynamic-css-manifest.json",revision:"d751713988987e9331980363e24189ce"},{url:"/_next/static/ZT_SKRFyWPoXKmLAny_2B/_buildManifest.js",revision:"c43c1b95ee7b18eb2874e481d8077963"},{url:"/_next/static/ZT_SKRFyWPoXKmLAny_2B/_ssgManifest.js",revision:"b6652df95db52feb4daf4eca35380933"},{url:"/_next/static/chunks/1070.df6de7facc69f390.js",revision:"df6de7facc69f390"},{url:"/_next/static/chunks/1806.7d7abb9d5eea3cb9.js",revision:"7d7abb9d5eea3cb9"},{url:"/_next/static/chunks/3197-93004bcf531468b5.js",revision:"93004bcf531468b5"},{url:"/_next/static/chunks/3840.0c92e2d51d5c53ec.js",revision:"0c92e2d51d5c53ec"},{url:"/_next/static/chunks/4043-1a7c3294fd7732d1.js",revision:"1a7c3294fd7732d1"},{url:"/_next/static/chunks/4179.a6b4cd48f451db84.js",revision:"a6b4cd48f451db84"},{url:"/_next/static/chunks/4504-faf9035b61101948.js",revision:"faf9035b61101948"},{url:"/_next/static/chunks/4559568c.78d0d800a1ddd2a2.js",revision:"78d0d800a1ddd2a2"},{url:"/_next/static/chunks/4588.92b10666219ae057.js",revision:"92b10666219ae057"},{url:"/_next/static/chunks/4601.091a44d72c83e48f.js",revision:"091a44d72c83e48f"},{url:"/_next/static/chunks/5414-4c1d6f8c3055675e.js",revision:"4c1d6f8c3055675e"},{url:"/_next/static/chunks/5476.73c819a41b16e642.js",revision:"73c819a41b16e642"},{url:"/_next/static/chunks/6427.217f1bf5db8c00b9.js",revision:"217f1bf5db8c00b9"},{url:"/_next/static/chunks/6922-49d321a14795a521.js",revision:"49d321a14795a521"},{url:"/_next/static/chunks/6982.ddfabdebebb2a9f8.js",revision:"ddfabdebebb2a9f8"},{url:"/_next/static/chunks/69b51223.6cc3e8c0c942940f.js",revision:"6cc3e8c0c942940f"},{url:"/_next/static/chunks/7113.682de7a15adf934a.js",revision:"682de7a15adf934a"},{url:"/_next/static/chunks/7494.11fd119587c7bf7c.js",revision:"11fd119587c7bf7c"},{url:"/_next/static/chunks/8123.08ac464f57b86c2b.js",revision:"08ac464f57b86c2b"},{url:"/_next/static/chunks/8230-b35cf87207ca9527.js",revision:"b35cf87207ca9527"},{url:"/_next/static/chunks/8689.7e5d18d4e1e26977.js",revision:"7e5d18d4e1e26977"},{url:"/_next/static/chunks/8889.2d09bf2fb32f7acf.js",revision:"2d09bf2fb32f7acf"},{url:"/_next/static/chunks/9115.580d27a05f09e7e6.js",revision:"580d27a05f09e7e6"},{url:"/_next/static/chunks/ccf9b928.5a87ef88b0dcdab1.js",revision:"5a87ef88b0dcdab1"},{url:"/_next/static/chunks/framework-345ac8bbae84274c.js",revision:"345ac8bbae84274c"},{url:"/_next/static/chunks/main-0460806fce7ae63c.js",revision:"0460806fce7ae63c"},{url:"/_next/static/chunks/pages/404-fb5a73560305763a.js",revision:"fb5a73560305763a"},{url:"/_next/static/chunks/pages/Products-f50404eed53a2d44.js",revision:"f50404eed53a2d44"},{url:"/_next/static/chunks/pages/_app-78b3816df86a77ae.js",revision:"78b3816df86a77ae"},{url:"/_next/static/chunks/pages/_error-742c0ee90e42a5c2.js",revision:"742c0ee90e42a5c2"},{url:"/_next/static/chunks/pages/admin-946479841176d14d.js",revision:"946479841176d14d"},{url:"/_next/static/chunks/pages/admin/orders-98107acf36d300a6.js",revision:"98107acf36d300a6"},{url:"/_next/static/chunks/pages/admin/products-dac603907cd8efb7.js",revision:"dac603907cd8efb7"},{url:"/_next/static/chunks/pages/buscar-a871daefb1f293c5.js",revision:"a871daefb1f293c5"},{url:"/_next/static/chunks/pages/checkout-2c4ca78b97487768.js",revision:"2c4ca78b97487768"},{url:"/_next/static/chunks/pages/checkout/cancel-5b76259a92ebe737.js",revision:"5b76259a92ebe737"},{url:"/_next/static/chunks/pages/checkout/success-849ca0927979dd9e.js",revision:"849ca0927979dd9e"},{url:"/_next/static/chunks/pages/colecao-6c1ada32abc62f04.js",revision:"6c1ada32abc62f04"},{url:"/_next/static/chunks/pages/conta-0e3691313614cae8.js",revision:"0e3691313614cae8"},{url:"/_next/static/chunks/pages/conta/cadastro-998e9d14a20c9c12.js",revision:"998e9d14a20c9c12"},{url:"/_next/static/chunks/pages/conta/enderecos-5c65cade1d49c0df.js",revision:"5c65cade1d49c0df"},{url:"/_next/static/chunks/pages/conta/login-ec32a92f60c629a3.js",revision:"ec32a92f60c629a3"},{url:"/_next/static/chunks/pages/conta/pedidos-5faf4fcf33dda8c1.js",revision:"5faf4fcf33dda8c1"},{url:"/_next/static/chunks/pages/favoritos-1a113d66f9adef46.js",revision:"1a113d66f9adef46"},{url:"/_next/static/chunks/pages/index-e42ed6a8ad1cc7f7.js",revision:"e42ed6a8ad1cc7f7"},{url:"/_next/static/chunks/pages/login-a87a57e7770163fd.js",revision:"a87a57e7770163fd"},{url:"/_next/static/chunks/pages/loja-be1f4b2f4c8c9797.js",revision:"be1f4b2f4c8c9797"},{url:"/_next/static/chunks/pages/pedido/%5Bid%5D-8c3f0359221695a1.js",revision:"8c3f0359221695a1"},{url:"/_next/static/chunks/pages/produto-5e112c1ca762fef3.js",revision:"5e112c1ca762fef3"},{url:"/_next/static/chunks/pages/produto/%5Bslug%5D-42f0616fdd56ad05.js",revision:"42f0616fdd56ad05"},{url:"/_next/static/chunks/pages/robots.txt-fc9d3372a2d4a61a.js",revision:"fc9d3372a2d4a61a"},{url:"/_next/static/chunks/pages/sacola-ff059ba4978ee68d.js",revision:"ff059ba4978ee68d"},{url:"/_next/static/chunks/pages/sitemap.xml-b1d6abca20445ecc.js",revision:"b1d6abca20445ecc"},{url:"/_next/static/chunks/polyfills-42372ed130431b0a.js",revision:"846118c33b2c0e922d7b3a7676f81f6f"},{url:"/_next/static/chunks/webpack-175f990c6318b6dc.js",revision:"175f990c6318b6dc"},{url:"/_next/static/css/06bbc5c08e5a91be.css",revision:"06bbc5c08e5a91be"},{url:"/brand/logo-mono.svg",revision:"0bd92dee6d5113aa0c5fc5fbad53325f"},{url:"/brand/logo-outline.svg",revision:"58125aefc5363454418624c769998645"},{url:"/brand/logo.svg",revision:"f975c596f89eb35fca6f6790904f92b9"},{url:"/file.svg",revision:"d09f95206c3fa0bb9bd9fefabfd0ea71"},{url:"/globe.svg",revision:"2aaafa6a49b6563925fe440891e32717"},{url:"/icons/icon-192.png",revision:"e762906848de6d340ae97848683e3a77"},{url:"/icons/icon-512.png",revision:"759127b826a9feb7cd265171f10dfd02"},{url:"/icons/maskable-512.png",revision:"76cda4efb7c44ed5dad388ac1834073c"},{url:"/locales/en/account.json",revision:"65b725824ff6cccb37dfbcee12f66586"},{url:"/locales/en/admin.json",revision:"3a18bf287198d849a598b49aa4adb372"},{url:"/locales/en/bag.json",revision:"fa557a162591e3bfbc2b45cf850b5554"},{url:"/locales/en/cart.json",revision:"cbe7d493df3abc6082a1f0f54ffa1b52"},{url:"/locales/en/catalog.json",revision:"46aaad0e1204710bbb52d842f0c21b35"},{url:"/locales/en/checkout.json",revision:"9ce1a260a372d88ee0c7fb087e361dcb"},{url:"/locales/en/common.json",revision:"dbf307c7d7c4d1781f2f287a4cfb04af"},{url:"/locales/en/home.json",revision:"35dd8a57da82ffe2596b9da6bdd7456e"},{url:"/locales/en/nav.json",revision:"84c1c0c3f686d268d0dbcecb5ad65912"},{url:"/locales/en/order.json",revision:"dfacf4178061ffd0911b01eaf6d0b59e"},{url:"/locales/en/pdp.json",revision:"fb12844bc0aa8b154f28aa7c0e2aaf5c"},{url:"/locales/en/plp.json",revision:"db3dd6bc073caa063424dd5700e81c40"},{url:"/locales/en/product.json",revision:"fabbe0f3863b5ffafe24238e0dd34517"},{url:"/locales/en/search.json",revision:"9000a568f4ff02b13257875f1b7bdbca"},{url:"/locales/en/seo.json",revision:"8463d6e1fae32cd40c562940f12f0ed1"},{url:"/locales/en/ui.json",revision:"5ecf2fad2b2ba58983351805ad441698"},{url:"/locales/en/wishlist.json",revision:"e67eb4fcdb4cfa0c7fc2fb9fcf21d80c"},{url:"/locales/pt/account.json",revision:"75eb42627bf9a69aa4ccf2b7ab9269be"},{url:"/locales/pt/admin.json",revision:"54a9d2e1511f3510de80abffd7109db9"},{url:"/locales/pt/bag.json",revision:"6054930c3de3d7f836660cb06be19fc3"},{url:"/locales/pt/cart.json",revision:"fe8233154e948edd1ce8e0f3351d74f4"},{url:"/locales/pt/catalog.json",revision:"b031e0770dfdae5f5ddea4316e308671"},{url:"/locales/pt/checkout.json",revision:"bc21ede8fc59495565dac079c63678bb"},{url:"/locales/pt/common.json",revision:"b8823bd2648f972b18f15c2890f92c3d"},{url:"/locales/pt/home.json",revision:"aada4279fbfa22e342b96464159aa0ad"},{url:"/locales/pt/nav.json",revision:"00acba4ffb4f1d7483bbc9fea1e006a0"},{url:"/locales/pt/order.json",revision:"89cc3d3c0e75f925da5965c0903e94e6"},{url:"/locales/pt/pdp.json",revision:"375db159219b054c10b5da1912e82901"},{url:"/locales/pt/plp.json",revision:"b53611e22c684d0b758e3c1bca4df965"},{url:"/locales/pt/product.json",revision:"8ea60e50801daa50cc5f8274d348c78a"},{url:"/locales/pt/search.json",revision:"80aa0f84389e3885371c6860b05a69c0"},{url:"/locales/pt/seo.json",revision:"ae724396e544a9d105402d855e3aa680"},{url:"/locales/pt/ui.json",revision:"fe0853e87dbbed55428038c215d79522"},{url:"/locales/pt/wishlist.json",revision:"cd7870927e31aecfb6c70632d91f4fcd"},{url:"/manifest.json",revision:"7763c32fdaf8aefe04157a31ad1935a5"},{url:"/next.svg",revision:"8e061864f388b47f33a1c3780831193e"},{url:"/offline.html",revision:"38e44898b7321220d939acbaf545ade2"},{url:"/products/oversized-classic/front.webp",revision:"36c1b0f4dcaca4f036414a6570f8ae5b"},{url:"/products/placeholder/front.webp",revision:"36c1b0f4dcaca4f036414a6570f8ae5b"},{url:"/swe-worker-5c72df51bb1f6ee0.js",revision:"76fdd3369f623a3edcf74ce2200bfdd0"},{url:"/thumbs/acessorios.png",revision:"36c1b0f4dcaca4f036414a6570f8ae5b"},{url:"/thumbs/drop-zero.png",revision:"36c1b0f4dcaca4f036414a6570f8ae5b"},{url:"/thumbs/oversized-classic.png",revision:"36c1b0f4dcaca4f036414a6570f8ae5b"},{url:"/thumbs/placeholder.webp",revision:"36c1b0f4dcaca4f036414a6570f8ae5b"},{url:"/thumbs/regatas.png",revision:"36c1b0f4dcaca4f036414a6570f8ae5b"},{url:"/vercel.svg",revision:"c0af2f507b369b085b35ef4bbe3bcf1e"},{url:"/window.svg",revision:"a2760511c65806022ad20adf74370ff3"}],{ignoreURLParametersMatching:[/^utm_/,/^fbclid$/]}),e.cleanupOutdatedCaches(),e.registerRoute(new e.NavigationRoute(e.createHandlerBoundToURL("/offline.html"))),e.registerRoute("/",new e.NetworkFirst({cacheName:"start-url",plugins:[{cacheWillUpdate:function(e){var c=e.response;return _async_to_generator(function(){return _ts_generator(this,function(e){return[2,c&&"opaqueredirect"===c.type?new Response(c.body,{status:200,statusText:"OK",headers:c.headers}):c]})})()}}]}),"GET"),e.registerRoute(function(e){return"navigate"===e.request.mode},new e.NetworkFirst({cacheName:"html",networkTimeoutSeconds:3,plugins:[new e.ExpirationPlugin({maxEntries:50,maxAgeSeconds:86400})]}),"GET"),e.registerRoute(/^\/api\/auth\/?.*/i,new e.NetworkOnly,"GET"),e.registerRoute(/^\/api\/account\/?.*/i,new e.NetworkOnly,"GET"),e.registerRoute(/^\/api\/stripe\/?.*/i,new e.NetworkOnly,"GET"),e.registerRoute(/^\/api\/admin\/?.*/i,new e.NetworkOnly,"GET"),e.registerRoute(function(e){return"image"===e.request.destination},new e.CacheFirst({cacheName:"images",plugins:[new e.ExpirationPlugin({maxEntries:200,maxAgeSeconds:2592e3})]}),"GET"),e.registerRoute(function(e){return e.url.pathname.match(/\.(glb|gltf|hdr|bin|woff2?|ttf)$/)},new e.StaleWhileRevalidate({cacheName:"assets-3d-fonts",plugins:[]}),"GET"),e.registerRoute(function(e){return"GET"===e.request.method},new e.StaleWhileRevalidate({cacheName:"misc",plugins:[]}),"GET")});



  üìÑ swe-worker-5c72df51bb1f6ee0.js

============================================================
FILE: public\swe-worker-5c72df51bb1f6ee0.js
============================================================
(()=>{"use strict";self.onmessage=async e=>{switch(e.data.type){case"__START_URL_CACHE__":{let t=e.data.url,a=await fetch(t);if(!a.redirected)return(await caches.open("start-url")).put(t,a);return Promise.resolve()}case"__FRONTEND_NAV_CACHE__":{let t=e.data.url,a=await caches.open("pages");if(await a.match(t,{ignoreSearch:!0}))return;let s=await fetch(t);if(!s.ok)return;if(a.put(t,s.clone()),e.data.shouldCacheAggressively&&s.headers.get("Content-Type")?.includes("text/html"))try{let e=await s.text(),t=[],a=await caches.open("static-style-assets"),r=await caches.open("next-static-js-assets"),c=await caches.open("static-js-assets");for(let[s,r]of e.matchAll(/<link.*?href=['"](.*?)['"].*?>/g))/rel=['"]stylesheet['"]/.test(s)&&t.push(a.match(r).then(e=>e?Promise.resolve():a.add(r)));for(let[,a]of e.matchAll(/<script.*?src=['"](.*?)['"].*?>/g)){let e=/\/_next\/static.+\.js$/i.test(a)?r:c;t.push(e.match(a).then(t=>t?Promise.resolve():e.add(a)))}return await Promise.all(t)}catch{}return Promise.resolve()}default:return Promise.resolve()}}})();


  üìÅ thumbs/
  üìÑ workbox-8e54c003.js

============================================================
FILE: public\workbox-8e54c003.js
============================================================
define(["exports"],function(t){"use strict";try{self["workbox:core:7.0.0"]&&_()}catch(t){}const e=(t,...e)=>{let s=t;return e.length>0&&(s+=` :: ${JSON.stringify(e)}`),s};class s extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:7.0.0"]&&_()}catch(t){}const n=t=>t&&"object"==typeof t?t:{handle:t};class r{constructor(t,e,s="GET"){this.handler=n(e),this.match=t,this.method=s}setCatchHandler(t){this.catchHandler=n(t)}}class i extends r{constructor(t,e,s){super(({url:e})=>{const s=t.exec(e.href);if(s&&(e.origin===location.origin||0===s.index))return s.slice(1)},e,s)}}class a{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",t=>{const{request:e}=t,s=this.handleRequest({request:e,event:t});s&&t.respondWith(s)})}addCacheListener(){self.addEventListener("message",t=>{if(t.data&&"CACHE_URLS"===t.data.type){const{payload:e}=t.data,s=Promise.all(e.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const s=new Request(...e);return this.handleRequest({request:s,event:t})}));t.waitUntil(s),t.ports&&t.ports[0]&&s.then(()=>t.ports[0].postMessage(!0))}})}handleRequest({request:t,event:e}){const s=new URL(t.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:r,route:i}=this.findMatchingRoute({event:e,request:t,sameOrigin:n,url:s});let a=i&&i.handler;const o=t.method;if(!a&&this.i.has(o)&&(a=this.i.get(o)),!a)return;let c;try{c=a.handle({url:s,request:t,event:e,params:r})}catch(t){c=Promise.reject(t)}const h=i&&i.catchHandler;return c instanceof Promise&&(this.o||h)&&(c=c.catch(async n=>{if(h)try{return await h.handle({url:s,request:t,event:e,params:r})}catch(t){t instanceof Error&&(n=t)}if(this.o)return this.o.handle({url:s,request:t,event:e});throw n})),c}findMatchingRoute({url:t,sameOrigin:e,request:s,event:n}){const r=this.t.get(s.method)||[];for(const i of r){let r;const a=i.match({url:t,sameOrigin:e,request:s,event:n});if(a)return r=a,(Array.isArray(r)&&0===r.length||a.constructor===Object&&0===Object.keys(a).length||"boolean"==typeof a)&&(r=void 0),{route:i,params:r}}return{}}setDefaultHandler(t,e="GET"){this.i.set(e,n(t))}setCatchHandler(t){this.o=n(t)}registerRoute(t){this.t.has(t.method)||this.t.set(t.method,[]),this.t.get(t.method).push(t)}unregisterRoute(t){if(!this.t.has(t.method))throw new s("unregister-route-but-not-found-with-method",{method:t.method});const e=this.t.get(t.method).indexOf(t);if(!(e>-1))throw new s("unregister-route-route-not-registered");this.t.get(t.method).splice(e,1)}}let o;const c=()=>(o||(o=new a,o.addFetchListener(),o.addCacheListener()),o);function h(t,e,n){let a;if("string"==typeof t){const s=new URL(t,location.href);a=new r(({url:t})=>t.href===s.href,e,n)}else if(t instanceof RegExp)a=new i(t,e,n);else if("function"==typeof t)a=new r(t,e,n);else{if(!(t instanceof r))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=t}return c().registerRoute(a),a}try{self["workbox:strategies:7.0.0"]&&_()}catch(t){}const u={cacheWillUpdate:async({response:t})=>200===t.status||0===t.status?t:null},l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=t=>[l.prefix,t,l.suffix].filter(t=>t&&t.length>0).join("-"),w=t=>t||f(l.precache),d=t=>t||f(l.runtime);function p(t,e){const s=new URL(t);for(const t of e)s.searchParams.delete(t);return s.href}class y{constructor(){this.promise=new Promise((t,e)=>{this.resolve=t,this.reject=e})}}const m=new Set;function g(t){return new Promise(e=>setTimeout(e,t))}function R(t){return"string"==typeof t?new Request(t):t}class v{constructor(t,e){this.h={},Object.assign(this,e),this.event=e.event,this.u=t,this.l=new y,this.p=[],this.m=[...t.plugins],this.R=new Map;for(const t of this.m)this.R.set(t,{});this.event.waitUntil(this.l.promise)}async fetch(t){const{event:e}=this;let n=R(t);if("navigate"===n.mode&&e instanceof FetchEvent&&e.preloadResponse){const t=await e.preloadResponse;if(t)return t}const r=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const t of this.iterateCallbacks("requestWillFetch"))n=await t({request:n.clone(),event:e})}catch(t){if(t instanceof Error)throw new s("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const i=n.clone();try{let t;t=await fetch(n,"navigate"===n.mode?void 0:this.u.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))t=await s({event:e,request:i,response:t});return t}catch(t){throw r&&await this.runCallbacks("fetchDidFail",{error:t,event:e,originalRequest:r.clone(),request:i.clone()}),t}}async fetchAndCachePut(t){const e=await this.fetch(t),s=e.clone();return this.waitUntil(this.cachePut(t,s)),e}async cacheMatch(t){const e=R(t);let s;const{cacheName:n,matchOptions:r}=this.u,i=await this.getCacheKey(e,"read"),a=Object.assign(Object.assign({},r),{cacheName:n});s=await caches.match(i,a);for(const t of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await t({cacheName:n,matchOptions:r,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(t,e){const n=R(t);await g(0);const r=await this.getCacheKey(n,"write");if(!e)throw new s("cache-put-with-no-response",{url:(i=r.url,new URL(String(i),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var i;const a=await this.v(e);if(!a)return!1;const{cacheName:o,matchOptions:c}=this.u,h=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),l=u?await async function(t,e,s,n){const r=p(e.url,s);if(e.url===r)return t.match(e,n);const i=Object.assign(Object.assign({},n),{ignoreSearch:!0}),a=await t.keys(e,i);for(const e of a)if(r===p(e.url,s))return t.match(e,n)}(h,r.clone(),["__WB_REVISION__"],c):null;try{await h.put(r,u?a.clone():a)}catch(t){if(t instanceof Error)throw"QuotaExceededError"===t.name&&await async function(){for(const t of m)await t()}(),t}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:o,oldResponse:l,newResponse:a.clone(),request:r,event:this.event});return!0}async getCacheKey(t,e){const s=`${t.url} | ${e}`;if(!this.h[s]){let n=t;for(const t of this.iterateCallbacks("cacheKeyWillBeUsed"))n=R(await t({mode:e,request:n,event:this.event,params:this.params}));this.h[s]=n}return this.h[s]}hasCallback(t){for(const e of this.u.plugins)if(t in e)return!0;return!1}async runCallbacks(t,e){for(const s of this.iterateCallbacks(t))await s(e)}*iterateCallbacks(t){for(const e of this.u.plugins)if("function"==typeof e[t]){const s=this.R.get(e),n=n=>{const r=Object.assign(Object.assign({},n),{state:s});return e[t](r)};yield n}}waitUntil(t){return this.p.push(t),t}async doneWaiting(){let t;for(;t=this.p.shift();)await t}destroy(){this.l.resolve(null)}async v(t){let e=t,s=!1;for(const t of this.iterateCallbacks("cacheWillUpdate"))if(e=await t({request:this.request,response:e,event:this.event})||void 0,s=!0,!e)break;return s||e&&200!==e.status&&(e=void 0),e}}class b{constructor(t={}){this.cacheName=d(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}handle(t){const[e]=this.handleAll(t);return e}handleAll(t){t instanceof FetchEvent&&(t={event:t,request:t.request});const e=t.event,s="string"==typeof t.request?new Request(t.request):t.request,n="params"in t?t.params:void 0,r=new v(this,{event:e,request:s,params:n}),i=this.q(r,s,e);return[i,this.D(i,r,s,e)]}async q(t,e,n){let r;await t.runCallbacks("handlerWillStart",{event:n,request:e});try{if(r=await this.U(e,t),!r||"error"===r.type)throw new s("no-response",{url:e.url})}catch(s){if(s instanceof Error)for(const i of t.iterateCallbacks("handlerDidError"))if(r=await i({error:s,event:n,request:e}),r)break;if(!r)throw s}for(const s of t.iterateCallbacks("handlerWillRespond"))r=await s({event:n,request:e,response:r});return r}async D(t,e,s,n){let r,i;try{r=await t}catch(i){}try{await e.runCallbacks("handlerDidRespond",{event:n,request:s,response:r}),await e.doneWaiting()}catch(t){t instanceof Error&&(i=t)}if(await e.runCallbacks("handlerDidComplete",{event:n,request:s,response:r,error:i}),e.destroy(),i)throw i}}function q(t){t.then(()=>{})}function D(){return D=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var n in s)({}).hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t},D.apply(null,arguments)}let U,x;const E=new WeakMap,I=new WeakMap,L=new WeakMap,C=new WeakMap,N=new WeakMap;let k={get(t,e,s){if(t instanceof IDBTransaction){if("done"===e)return I.get(t);if("objectStoreNames"===e)return t.objectStoreNames||L.get(t);if("store"===e)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return T(t[e])},set:(t,e,s)=>(t[e]=s,!0),has:(t,e)=>t instanceof IDBTransaction&&("done"===e||"store"===e)||e in t};function O(t){return t!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(x||(x=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(P(this),e),T(E.get(this))}:function(...e){return T(t.apply(P(this),e))}:function(e,...s){const n=t.call(P(this),e,...s);return L.set(n,e.sort?e.sort():[e]),T(n)}}function B(t){return"function"==typeof t?O(t):(t instanceof IDBTransaction&&function(t){if(I.has(t))return;const e=new Promise((e,s)=>{const n=()=>{t.removeEventListener("complete",r),t.removeEventListener("error",i),t.removeEventListener("abort",i)},r=()=>{e(),n()},i=()=>{s(t.error||new DOMException("AbortError","AbortError")),n()};t.addEventListener("complete",r),t.addEventListener("error",i),t.addEventListener("abort",i)});I.set(t,e)}(t),e=t,(U||(U=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some(t=>e instanceof t)?new Proxy(t,k):t);var e}function T(t){if(t instanceof IDBRequest)return function(t){const e=new Promise((e,s)=>{const n=()=>{t.removeEventListener("success",r),t.removeEventListener("error",i)},r=()=>{e(T(t.result)),n()},i=()=>{s(t.error),n()};t.addEventListener("success",r),t.addEventListener("error",i)});return e.then(e=>{e instanceof IDBCursor&&E.set(e,t)}).catch(()=>{}),N.set(e,t),e}(t);if(C.has(t))return C.get(t);const e=B(t);return e!==t&&(C.set(t,e),N.set(e,t)),e}const P=t=>N.get(t);const M=["get","getKey","getAll","getAllKeys","count"],W=["put","add","delete","clear"],j=new Map;function S(t,e){if(!(t instanceof IDBDatabase)||e in t||"string"!=typeof e)return;if(j.get(e))return j.get(e);const s=e.replace(/FromIndex$/,""),n=e!==s,r=W.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!r&&!M.includes(s))return;const i=async function(t,...e){const i=this.transaction(t,r?"readwrite":"readonly");let a=i.store;return n&&(a=a.index(e.shift())),(await Promise.all([a[s](...e),r&&i.done]))[0]};return j.set(e,i),i}k=(t=>D({},t,{get:(e,s,n)=>S(e,s)||t.get(e,s,n),has:(e,s)=>!!S(e,s)||t.has(e,s)}))(k);try{self["workbox:expiration:7.0.0"]&&_()}catch(t){}const K="cache-entries",A=t=>{const e=new URL(t,location.href);return e.hash="",e.href};class F{constructor(t){this._=null,this.I=t}L(t){const e=t.createObjectStore(K,{keyPath:"id"});e.createIndex("cacheName","cacheName",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1})}C(t){this.L(t),this.I&&function(t,{blocked:e}={}){const s=indexedDB.deleteDatabase(t);e&&s.addEventListener("blocked",t=>e(t.oldVersion,t)),T(s).then(()=>{})}(this.I)}async setTimestamp(t,e){const s={url:t=A(t),timestamp:e,cacheName:this.I,id:this.N(t)},n=(await this.getDb()).transaction(K,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(t){const e=await this.getDb(),s=await e.get(K,this.N(t));return null==s?void 0:s.timestamp}async expireEntries(t,e){const s=await this.getDb();let n=await s.transaction(K).store.index("timestamp").openCursor(null,"prev");const r=[];let i=0;for(;n;){const s=n.value;s.cacheName===this.I&&(t&&s.timestamp<t||e&&i>=e?r.push(n.value):i++),n=await n.continue()}const a=[];for(const t of r)await s.delete(K,t.id),a.push(t.url);return a}N(t){return this.I+"|"+A(t)}async getDb(){return this._||(this._=await function(t,e,{blocked:s,upgrade:n,blocking:r,terminated:i}={}){const a=indexedDB.open(t,e),o=T(a);return n&&a.addEventListener("upgradeneeded",t=>{n(T(a.result),t.oldVersion,t.newVersion,T(a.transaction),t)}),s&&a.addEventListener("blocked",t=>s(t.oldVersion,t.newVersion,t)),o.then(t=>{i&&t.addEventListener("close",()=>i()),r&&t.addEventListener("versionchange",t=>r(t.oldVersion,t.newVersion,t))}).catch(()=>{}),o}("workbox-expiration",1,{upgrade:this.C.bind(this)})),this._}}class ${constructor(t,e={}){this.k=!1,this.O=!1,this.B=e.maxEntries,this.T=e.maxAgeSeconds,this.P=e.matchOptions,this.I=t,this.M=new F(t)}async expireEntries(){if(this.k)return void(this.O=!0);this.k=!0;const t=this.T?Date.now()-1e3*this.T:0,e=await this.M.expireEntries(t,this.B),s=await self.caches.open(this.I);for(const t of e)await s.delete(t,this.P);this.k=!1,this.O&&(this.O=!1,q(this.expireEntries()))}async updateTimestamp(t){await this.M.setTimestamp(t,Date.now())}async isURLExpired(t){if(this.T){const e=await this.M.getTimestamp(t),s=Date.now()-1e3*this.T;return void 0===e||e<s}return!1}async delete(){this.O=!1,await this.M.expireEntries(1/0)}}function H(t,e){const s=e();return t.waitUntil(s),s}try{self["workbox:precaching:7.0.0"]&&_()}catch(t){}function G(t){if(!t)throw new s("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:e,url:n}=t;if(!n)throw new s("add-to-cache-list-unexpected-type",{entry:t});if(!e){const t=new URL(n,location.href);return{cacheKey:t.href,url:t.href}}const r=new URL(n,location.href),i=new URL(n,location.href);return r.searchParams.set("__WB_REVISION__",e),{cacheKey:r.href,url:i.href}}class V{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:t,state:e})=>{e&&(e.originalRequest=t)},this.cachedResponseWillBeUsed=async({event:t,state:e,cachedResponse:s})=>{if("install"===t.type&&e&&e.originalRequest&&e.originalRequest instanceof Request){const t=e.originalRequest.url;s?this.notUpdatedURLs.push(t):this.updatedURLs.push(t)}return s}}}class J{constructor({precacheController:t}){this.cacheKeyWillBeUsed=async({request:t,params:e})=>{const s=(null==e?void 0:e.cacheKey)||this.W.getCacheKeyForURL(t.url);return s?new Request(s,{headers:t.headers}):t},this.W=t}}let Q,z;async function X(t,e){let n=null;if(t.url){n=new URL(t.url).origin}if(n!==self.location.origin)throw new s("cross-origin-copy-response",{origin:n});const r=t.clone(),i={headers:new Headers(r.headers),status:r.status,statusText:r.statusText},a=e?e(i):i,o=function(){if(void 0===Q){const t=new Response("");if("body"in t)try{new Response(t.body),Q=!0}catch(t){Q=!1}Q=!1}return Q}()?r.body:await r.blob();return new Response(o,a)}class Y extends b{constructor(t={}){t.cacheName=w(t.cacheName),super(t),this.j=!1!==t.fallbackToNetwork,this.plugins.push(Y.copyRedirectedCacheableResponsesPlugin)}async U(t,e){const s=await e.cacheMatch(t);return s||(e.event&&"install"===e.event.type?await this.S(t,e):await this.K(t,e))}async K(t,e){let n;const r=e.params||{};if(!this.j)throw new s("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{const s=r.integrity,i=t.integrity,a=!i||i===s;n=await e.fetch(new Request(t,{integrity:"no-cors"!==t.mode?i||s:void 0})),s&&a&&"no-cors"!==t.mode&&(this.A(),await e.cachePut(t,n.clone()))}return n}async S(t,e){this.A();const n=await e.fetch(t);if(!await e.cachePut(t,n.clone()))throw new s("bad-precaching-response",{url:t.url,status:n.status});return n}A(){let t=null,e=0;for(const[s,n]of this.plugins.entries())n!==Y.copyRedirectedCacheableResponsesPlugin&&(n===Y.defaultPrecacheCacheabilityPlugin&&(t=s),n.cacheWillUpdate&&e++);0===e?this.plugins.push(Y.defaultPrecacheCacheabilityPlugin):e>1&&null!==t&&this.plugins.splice(t,1)}}Y.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:t})=>!t||t.status>=400?null:t},Y.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await X(t):t};class Z{constructor({cacheName:t,plugins:e=[],fallbackToNetwork:s=!0}={}){this.F=new Map,this.$=new Map,this.H=new Map,this.u=new Y({cacheName:w(t),plugins:[...e,new J({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.u}precache(t){this.addToCacheList(t),this.G||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.G=!0)}addToCacheList(t){const e=[];for(const n of t){"string"==typeof n?e.push(n):n&&void 0===n.revision&&e.push(n.url);const{cacheKey:t,url:r}=G(n),i="string"!=typeof n&&n.revision?"reload":"default";if(this.F.has(r)&&this.F.get(r)!==t)throw new s("add-to-cache-list-conflicting-entries",{firstEntry:this.F.get(r),secondEntry:t});if("string"!=typeof n&&n.integrity){if(this.H.has(t)&&this.H.get(t)!==n.integrity)throw new s("add-to-cache-list-conflicting-integrities",{url:r});this.H.set(t,n.integrity)}if(this.F.set(r,t),this.$.set(r,i),e.length>0){const t=`Workbox is precaching URLs without revision info: ${e.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(t)}}}install(t){return H(t,async()=>{const e=new V;this.strategy.plugins.push(e);for(const[e,s]of this.F){const n=this.H.get(s),r=this.$.get(e),i=new Request(e,{integrity:n,cache:r,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:t}))}const{updatedURLs:s,notUpdatedURLs:n}=e;return{updatedURLs:s,notUpdatedURLs:n}})}activate(t){return H(t,async()=>{const t=await self.caches.open(this.strategy.cacheName),e=await t.keys(),s=new Set(this.F.values()),n=[];for(const r of e)s.has(r.url)||(await t.delete(r),n.push(r.url));return{deletedURLs:n}})}getURLsToCacheKeys(){return this.F}getCachedURLs(){return[...this.F.keys()]}getCacheKeyForURL(t){const e=new URL(t,location.href);return this.F.get(e.href)}getIntegrityForCacheKey(t){return this.H.get(t)}async matchPrecache(t){const e=t instanceof Request?t.url:t,s=this.getCacheKeyForURL(e);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(t){const e=this.getCacheKeyForURL(t);if(!e)throw new s("non-precached-url",{url:t});return s=>(s.request=new Request(t),s.params=Object.assign({cacheKey:e},s.params),this.strategy.handle(s))}}const tt=()=>(z||(z=new Z),z);class et extends r{constructor(t,e){super(({request:s})=>{const n=t.getURLsToCacheKeys();for(const r of function*(t,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:r}={}){const i=new URL(t,location.href);i.hash="",yield i.href;const a=function(t,e=[]){for(const s of[...t.searchParams.keys()])e.some(t=>t.test(s))&&t.searchParams.delete(s);return t}(i,e);if(yield a.href,s&&a.pathname.endsWith("/")){const t=new URL(a.href);t.pathname+=s,yield t.href}if(n){const t=new URL(a.href);t.pathname+=".html",yield t.href}if(r){const t=r({url:i});for(const e of t)yield e.href}}(s.url,e)){const e=n.get(r);if(e){return{cacheKey:e,integrity:t.getIntegrityForCacheKey(e)}}}},t.strategy)}}t.CacheFirst=class extends b{async U(t,e){let n,r=await e.cacheMatch(t);if(!r)try{r=await e.fetchAndCachePut(t)}catch(t){t instanceof Error&&(n=t)}if(!r)throw new s("no-response",{url:t.url,error:n});return r}},t.ExpirationPlugin=class{constructor(t={}){this.cachedResponseWillBeUsed=async({event:t,request:e,cacheName:s,cachedResponse:n})=>{if(!n)return null;const r=this.V(n),i=this.J(s);q(i.expireEntries());const a=i.updateTimestamp(e.url);if(t)try{t.waitUntil(a)}catch(t){}return r?n:null},this.cacheDidUpdate=async({cacheName:t,request:e})=>{const s=this.J(t);await s.updateTimestamp(e.url),await s.expireEntries()},this.X=t,this.T=t.maxAgeSeconds,this.Y=new Map,t.purgeOnQuotaError&&function(t){m.add(t)}(()=>this.deleteCacheAndMetadata())}J(t){if(t===d())throw new s("expire-custom-caches-only");let e=this.Y.get(t);return e||(e=new $(t,this.X),this.Y.set(t,e)),e}V(t){if(!this.T)return!0;const e=this.Z(t);if(null===e)return!0;return e>=Date.now()-1e3*this.T}Z(t){if(!t.headers.has("date"))return null;const e=t.headers.get("date"),s=new Date(e).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[t,e]of this.Y)await self.caches.delete(t),await e.delete();this.Y=new Map}},t.NavigationRoute=class extends r{constructor(t,{allowlist:e=[/./],denylist:s=[]}={}){super(t=>this.tt(t),t),this.et=e,this.st=s}tt({url:t,request:e}){if(e&&"navigate"!==e.mode)return!1;const s=t.pathname+t.search;for(const t of this.st)if(t.test(s))return!1;return!!this.et.some(t=>t.test(s))}},t.NetworkFirst=class extends b{constructor(t={}){super(t),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(u),this.nt=t.networkTimeoutSeconds||0}async U(t,e){const n=[],r=[];let i;if(this.nt){const{id:s,promise:a}=this.rt({request:t,logs:n,handler:e});i=s,r.push(a)}const a=this.it({timeoutId:i,request:t,logs:n,handler:e});r.push(a);const o=await e.waitUntil((async()=>await e.waitUntil(Promise.race(r))||await a)());if(!o)throw new s("no-response",{url:t.url});return o}rt({request:t,logs:e,handler:s}){let n;return{promise:new Promise(e=>{n=setTimeout(async()=>{e(await s.cacheMatch(t))},1e3*this.nt)}),id:n}}async it({timeoutId:t,request:e,logs:s,handler:n}){let r,i;try{i=await n.fetchAndCachePut(e)}catch(t){t instanceof Error&&(r=t)}return t&&clearTimeout(t),!r&&i||(i=await n.cacheMatch(e)),i}},t.NetworkOnly=class extends b{constructor(t={}){super(t),this.nt=t.networkTimeoutSeconds||0}async U(t,e){let n,r;try{const s=[e.fetch(t)];if(this.nt){const t=g(1e3*this.nt);s.push(t)}if(r=await Promise.race(s),!r)throw new Error(`Timed out the network response after ${this.nt} seconds.`)}catch(t){t instanceof Error&&(n=t)}if(!r)throw new s("no-response",{url:t.url,error:n});return r}},t.StaleWhileRevalidate=class extends b{constructor(t={}){super(t),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(u)}async U(t,e){const n=e.fetchAndCachePut(t).catch(()=>{});e.waitUntil(n);let r,i=await e.cacheMatch(t);if(i);else try{i=await n}catch(t){t instanceof Error&&(r=t)}if(!i)throw new s("no-response",{url:t.url,error:r});return i}},t.cleanupOutdatedCaches=function(){self.addEventListener("activate",t=>{const e=w();t.waitUntil((async(t,e="-precache-")=>{const s=(await self.caches.keys()).filter(s=>s.includes(e)&&s.includes(self.registration.scope)&&s!==t);return await Promise.all(s.map(t=>self.caches.delete(t))),s})(e).then(t=>{}))})},t.clientsClaim=function(){self.addEventListener("activate",()=>self.clients.claim())},t.createHandlerBoundToURL=function(t){return tt().createHandlerBoundToURL(t)},t.precacheAndRoute=function(t,e){!function(t){tt().precache(t)}(t),function(t){const e=tt();h(new et(e,t))}(e)},t.registerRoute=h});



üìÑ README.md

============================================================
FILE: README.md
============================================================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.



üìÑ repo_map.json

============================================================
FILE: repo_map.json
============================================================
{
  "critical": [
    "next.config.ts",
    "postcss.config.mjs",
    "tsconfig.json",
    "package.json",
    "next-i18next.config.js",
    "src/styles/globals.css",
    "src/components/Navbar.tsx",
    "src/pages/checkout.tsx",
    "src/lib/stripeServer.ts"
  ],
  "product_pages": [
    "src/pages/produto/[slug].tsx",
    "src/components/ProductHeroImageKit.tsx",
    "src/components/ProductCard.tsx",
    "src/components/ProductGrid.tsx"
  ],
  "plp_pages": [
    "src/pages/loja.tsx",
    "src/components/ProductGrid.tsx",
    "src/components/ProductCard.tsx"
  ],
  "i18n_namespaces": ["public/locales/pt", "public/locales/en"],
  "notes": "Mapa espelha sua √°rvore src/*; n√£o mover/renomear sem aprova√ß√£o."
}



üìÅ scripts/
  üìÑ generate-icons.ts

============================================================
FILE: scripts\generate-icons.ts
============================================================
// INSANYCK STEP 3
import sharp from "sharp";
import { mkdirSync, existsSync } from "node:fs";
import { join } from "node:path";

async function run() {
  const src = join(process.cwd(), "public", "brand", "logo.png"); // se tiver PNG
  const svg = join(process.cwd(), "public", "brand", "logo.svg"); // fallback: rasterizar do SVG
  const outDir = join(process.cwd(), "public", "icons");
  if (!existsSync(outDir)) mkdirSync(outDir, { recursive: true });

  const base = (await sharp(existsSync(src) ? src : svg)
    .resize(800, 800, { fit: "contain", background: "#000000" })
    .png()
    .toBuffer());

  // icon-192
  await sharp({
    create: { width: 192, height: 192, channels: 3, background: "#000000" },
  })
    .composite([{ input: base, gravity: "centre" }])
    .png()
    .toFile(join(outDir, "icon-192.png"));

  // icon-512
  await sharp({
    create: { width: 512, height: 512, channels: 3, background: "#000000" },
  })
    .composite([{ input: base, gravity: "centre" }])
    .png()
    .toFile(join(outDir, "icon-512.png"));

  // maskable-512 com padding de safe area
  const padded = await sharp(base)
    .extend({ top: 64, bottom: 64, left: 64, right: 64, background: "#000000" })
    .resize(512, 512, { fit: "contain", background: "#000000" })
    .png()
    .toBuffer();

  await sharp({
    create: { width: 512, height: 512, channels: 3, background: "#000000" },
  })
    .composite([{ input: padded, gravity: "centre" }])
    .png()
    .toFile(join(outDir, "maskable-512.png"));

  console.log("‚úÖ √çcones gerados em /public/icons");
}

run().catch((e) => {
  console.error(e);
  process.exit(1);
});



  üìÑ to-webp.ts

============================================================
FILE: scripts\to-webp.ts
============================================================
// INSANYCK STEP 5
// scripts/to-webp.ts
import fs from "fs";
import path from "path";
import sharp from "sharp";

const ROOT = path.resolve(process.cwd(), "public", "products");

async function walk(dir: string) {
  const entries = fs.readdirSync(dir, { withFileTypes: true });
  for (const e of entries) {
    const p = path.join(dir, e.name);
    if (e.isDirectory()) await walk(p);
    else if (/\.(png|jpg|jpeg)$/i.test(e.name)) {
      const out = p.replace(/\.(png|jpg|jpeg)$/i, ".webp");
      await sharp(p)
        .webp({ quality: 88, nearLossless: true })
        .toFile(out);
      console.log("‚Üí", out);
    }
  }
}

walk(ROOT).catch((e) => {
  console.error(e);
  process.exit(1);
});



üìÑ settings.json

============================================================
FILE: settings.json
============================================================
{
    "css.lint.unknownAtRules": "ignore",
    "scss.lint.unknownAtRules": "ignore",
    "less.lint.unknownAtRules": "ignore"
  }
  


üìÅ src/
  üìÅ animations/
    üìÑ cartAnimations.ts

============================================================
FILE: src\animations\cartAnimations.ts
============================================================
// src/animations/cartAnimations.ts
export const drawerSpring = {
    type: "spring",
    stiffness: 360,
    damping: 35,
    mass: 0.8
  };
  
  export const cartButtonVariants = {
    rest: { scale: 1, boxShadow: "none" },
    hover: {
      scale: 1.05,
      boxShadow: "0px 0px 18px rgba(255, 215, 0, 0.35)",
      transition: { type: "spring", stiffness: 280, damping: 22 }
    },
    tap: {
      scale: 0.97,
      boxShadow: "0px 0px 6px rgba(255, 215, 0, 0.21)"
    }
  };
  


  üìÅ components/
    üìÑ AccountLayout.tsx

============================================================
FILE: src\components\AccountLayout.tsx
============================================================
// INSANYCK STEP 8
"use client";

import Link from "next/link";
import { useRouter } from "next/router";
import { useTranslation } from "next-i18next";

type Props = {
  titleKey: string; // i18n key ex: "account:dashboard.title"
  children: React.ReactNode;
};

export default function AccountLayout({ titleKey, children }: Props) {
  const { t } = useTranslation(["account"]);
  const router = useRouter();

  const nav = [
    { href: "/conta", key: "account:nav.overview" },
    { href: "/conta/enderecos", key: "account:nav.addresses" },
    { href: "/conta/pedidos", key: "account:nav.orders" },
    { href: "/favoritos", key: "account:nav.wishlist" },
  ];

  return (
    <section className="pt-[100px] pb-16">
      <div className="mx-auto max-w-[1200px] px-6">
        <h1 className="text-3xl font-semibold tracking-wide text-white/90">{t(titleKey as any)}</h1>

        <div className="mt-8 grid grid-cols-1 lg:grid-cols-[260px_1fr] gap-6">
          {/* Nav lateral */}
          <aside className="rounded-2xl border border-white/10 bg-black/40 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] p-4">
            <nav className="flex flex-col gap-1">
              {nav.map((item) => {
                const active = router.pathname === item.href;
                return (
                  <Link
                    key={item.href}
                    href={item.href}
                    className={`px-3 py-2 rounded-lg transition ${
                      active ? "bg-white/10 text-white" : "text-white/80 hover:text-white hover:bg-white/5"
                    }`}
                  >
                    {t(item.key as any)}
                  </Link>
                );
              })}
              <form method="post" action="/api/auth/signout" className="mt-4">
                <button
                  className="w-full text-left px-3 py-2 rounded-lg text-white/70 hover:text-white hover:bg-white/5 transition"
                >
                  {t("account:nav.signout" as any, "Sair")}
                </button>
              </form>
            </nav>
          </aside>

          {/* Conte√∫do */}
          <main className="min-h-[420px] rounded-2xl border border-white/10 bg-black/40 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] p-6">
            {children}
          </main>
        </div>
      </div>
    </section>
  );
}



    üìÑ AddressForm.tsx

============================================================
FILE: src\components\AddressForm.tsx
============================================================
// src/components/AddressForm.tsx
"use client";

import React from "react";
import { UseFormRegister, FieldErrors } from "react-hook-form";
import { useTranslation } from "next-i18next";

export type AddressFields = {
  fullName: string;
  email: string;
  phone: string;
  cep: string;
  street: string;
  number: string;
  complement?: string;
  district: string;
  city: string;
  state: string;
  country: string;
};

type Props = {
  register: UseFormRegister<any>;
  errors: FieldErrors<AddressFields>;
};

export default function AddressForm({ register, errors }: Props) {
  const { t, i18n } = useTranslation(["checkout"]);
  const isEN = i18n.language?.startsWith("en");

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
      <Field
        label={t("checkout:fields.fullName", "Nome completo")}
        placeholder={isEN ? "Your full name" : "Seu nome completo"}
        error={errors.fullName?.message as string | undefined}
        inputProps={{ ...register("fullName") }}
      />
      <Field
        label={t("checkout:fields.email", "E-mail")}
        placeholder={isEN ? "you@email.com" : "voce@email.com"}
        error={errors.email?.message as string | undefined}
        inputProps={{ ...register("email") }}
      />
      <Field
        label={t("checkout:fields.phone", "Telefone")}
        placeholder={isEN ? "(555) 123-456" : "(11) 99999-9999"}
        error={errors.phone?.message as string | undefined}
        inputProps={{ ...register("phone") }}
      />
      <Field
        label={t("checkout:fields.cep", "CEP")}
        placeholder={isEN ? "ZIP code" : "00000-000"}
        error={errors.cep?.message as string | undefined}
        inputProps={{ ...register("cep") }}
      />
      <Field
        label={t("checkout:fields.street", "Rua")}
        placeholder={isEN ? "Street" : "Rua"}
        error={errors.street?.message as string | undefined}
        inputProps={{ ...register("street") }}
      />
      <Field
        label={t("checkout:fields.number", "N√∫mero")}
        placeholder={isEN ? "Number" : "N√∫mero"}
        error={errors.number?.message as string | undefined}
        inputProps={{ ...register("number") }}
      />
      <Field
        label={t("checkout:fields.complement", "Complemento")}
        placeholder={isEN ? "Apt, floor (optional)" : "Apto, bloco (opcional)"}
        error={errors.complement?.message as string | undefined}
        inputProps={{ ...register("complement") }}
      />
      <Field
        label={t("checkout:fields.district", "Bairro")}
        placeholder={isEN ? "District" : "Bairro"}
        error={errors.district?.message as string | undefined}
        inputProps={{ ...register("district") }}
      />
      <Field
        label={t("checkout:fields.city", "Cidade")}
        placeholder={isEN ? "City" : "Cidade"}
        error={errors.city?.message as string | undefined}
        inputProps={{ ...register("city") }}
      />
      <Field
        label={t("checkout:fields.state", "UF")}
        placeholder={isEN ? "State" : "UF"}
        error={errors.state?.message as string | undefined}
        inputProps={{ ...register("state") }}
      />
      <Field
        label={t("checkout:fields.country", "Pa√≠s")}
        placeholder={isEN ? "Country" : "Brasil"}
        error={errors.country?.message as string | undefined}
        inputProps={{ ...register("country") }}
      />
    </div>
  );
}

function Field({
  label,
  placeholder,
  error,
  inputProps,
}: {
  label: string;
  placeholder?: string;
  error?: string;
  inputProps: React.InputHTMLAttributes<HTMLInputElement>;
}) {
  return (
    <label className="block">
      <span className="block text-sm text-white/70 mb-1">{label}</span>
      <input
        {...inputProps}
        placeholder={placeholder}
        className="
          w-full rounded-xl bg-black/40 border border-white/10
          px-3 py-2 text-white placeholder-white/30
          focus:outline-none focus:ring-2 focus:ring-white/20 focus:border-white/20
        "
      />
      {error ? <span className="mt-1 block text-xs text-red-400">{error}</span> : null}
    </label>
  );
}



    üìÑ AddToCartButton.tsx

============================================================
FILE: src\components\AddToCartButton.tsx
============================================================
// INSANYCK STEP 6 ‚Äî Bot√£o Add to Cart
// src/components/AddToCartButton.tsx
"use client";

import { useCartStore } from "@/store/cart";
import { parseToCents } from "@/lib/price";
import { useTranslation } from "next-i18next";
import { ReactNode, useState } from "react";
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Enhanced button with micro-interactions
import { motion } from "framer-motion";

type MinimalProduct = {
  slug: string;
  title: string;
  image?: string;
  price?: string | number;
  priceCents?: number;
  variant?: string;
  // INSANYCK STEP 10 ‚Äî Novos campos para integra√ß√£o com variantes
  variantId?: string;
  sku?: string;
  currency?: string;
};

type Props = {
  product: MinimalProduct;
  qty?: number;
  openMiniCart?: boolean;
  className?: string;
  children?: ReactNode; // permite manter seu visual existente
  disabled?: boolean; // INSANYCK STEP 10 ‚Äî Para desabilitar quando sem estoque
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Loading state support
  loading?: boolean;
};

export default function AddToCartButton({
  product,
  qty = 1,
  openMiniCart = true,
  className,
  children,
  disabled = false,
  loading = false,
}: Props) {
  const addItem = useCartStore((s) => s.addItem);
  const toggle = useCartStore((s) => s.toggle);
  const { t } = useTranslation(["cart"]);
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Internal loading state for smooth UX
  const [isAdding, setIsAdding] = useState(false);

  const handle = async () => {
    if (isAdding || loading) return;
    
    setIsAdding(true);
    
    try {
      const priceCents =
        typeof product.priceCents === "number"
          ? product.priceCents
          : parseToCents(product.price ?? 0);

      addItem({
        slug: product.slug,
        title: product.title,
        image: product.image,
        priceCents,
        currency: 'BRL',
        qty,
        // INSANYCK STEP 10 ‚Äî Novos campos
        variantId: product.variantId,
        sku: product.sku,
        options: product.variant ? { variant: product.variant } : undefined,
      });

      if (openMiniCart) toggle(true);
      
      // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Brief delay for better UX feedback
      await new Promise(resolve => setTimeout(resolve, 150));
    } finally {
      setIsAdding(false);
    }
  };

  const isDisabled = disabled || loading || isAdding;

  return (
    <motion.button
      type="button"
      onClick={handle}
      disabled={isDisabled}
      className={
        className ||
        "bg-white text-black rounded-xl px-6 py-3 font-semibold hover:brightness-95 transition disabled:opacity-50 disabled:cursor-not-allowed focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 focus-visible:ring-offset-2 focus-visible:ring-offset-black"
      }
      aria-label={t("cart:addToCart", "Adicionar ao carrinho")}
      aria-busy={isAdding || loading}
      data-state={isAdding || loading ? "loading" : "idle"}
      // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Subtle micro-interactions
      whileHover={!isDisabled ? { scale: 1.015 } : undefined}
      whileTap={!isDisabled ? { scale: 0.985 } : undefined}
      transition={{ duration: 0.15, ease: [0.2, 0, 0, 1] }}
    >
      {(isAdding || loading) && (
        <svg
          className="animate-spin -ml-1 mr-2 h-4 w-4"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <circle
            className="opacity-25"
            cx="12"
            cy="12"
            r="10"
            stroke="currentColor"
            strokeWidth="4"
          />
          <path
            className="opacity-75"
            fill="currentColor"
            d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
          />
        </svg>
      )}
      {children || t("cart:addToCart", "Adicionar ao carrinho")}
    </motion.button>
  );
}



    üìÑ AdminLayout.tsx

============================================================
FILE: src\components\AdminLayout.tsx
============================================================
// INSANYCK STEP 10 ‚Äî Admin Layout
// src/components/AdminLayout.tsx
import { ReactNode } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useSession, signOut } from 'next-auth/react';
import { 
  Package, 
  FolderTree, 
  Settings, 
  LogOut, 
  User,
  BarChart3,
  ShoppingCart
} from 'lucide-react';

interface AdminLayoutProps {
  children: ReactNode;
}

export default function AdminLayout({ children }: AdminLayoutProps) {
  const { data: session } = useSession();
  const router = useRouter();

  const navigation = [
    { name: 'Produtos', href: '/admin/products', icon: Package },
    { name: 'Categorias', href: '/admin/categories', icon: FolderTree },
    { name: 'Pedidos', href: '/admin/orders', icon: ShoppingCart },
    { name: 'Relat√≥rios', href: '/admin/reports', icon: BarChart3 },
    { name: 'Configura√ß√µes', href: '/admin/settings', icon: Settings },
  ];

  const isActive = (href: string) => {
    return router.pathname.startsWith(href);
  };

  return (
    <div className="min-h-screen bg-black">
      {/* Sidebar */}
      <div className="fixed inset-y-0 left-0 z-50 w-64 bg-black/90 backdrop-blur-xl border-r border-white/10">
        <div className="flex h-16 items-center justify-center border-b border-white/10">
          <h1 className="text-xl font-semibold text-white tracking-tight">
            INSANYCK Admin
          </h1>
        </div>
        
        <nav className="mt-8 px-4">
          <ul className="space-y-1">
            {navigation.map((item) => {
              const Icon = item.icon;
              return (
                <li key={item.name}>
                  <Link
                    href={item.href}
                    className={`
                      group flex items-center px-3 py-2 text-sm font-medium rounded-lg
                      transition-all duration-200
                      ${isActive(item.href)
                        ? 'bg-white/10 text-white border border-white/20'
                        : 'text-white/70 hover:text-white hover:bg-white/5'
                      }
                    `}
                  >
                    <Icon className="mr-3 h-5 w-5 flex-shrink-0" />
                    {item.name}
                  </Link>
                </li>
              );
            })}
          </ul>
        </nav>

        {/* User menu */}
        <div className="absolute bottom-0 w-full p-4 border-t border-white/10">
          <div className="flex items-center">
            <div className="flex-shrink-0">
              <div className="h-8 w-8 rounded-full bg-white/10 flex items-center justify-center">
                <User className="h-4 w-4 text-white/70" />
              </div>
            </div>
            <div className="ml-3 flex-1 min-w-0">
              <p className="text-sm font-medium text-white truncate">
                {session?.user?.name || session?.user?.email}
              </p>
              <p className="text-xs text-white/50">Admin</p>
            </div>
            <button
              onClick={() => signOut({ callbackUrl: '/login' })}
              className="ml-2 p-1 rounded-md text-white/70 hover:text-white hover:bg-white/10 transition-colors"
            >
              <LogOut className="h-4 w-4" />
            </button>
          </div>
        </div>
      </div>

      {/* Main content */}
      <div className="pl-64">
        <main className="min-h-screen">
          {children}
        </main>
      </div>
    </div>
  );
}


    üìÑ CartDrawer.tsx

============================================================
FILE: src\components\CartDrawer.tsx
============================================================
// src/components/CartDrawer.tsx
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Enhanced with focus management and a11y
import React, { useRef, useEffect } from "react";
import { useCart } from "@/store/useCart";
import { motion, AnimatePresence } from "framer-motion";
import { useCheckout } from "@/hooks/useCheckout";
import { FixedSizeList as List } from "react-window";
import { X } from "lucide-react";

const spring = {
  type: "spring" as const,
  stiffness: 360,
  damping: 35
};

interface CartDrawerProps {
  open: boolean;
  onClose: () => void;
}

export const CartDrawer: React.FC<CartDrawerProps> = ({ open, onClose }) => {
  const cart = useCart((s) => s.items);
  const remove = useCart((s) => s.remove);
  const total = cart.reduce((sum, item) => sum + item.preco * item.quantidade, 0);
  const listRef = useRef<any>(null);
  const { handleCheckout, isLoading } = useCheckout();
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Focus management refs
  const titleRef = useRef<HTMLHeadingElement>(null);
  const closeButtonRef = useRef<HTMLButtonElement>(null);
  const drawerRef = useRef<HTMLElement>(null);

  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Focus trap and initial focus
  useEffect(() => {
    if (open) {
      // Store previously focused element to restore later
      const previouslyFocused = document.activeElement as HTMLElement;
      
      // Focus the close button when drawer opens (better UX for quick closing)
      const focusTimer = setTimeout(() => {
        closeButtonRef.current?.focus();
      }, 150);
      
      return () => {
        clearTimeout(focusTimer);
        // Restore focus when drawer closes
        if (previouslyFocused && document.contains(previouslyFocused)) {
          previouslyFocused?.focus?.();
        }
      };
    }
  }, [open]);

  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Keyboard event handler for escape and focus trap
  useEffect(() => {
    if (!open) return;

    const handleKeyDown = (e: KeyboardEvent) => {
      if (e.key === 'Escape') {
        onClose();
        return;
      }

      // Simple focus trap - keep focus within drawer
      if (e.key === 'Tab') {
        const focusableElements = drawerRef.current?.querySelectorAll(
          'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
        );
        
        if (focusableElements && focusableElements.length > 0) {
          const firstFocusable = focusableElements[0] as HTMLElement;
          const lastFocusable = focusableElements[focusableElements.length - 1] as HTMLElement;
          
          if (e.shiftKey) {
            if (document.activeElement === firstFocusable) {
              e.preventDefault();
              lastFocusable.focus();
            }
          } else {
            if (document.activeElement === lastFocusable) {
              e.preventDefault();
              firstFocusable.focus();
            }
          }
        }
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => document.removeEventListener('keydown', handleKeyDown);
  }, [open, onClose]);

  // Virtualization with react-window
  const Row = ({ index, style }: { index: number; style: React.CSSProperties }) => {
    const item = cart[index];
    return (
      <div style={style} className="flex gap-3 items-center p-3 border-b border-neutral-800 bg-neutral-950">
        <img src={item.image} alt={item.nome} className="w-14 h-14 object-cover rounded-xl border" />
        <div className="flex-1">
          <div className="font-bold text-yellow-400">{item.nome}</div>
          <div className="text-xs text-neutral-400">
            Cor: {item.cor} | Tam: {item.tamanho}
          </div>
          <div className="text-sm text-white">R$ {item.preco.toFixed(2)} √ó {item.quantidade}</div>
        </div>
        <button
          className="text-red-500 text-lg px-2 hover:scale-110"
          aria-label="Remover do carrinho"
          onClick={() => remove(item.id, item.cor, item.tamanho)}
        >
          <X />
        </button>
      </div>
    );
  };

  return (
    <AnimatePresence>
      {open && (
        <motion.aside
          ref={drawerRef}
          className="fixed top-0 right-0 h-full w-[420px] max-w-full bg-black z-[150] shadow-2xl border-l border-yellow-500/30 flex flex-col"
          initial={{ x: 480, opacity: 0 }}
          animate={{ x: 0, opacity: 1, transition: spring }}
          exit={{ x: 480, opacity: 0, transition: { ...spring, damping: 23 } }}
          aria-modal="true"
          aria-label="Carrinho"
          role="dialog"
          aria-labelledby="cart-title"
        >
          <div className="flex justify-between items-center p-5 border-b border-yellow-500/20 bg-neutral-950/80 backdrop-blur-lg">
            <h2 
              ref={titleRef}
              id="cart-title"
              className="font-extrabold text-xl text-yellow-400"
              tabIndex={-1}
            >
              Seu Carrinho
            </h2>
            <button 
              ref={closeButtonRef}
              onClick={onClose} 
              aria-label="Fechar carrinho" 
              className="text-yellow-300 text-2xl hover:scale-110 transition-transform duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 focus-visible:ring-offset-2 focus-visible:ring-offset-black rounded-lg p-1"
            >
              <X />
            </button>
          </div>
          <div className="flex-1 overflow-y-auto">
            {cart.length === 0 ? (
              <div className="text-neutral-400 text-center py-16">
                Seu carrinho est√° vazio.
              </div>
            ) : (
              <List
                height={450}
                itemCount={cart.length}
                itemSize={95}
                width={"100%"}
                ref={listRef}
                overscanCount={8}
              >
                {Row}
              </List>
            )}
          </div>
          <div className="p-5 border-t border-yellow-500/20 bg-neutral-950/80">
            <div className="flex justify-between items-center mb-3">
              <span className="font-bold text-white">Total</span>
              <span className="font-extrabold text-yellow-400 text-2xl">R$ {total.toFixed(2)}</span>
            </div>
            <button
              onClick={handleCheckout}
              disabled={isLoading || cart.length === 0}
              className="w-full bg-yellow-400 text-black rounded-xl px-6 py-4 font-bold text-xl transition hover:scale-105 active:scale-98 flex items-center justify-center gap-2 shadow-md"
            >
              {isLoading ? (
                <span className="animate-spin h-5 w-5 mr-2 border-2 border-white border-t-yellow-400 rounded-full"></span>
              ) : (
                <>
                  Checkout 1-click <span className="ml-1">üöÄ</span>
                </>
              )}
            </button>
            <div className="mt-4 text-sm text-neutral-500 text-center">
              Pagamentos: <b>Apple Pay</b>, <b>Google Pay</b>, <b>Pix</b>
            </div>
          </div>
        </motion.aside>
      )}
    </AnimatePresence>
  );
};



    üìÑ CheckoutSPA.tsx

============================================================
FILE: src\components\CheckoutSPA.tsx
============================================================
import React, { useState, useEffect } from "react";
import { loadStripe } from "@stripe/stripe-js";
import type { StripeElementsOptions } from "@stripe/stripe-js";
import {
  Elements,
  PaymentElement,
  useStripe,
  useElements,
} from "@stripe/react-stripe-js";
import { motion, AnimatePresence } from "framer-motion";
import { useTranslation } from "react-i18next";
import { getFingerprint, analyzeBehavior } from "@/lib/fraud";
// import Product3DView from "@/components/Product3DView";
import { Loader } from "@/components/Loader";
// import { validateEmail } from "@/lib/validate";
import { useRouter } from "next/router";


// ENV
const stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY as string);

const steps = ["review", "payment", "confirmation"] as const;
type Step = typeof steps[number];

interface CheckoutSPAProps {
  cart: any[];
  total: number;
  customerEmail: string;
  onComplete: () => void;
}

export default function CheckoutSPA({ cart, total, customerEmail, onComplete }: CheckoutSPAProps) {
  const ns = ["checkout", "common"] as const;
  const { t } = useTranslation(ns);
  const [step, setStep] = useState<Step>("review");
  const [loading, setLoading] = useState(false);
  const [paymentIntent, setPaymentIntent] = useState<string | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [_confirmed, setConfirmed] = useState(false);
  const [fraudScore, setFraudScore] = useState<number>(0);

  const router = useRouter();

  // Fraud detection: device fingerprinting + behavioral analysis
  useEffect(() => {
    async function detectFraud() {
      const _device = await getFingerprint();
      const behavior = await analyzeBehavior();
      setFraudScore(behavior.risk); // Agora s√≥ o risk (ou some como quiser!)
    }
    detectFraud();
  }, []);
  
  

  // Create PaymentIntent on mount
  useEffect(() => {
    if (!paymentIntent && cart.length) {
      setLoading(true);
      fetch("/api/create-payment-intent", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ cart, email: customerEmail, fraudScore }),
      })
        .then(res => res.json())
        .then(data => setPaymentIntent(data.clientSecret))
        .finally(() => setLoading(false));
    }
  }, [cart, customerEmail, paymentIntent, fraudScore]);

  // Step transition animations
  const pageVariants = {
    initial: { opacity: 0, y: 40 },
    animate: { opacity: 1, y: 0 },
    exit: { opacity: 0, y: -30 }
  };

  // Accessibility - focus management
  useEffect(() => {
    document.getElementById(`step-${step}`)?.focus();
  }, [step]);

  // Stripe Elements options (Apple Pay/Google Pay enabled)
  const options: StripeElementsOptions = {
    clientSecret: paymentIntent ?? "",
    appearance: {
      theme: "night",
      variables: { colorPrimary: "#FFD700" }
    }
  };
  
  

  return (
    <div className="fixed inset-0 bg-black/70 flex items-center justify-center z-[120]" role="dialog" aria-modal="true">
      <AnimatePresence mode="wait">
        <motion.section
          key={step}
          tabIndex={-1}
          id={`step-${step}`}
          variants={pageVariants}
          initial="initial"
          animate="animate"
          exit="exit"
          className="bg-neutral-950 p-8 rounded-3xl w-full max-w-2xl shadow-2xl outline-none"
          aria-labelledby="checkout-heading"
        >
          {loading && <Loader />}
          {/* Step 1: Review */}
          {step === "review" && (
            <>
              <h2 className="text-2xl font-extrabold mb-4 text-yellow-400" id="checkout-heading">
                {t("checkout:review")}
              </h2>
              <div className="mb-6 grid grid-cols-1 sm:grid-cols-2 gap-6">
                {cart.map((item, i) => (
                  <div key={i} className="bg-black/40 p-4 rounded-xl flex gap-3">
                    <div className="w-24 h-24 bg-white/10 rounded-lg flex items-center justify-center text-white/60 text-xs">3D</div>
                    <div>
                      <div className="font-bold text-lg text-yellow-300">{item.nome}</div>
                      <div className="text-neutral-400">{t("common:color")}: {item.cor} &nbsp;|&nbsp; {t("common:size")}: {item.tamanho}</div>
                      <div className="text-white mt-2 font-bold">R$ {item.preco.toFixed(2)}</div>
                    </div>
                  </div>
                ))}
              </div>
              <div className="flex justify-between mb-4">
                <span className="font-bold text-white">{t("common:total")}</span>
                <span className="font-bold text-2xl text-yellow-400">R$ {total.toFixed(2)}</span>
              </div>
              <motion.button
                onClick={() => setStep("payment")}
                className="bg-yellow-400 text-black rounded-xl px-8 py-3 font-extrabold text-xl mt-2 w-full hover:scale-105 transition"
                whileTap={{ scale: 0.98 }}
                aria-label={t("checkout:placeOrder")}
              >
                {t("checkout:placeOrder")}
              </motion.button>
            </>
          )}

          {/* Step 2: Pagamento */}
          {step === "payment" && paymentIntent && (
            <Elements stripe={stripePromise} options={options}>
              <PaymentForm
                email={customerEmail}
                setConfirmed={setConfirmed}
                setError={setError}
                setStep={setStep}
              />
            </Elements>
          )}

          {/* Step 3: Confirma√ß√£o */}
          {step === "confirmation" && (
            <>
              <h2 className="text-2xl font-extrabold mb-4 text-yellow-400">
                {t("checkout:success.title")}
              </h2>
              <div className="text-lg text-white mb-6">
                {t("checkout:success.message")}  
              </div>
              <motion.button
                onClick={() => { setStep("review"); onComplete(); router.push("/cliente"); }}
                className="bg-yellow-400 text-black rounded-xl px-6 py-3 font-bold"
                whileTap={{ scale: 0.97 }}
                aria-label={t("checkout:cancel.backToBag")}
              >
                {t("checkout:cancel.backToBag")}
              </motion.button>
            </>
          )}

          {error && <div className="text-red-500 mt-6">{error}</div>}
        </motion.section>
      </AnimatePresence>
    </div>
  );
}

// Subcomponente: Stripe Payment Form + 3DSecure2
function PaymentForm({ email, setConfirmed, setError, setStep }: any) {
  const stripe = useStripe();
  const elements = useElements();
  const ns = ["checkout", "common"] as const;
  const { t } = useTranslation(ns);
  const [processing, setProcessing] = useState(false);

  const handleSubmit = async (e: any) => {
    e.preventDefault();
    if (!stripe || !elements) return;
    setProcessing(true);
    const { error, paymentIntent } = await stripe.confirmPayment({
      elements,
      confirmParams: { receipt_email: email },
      redirect: "if_required",
    });
    setProcessing(false);

    if (error) setError(error.message || "Erro");
    else if (paymentIntent?.status === "succeeded") {
      setConfirmed(true);
      setStep("confirmation");
    }
  };

  return (
    <form onSubmit={handleSubmit} className="flex flex-col gap-4" aria-label={t("checkout:payment.fake")}>
      <PaymentElement options={{
        layout: "tabs",
        business: { name: "INSANYCK" },
        wallets: { applePay: "auto", googlePay: "auto" }
      }} />
      <motion.button
        type="submit"
        className="bg-yellow-400 text-black rounded-xl px-8 py-3 font-extrabold text-xl mt-2 hover:scale-105 transition"
        whileTap={{ scale: 0.97 }}
        disabled={processing}
        aria-label={t("checkout:placeOrder")}
      >
        {processing ? t("checkout:processing") : t("checkout:placeOrder")}
      </motion.button>
    </form>
  );
}



    üìÑ CTA.tsx

============================================================
FILE: src\components\CTA.tsx
============================================================
// INSANYCK STEP 3
"use client";

import * as React from "react";

type Variant = "solid" | "ghost";

export function CTA({
  children,
  variant = "solid",
  className = "",
  ...rest
}: React.ButtonHTMLAttributes<HTMLButtonElement> & { variant?: Variant }) {
  if (variant === "ghost") {
    return (
      <button
        {...rest}
        className={[
          "rounded-xl px-6 h-12 border border-white/20 text-white/90",
          "hover:bg-white/5 hover:border-white/30",
          "transition shadow-[inset_0_0_0_1px_rgba(255,255,255,0.06)]",
          className,
        ].join(" ")}
      >
        {children}
      </button>
    );
  }

  return (
    <button
      {...rest}
      className={[
        "rounded-xl px-6 h-12 bg-white text-black",
        "hover:brightness-[1.03] active:translate-y-[0.5px]",
        "shadow-[0_1px_0_#ffffff40,0_8px_20px_rgba(255,255,255,0.08)]",
        className,
      ].join(" ")}
    >
      {children}
    </button>
  );
}



    üìÅ EmptyStates/
      üìÑ CartEmpty.tsx

============================================================
FILE: src\components\EmptyStates\CartEmpty.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Polished empty cart state
"use client";

import { motion } from "framer-motion";
import { ShoppingBag, Heart } from "lucide-react";
import { useTranslation } from "next-i18next";
import Link from "next/link";
import { Button } from "@/components/ui/Button";

export default function CartEmpty() {
  const { t } = useTranslation(["common", "cart"]);

  return (
    <motion.div 
      className="text-center py-16 px-6"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, ease: [0.2, 0, 0, 1] }}
    >
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Minimal illustration with INSANYCK aesthetic */}
      <motion.div 
        className="relative mx-auto w-32 h-32 mb-8"
        initial={{ scale: 0.8, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 0.8, delay: 0.2 }}
      >
        <div className="absolute inset-0 rounded-full bg-gradient-to-br from-white/5 to-white/10 border border-white/10" />
        <div className="absolute inset-4 rounded-full bg-gradient-to-br from-white/10 to-white/20 border border-white/20 backdrop-blur-sm" />
        <div className="absolute inset-0 flex items-center justify-center">
          <ShoppingBag 
            className="w-12 h-12 text-white/60" 
            strokeWidth={1.5}
          />
        </div>
        
        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Subtle floating animation */}
        <motion.div
          className="absolute -top-2 -right-2 w-6 h-6 rounded-full bg-white/10 border border-white/20 flex items-center justify-center"
          animate={{ y: [-2, 2, -2] }}
          transition={{ duration: 3, repeat: Infinity, ease: "easeInOut" }}
        >
          <Heart className="w-3 h-3 text-white/40" strokeWidth={2} />
        </motion.div>
      </motion.div>

      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Content with INSANYCK tone */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.4 }}
      >
        <h3 className="text-2xl font-bold text-white/90 mb-3">
          {t("cart:empty.title", "Sua sacola est√° vazia")}
        </h3>
        
        <p className="text-white/60 text-lg mb-8 max-w-md mx-auto leading-relaxed">
          {t("cart:empty.description", "Descubra pe√ßas exclusivas que definem seu estilo √∫nico")}
        </p>

        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Call to action */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
          <Link href="/pt/loja">
            <Button variant="primary" size="lg">
              {t("common:cta.shopNow", "Explorar cole√ß√£o")}
            </Button>
          </Link>
          
          <Link href="/pt/favoritos">
            <Button variant="ghost" size="lg">
              <Heart className="w-4 h-4 mr-2" />
              {t("common:cta.wishlist", "Ver favoritos")}
            </Button>
          </Link>
        </div>

        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Subtle accent */}
        <motion.div 
          className="mt-12 text-sm text-white/40"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
        >
          {t("cart:empty.hint", "Frete gr√°tis para todo Brasil")}
        </motion.div>
      </motion.div>
    </motion.div>
  );
}


      üìÑ OrdersEmpty.tsx

============================================================
FILE: src\components\EmptyStates\OrdersEmpty.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Polished empty orders state
"use client";

import { motion } from "framer-motion";
import { Package, Clock, Star } from "lucide-react";
import { useTranslation } from "next-i18next";
import Link from "next/link";
import { Button } from "@/components/ui/Button";

export default function OrdersEmpty() {
  const { t } = useTranslation(["common", "account"]);

  return (
    <motion.div 
      className="text-center py-20 px-6"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, ease: [0.2, 0, 0, 1] }}
    >
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Package illustration */}
      <motion.div 
        className="relative mx-auto w-36 h-36 mb-8"
        initial={{ scale: 0.8, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 0.8, delay: 0.2 }}
      >
        <div className="absolute inset-0 rounded-2xl bg-gradient-to-br from-white/5 to-white/15 border border-white/10 rotate-12" />
        <div className="absolute inset-4 rounded-2xl bg-gradient-to-br from-white/10 to-white/20 border border-white/20 backdrop-blur-sm rotate-6" />
        
        <div className="absolute inset-0 flex items-center justify-center">
          <Package 
            className="w-14 h-14 text-white/60" 
            strokeWidth={1.5}
          />
        </div>
        
        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Floating elements */}
        <motion.div
          className="absolute -top-2 -right-2 w-8 h-8 rounded-full bg-white/10 border border-white/20 flex items-center justify-center"
          animate={{ 
            rotate: [0, -10, 10, 0],
            scale: [1, 1.1, 1]
          }}
          transition={{ duration: 4, repeat: Infinity, ease: "easeInOut" }}
        >
          <Clock className="w-4 h-4 text-white/50" />
        </motion.div>
        
        <motion.div
          className="absolute -bottom-2 -left-2 w-6 h-6 rounded-full bg-white/15 border border-white/25 flex items-center justify-center"
          animate={{ 
            y: [-2, 2, -2],
            opacity: [0.5, 0.8, 0.5]
          }}
          transition={{ duration: 3, repeat: Infinity, ease: "easeInOut", delay: 0.5 }}
        >
          <Star className="w-3 h-3 text-white/40" fill="currentColor" />
        </motion.div>
      </motion.div>

      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Content with INSANYCK luxury tone */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.4 }}
      >
        <h3 className="text-2xl font-bold text-white/90 mb-4">
          {t("account:orders.empty.title", "Sua jornada come√ßa aqui")}
        </h3>
        
        <p className="text-white/60 text-lg mb-8 max-w-lg mx-auto leading-relaxed">
          {t("account:orders.empty.description", "Ainda n√£o h√° pedidos em sua conta. Descubra pe√ßas que definem seu estilo √∫nico.")}
        </p>

        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Call to action */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
          <Link href="/pt/loja">
            <Button variant="primary" size="lg">
              {t("common:cta.startShopping", "Come√ßar a explorar")}
            </Button>
          </Link>
          
          <Link href="/pt/favoritos">
            <Button variant="ghost" size="lg">
              {t("common:cta.viewWishlist", "Ver favoritos")}
            </Button>
          </Link>
        </div>

        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Benefits highlight */}
        <motion.div 
          className="mt-12 grid grid-cols-1 sm:grid-cols-3 gap-6 max-w-2xl mx-auto"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
        >
          <div className="text-center">
            <div className="w-8 h-8 mx-auto mb-2 rounded-full bg-white/10 border border-white/20 flex items-center justify-center">
              <Package className="w-4 h-4 text-white/60" />
            </div>
            <p className="text-sm text-white/50">
              {t("account:orders.benefits.shipping", "Entrega expressa")}
            </p>
          </div>
          
          <div className="text-center">
            <div className="w-8 h-8 mx-auto mb-2 rounded-full bg-white/10 border border-white/20 flex items-center justify-center">
              <Star className="w-4 h-4 text-white/60" fill="currentColor" />
            </div>
            <p className="text-sm text-white/50">
              {t("account:orders.benefits.quality", "Qualidade premium")}
            </p>
          </div>
          
          <div className="text-center">
            <div className="w-8 h-8 mx-auto mb-2 rounded-full bg-white/10 border border-white/20 flex items-center justify-center">
              <Clock className="w-4 h-4 text-white/60" />
            </div>
            <p className="text-sm text-white/50">
              {t("account:orders.benefits.service", "Suporte 24/7")}
            </p>
          </div>
        </motion.div>
      </motion.div>
    </motion.div>
  );
}


      üìÑ SearchEmpty.tsx

============================================================
FILE: src\components\EmptyStates\SearchEmpty.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Polished empty search state
"use client";

import { motion } from "framer-motion";
import { Search, Filter, RotateCcw } from "lucide-react";
import { useTranslation } from "next-i18next";
import { Button } from "@/components/ui/Button";

interface SearchEmptyProps {
  query?: string;
  onClearFilters?: () => void;
  onNewSearch?: () => void;
}

export default function SearchEmpty({ query, onClearFilters, onNewSearch }: SearchEmptyProps) {
  const { t } = useTranslation(["common", "search"]);

  return (
    <motion.div 
      className="text-center py-20 px-6"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, ease: [0.2, 0, 0, 1] }}
    >
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Search illustration */}
      <motion.div 
        className="relative mx-auto w-32 h-32 mb-8"
        initial={{ scale: 0.8, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 0.8, delay: 0.2 }}
      >
        <div className="absolute inset-0 rounded-full bg-gradient-to-br from-white/5 to-white/10 border border-white/10" />
        <div className="absolute inset-4 rounded-full bg-gradient-to-br from-white/10 to-white/20 border border-white/20 backdrop-blur-sm" />
        
        <div className="absolute inset-0 flex items-center justify-center">
          <Search 
            className="w-12 h-12 text-white/60" 
            strokeWidth={1.5}
          />
        </div>
        
        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Animated search pulse */}
        <motion.div
          className="absolute inset-2 rounded-full border border-white/20"
          animate={{ 
            scale: [1, 1.1, 1],
            opacity: [0.3, 0.1, 0.3]
          }}
          transition={{ duration: 2, repeat: Infinity, ease: "easeInOut" }}
        />
      </motion.div>

      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Content based on search context */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.4 }}
      >
        <h3 className="text-2xl font-bold text-white/90 mb-4">
          {query 
            ? t("search:empty.withQuery.title", "Nenhum resultado encontrado")
            : t("search:empty.noQuery.title", "Comece sua busca")
          }
        </h3>
        
        <p className="text-white/60 text-lg mb-8 max-w-lg mx-auto leading-relaxed">
          {query ? (
            <>
              {t("search:empty.withQuery.description", "N√£o encontramos nada para")}{" "}
              <span className="text-white/80 font-medium">&ldquo;{query}&rdquo;</span>
              <br />
              {t("search:empty.withQuery.suggestion", "Tente termos mais gerais ou explore nossa cole√ß√£o")}
            </>
          ) : (
            t("search:empty.noQuery.description", "Digite o que procura ou explore nossas categorias")
          )}
        </p>

        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Action buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
          {query && onClearFilters && (
            <Button variant="ghost" size="lg" onClick={onClearFilters}>
              <Filter className="w-4 h-4 mr-2" />
              {t("search:empty.actions.clearFilters", "Limpar filtros")}
            </Button>
          )}
          
          {onNewSearch && (
            <Button variant="ghost" size="lg" onClick={onNewSearch}>
              <RotateCcw className="w-4 h-4 mr-2" />
              {t("search:empty.actions.newSearch", "Nova busca")}
            </Button>
          )}
          
          <Button variant="primary" size="lg">
            {t("common:cta.exploreAll", "Explorar tudo")}
          </Button>
        </div>

        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Search suggestions */}
        <motion.div 
          className="mt-12"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
        >
          <p className="text-sm text-white/40 mb-4">
            {t("search:empty.suggestions.title", "Termos populares:")}
          </p>
          <div className="flex flex-wrap gap-2 justify-center">
            {["oversized", "cl√°ssico", "premium", "essencial"].map((term) => (
              <button
                key={term}
                className="px-3 py-1 text-sm border border-white/15 text-white/60 hover:text-white/80 hover:border-white/25 rounded-full transition-colors duration-150"
              >
                {term}
              </button>
            ))}
          </div>
        </motion.div>
      </motion.div>
    </motion.div>
  );
}


      üìÑ WishlistEmpty.tsx

============================================================
FILE: src\components\EmptyStates\WishlistEmpty.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Polished empty wishlist state
"use client";

import { motion } from "framer-motion";
import { Heart, Sparkles } from "lucide-react";
import { useTranslation } from "next-i18next";
import Link from "next/link";
import { Button } from "@/components/ui/Button";

export default function WishlistEmpty() {
  const { t } = useTranslation(["common", "wishlist"]);

  return (
    <motion.div 
      className="text-center py-20 px-6"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, ease: [0.2, 0, 0, 1] }}
    >
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Elegant heart illustration */}
      <motion.div 
        className="relative mx-auto w-36 h-36 mb-8"
        initial={{ scale: 0.8, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 0.8, delay: 0.2 }}
      >
        <div className="absolute inset-0 rounded-full bg-gradient-to-br from-white/5 to-white/15 border border-white/10" />
        <div className="absolute inset-6 rounded-full bg-gradient-to-br from-white/10 to-white/20 border border-white/20 backdrop-blur-sm" />
        
        <div className="absolute inset-0 flex items-center justify-center">
          <Heart 
            className="w-14 h-14 text-white/60" 
            strokeWidth={1.5}
          />
        </div>
        
        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Floating sparkles */}
        <motion.div
          className="absolute -top-1 left-8 w-4 h-4 rounded-full bg-white/20 border border-white/30 flex items-center justify-center"
          animate={{ 
            scale: [1, 1.2, 1],
            rotate: [0, 180, 360],
            opacity: [0.3, 0.7, 0.3]
          }}
          transition={{ duration: 4, repeat: Infinity, ease: "easeInOut" }}
        >
          <Sparkles className="w-2 h-2 text-white/60" />
        </motion.div>
        
        <motion.div
          className="absolute -bottom-1 right-6 w-3 h-3 rounded-full bg-white/15 border border-white/25"
          animate={{ 
            y: [-3, 3, -3],
            opacity: [0.4, 0.8, 0.4]
          }}
          transition={{ duration: 3.5, repeat: Infinity, ease: "easeInOut", delay: 1 }}
        />
      </motion.div>

      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Content with luxury tone */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.4 }}
      >
        <h3 className="text-2xl font-bold text-white/90 mb-4">
          {t("wishlist:empty.title", "Seus favoritos aguardam")}
        </h3>
        
        <p className="text-white/60 text-lg mb-8 max-w-lg mx-auto leading-relaxed">
          {t("wishlist:empty.description", "Salve as pe√ßas que capturam sua ess√™ncia e volte quando estiver pronto para decidir")}
        </p>

        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Call to action */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
          <Link href="/pt/loja">
            <Button variant="primary" size="lg">
              {t("common:cta.discover", "Descobrir pe√ßas")}
            </Button>
          </Link>
          
          <Link href="/pt">
            <Button variant="ghost" size="lg">
              {t("common:cta.home", "Voltar ao in√≠cio")}
            </Button>
          </Link>
        </div>

        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Subtle tip */}
        <motion.div 
          className="mt-12 text-sm text-white/40 flex items-center justify-center gap-2"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
        >
          <Heart className="w-3 h-3" />
          {t("wishlist:empty.tip", "Toque no cora√ß√£o para salvar suas pe√ßas favoritas")}
        </motion.div>
      </motion.div>
    </motion.div>
  );
}


    üìÑ Layout.tsx

============================================================
FILE: src\components\Layout.tsx
============================================================
// src/components/Layout.tsx
import { useCartDrawer } from "@/context/CartContext";
import Navbar from "./Navbar";
import { CartDrawerCore } from "@/core/Cart/CartDrawerCore";
import { PropsWithChildren } from "react";

/**
 * Layout principal da aplica√ß√£o, incluindo Navbar e CartDrawer.
 * Padr√£o FAANG com m√°xima acessibilidade e visual premium.
 */
export default function Layout({ children }: PropsWithChildren) {
  const { isCartOpen, closeCart } = useCartDrawer();

  return (
    <div className="min-h-screen bg-gradient-to-br from-black via-neutral-900 to-yellow-50 text-white">
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Skip link para navega√ß√£o A11y + neutraliza√ß√£o de layout */}
      <a 
        href="#conteudo" 
        className="sr-only focus:not-sr-only focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 absolute left-2 top-2 z-50 px-3 py-2 rounded-2xl bg-black/60 backdrop-blur text-white"
      >
        Pular para conte√∫do
      </a>
      <Navbar />
      <main
        id="conteudo"
        role="main"
        tabIndex={-1} // Ajuda na acessibilidade, o usu√°rio pode pular direto para o conte√∫do
        className="pt-20 pb-10 max-w-7xl mx-auto px-4"
      >
        {children}
      </main>
      <CartDrawerCore open={isCartOpen} onClose={closeCart} />
    </div>
  );
}



    üìÑ Loader.tsx

============================================================
FILE: src\components\Loader.tsx
============================================================
// components/Loader.tsx
import React from 'react';

export function Loader() {
  return (
    <div style={{ textAlign: "center", padding: 24 }}>
      <div className="loader" />
      <style jsx>{`
        .loader {
          border: 4px solid #555;
          border-top: 4px solid #FFD700;
          border-radius: 50%;
          width: 32px;
          height: 32px;
          animation: spin 0.8s linear infinite;
        }
        @keyframes spin {
          to { transform: rotate(360deg); }
        }
      `}</style>
      <span style={{ color: "#FFD700", fontWeight: "bold" }}>Carregando...</span>
    </div>
  );
}



    üìÑ LoginButton.tsx

============================================================
FILE: src\components\LoginButton.tsx
============================================================
// src/components/LoginButton.tsx
import { signIn, signOut, useSession } from "next-auth/react";

export default function LoginButton() {
  const { data: session, status } = useSession();

  if (status === "loading") return <button disabled>Carregando...</button>;

  if (session) {
    return (
      <div className="flex items-center gap-2">
        <span>Ol√°, {session.user?.name || session.user?.email}!</span>
        <button
          className="bg-red-500 text-white rounded px-4 py-2"
          onClick={() => signOut()}
        >
          Sair
        </button>
      </div>
    );
  }

  return (
    <button
      className="bg-blue-500 text-white rounded px-4 py-2"
      onClick={() => signIn()} // abre a tela do NextAuth
    >
      Entrar
    </button>
  );
}



    üìÑ LogoSVG.tsx

============================================================
FILE: src\components\LogoSVG.tsx
============================================================
// INSANYCK STEP 3
"use client";

import * as React from "react";

type LogoVariant = "primary" | "mono" | "outline";
type LogoSize = "xs" | "sm" | "md" | "lg" | "xl";

export type LogoProps = {
  variant?: LogoVariant;
  size?: LogoSize;
  glow?: boolean;
  ariaLabel?: string;
  className?: string;
};

const SIZE_MAP: Record<LogoSize, number> = {
  xs: 72,
  sm: 96,
  md: 120,
  lg: 160,
  xl: 200,
};

export function LogoSVG({
  variant = "primary",
  size = "sm",
  glow = false,
  ariaLabel = "INSANYCK",
  className = "",
}: LogoProps) {
  const src =
    variant === "mono"
      ? "/public/brand/logo-mono.svg".replace("/public", "")
      : variant === "outline"
      ? "/public/brand/logo-outline.svg".replace("/public", "")
      : "/public/brand/logo.svg".replace("/public", "");
  const height = SIZE_MAP[size];

  return (
    <span
      className={[
        "inline-flex items-center",
        glow ? "drop-shadow-[0_0_12px_rgba(255,255,255,0.25)]" : "",
        className,
      ].join(" ")}
      aria-label={ariaLabel}
    >
      {/* usando <img> para manter o <text> do SVG tempor√°rio at√© trocarmos por <path> */}
      <img src={src} alt={ariaLabel} height={height} style={{ height }} />
    </span>
  );
}

export default LogoSVG;



    üìÑ MiniCart.tsx

============================================================
FILE: src\components\MiniCart.tsx
============================================================
// INSANYCK STEP 6/7 + HOTFIX ‚Äî Mini-Cart premium (acess√≠vel, i18n consistente, Portal, global)
// src/components/MiniCart.tsx
"use client";

import { useEffect, useRef } from "react";
import Link from "next/link";
import { motion, AnimatePresence } from "framer-motion";
import { useTranslation } from "next-i18next";
import { useCartStore, useCartHydrated } from "@/store/cart";
import { formatPrice } from "@/lib/price";
import Portal from "@/components/Portal";

export default function MiniCart() {
  const isOpen = useCartStore((s) => s.isOpen);
  const toggle = useCartStore((s) => s.toggle);
  const items = useCartStore((s) => s.items);
  const inc = useCartStore((s) => s.inc);
  const dec = useCartStore((s) => s.dec);
  const removeItem = useCartStore((s) => s.removeItem);
  const subtotalCents = useCartStore((s) => s.subtotalCents());
  const hydrated = useCartHydrated();
  const { i18n, t } = useTranslation(["bag", "cart"]); // padroniza "bag" como prim√°rio

  const locale = i18n.language?.startsWith("en") ? "en" : "pt";
  const refPanel = useRef<HTMLDivElement>(null);

  // A11y: foco inicial + ESC fecha
  useEffect(() => {
    if (!isOpen) return;
    const first = refPanel.current?.querySelector<HTMLElement>("[data-autofocus]");
    first?.focus();
    const onKey = (e: KeyboardEvent) => e.key === "Escape" && toggle(false);
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, [isOpen, toggle]);

  // Trap de foco simples
  useEffect(() => {
    if (!isOpen) return;
    const root = refPanel.current!;
    const selectors = 'a,button,input,select,textarea,[tabindex]:not([tabindex="-1"])';
    const focusables = () =>
      Array.from(root.querySelectorAll<HTMLElement>(selectors)).filter(
        (el) => !el.hasAttribute("disabled")
      );
    const onKeyDown = (e: KeyboardEvent) => {
      if (e.key !== "Tab") return;
      const f = focusables();
      const first = f[0];
      const last = f[f.length - 1];
      if (!first || !last) return;
      if (e.shiftKey && document.activeElement === first) {
        e.preventDefault();
        last.focus();
      } else if (!e.shiftKey && document.activeElement === last) {
        e.preventDefault();
        first.focus();
      }
    };
    root.addEventListener("keydown", onKeyDown as any);
    return () => root.removeEventListener("keydown", onKeyDown as any);
  }, [isOpen]);

  // N√£o renderizar at√© hidratado (evita mismatch SSR)
  if (!hydrated) {
    return null;
  }

  return (
    <Portal>
      <AnimatePresence>
        {isOpen && (
          <>
            {/* Overlay */}
            <motion.div
              key="overlay"
              className="fixed inset-0 bg-black/60 backdrop-blur-[2px] z-50"
              role="presentation"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              onClick={() => toggle(false)}
            />

            {/* Drawer */}
            <motion.div
              key="panel"
              ref={refPanel}
              role="dialog"
              aria-modal="true"
              aria-labelledby="minicart-title"
              className="fixed top-0 right-0 h-full w-[380px] max-w-[calc(100vw-48px)] bg-[#0f0f10]/85 border-l border-white/12 shadow-2xl backdrop-blur-md z-50 text-white"
              initial={{ x: 420 }}
              animate={{ x: 0 }}
              exit={{ x: 420 }}
              transition={{ type: "tween", duration: 0.25 }}
            >
            {/* Cabe√ßalho + halo sutil */}
            <div className="relative">
              <div
                aria-hidden
                className="pointer-events-none absolute inset-x-0 -top-6 h-16"
                style={{
                  background:
                    "radial-gradient(60% 100% at 50% 0%, rgba(255,255,255,0.18) 0%, rgba(255,255,255,0.06) 30%, rgba(255,255,255,0.0) 70%)",
                }}
              />
              <div className="flex items-center justify-between px-5 py-4 border-b border-white/10">
                <h2
                  id="minicart-title"
                  className="text-white/90 text-lg font-semibold"
                  tabIndex={-1}
                  data-autofocus
                >
                  {t("bag:title", "Sua sacola")}
                </h2>
                <button
                  onClick={() => toggle(false)}
                  aria-label={t("cart:close", "Fechar")}
                  className="rounded-md px-2 py-1 hover:bg-white/10"
                >
                  ‚úï
                </button>
              </div>
            </div>

            {/* Lista */}
            <div className="h-[calc(100%-188px)] overflow-auto px-5 py-3 space-y-3">
              {items.length === 0 ? (
                <p className="text-white/60 py-10">{t("bag:empty", "Sua sacola est√° vazia.")}</p>
              ) : (
                items.map((it) => (
                  <div
                    key={it.id}
                    className="flex gap-3 items-center border border-white/10 rounded-xl p-3 bg-black/30"
                  >
                    {/* eslint-disable-next-line @next/next/no-img-element */}
                    <img
                      src={it.image || "/products/placeholder/front.webp"}
                      alt={it.title}
                      className="w-16 h-16 rounded-lg object-cover"
                      loading="lazy"
                      decoding="async"
                    />
                    <div className="flex-1 min-w-0">
                      <div className="text-white/90 font-medium truncate">{it.title}</div>
                      {it.options?.variant ? (
                        <div className="text-white/50 text-xs mt-0.5">{it.options.variant}</div>
                      ) : null}
                      <div className="text-white/70 text-sm mt-1">
                        {formatPrice(it.priceCents, locale as any)}
                      </div>
                    </div>
                    <div className="flex items-center gap-2">
                      <button
                        aria-label={t("cart:qty", "Qtd") + " -"}
                        onClick={() => dec(it.id)}
                        className="w-7 h-7 rounded-md border border-white/20 hover:bg-white/10"
                      >
                        ‚àí
                      </button>
                      <span className="w-6 text-center">{it.qty}</span>
                      <button
                        aria-label={t("cart:qty", "Qtd") + " +"}
                        onClick={() => inc(it.id)}
                        className="w-7 h-7 rounded-md border border-white/20 hover:bg-white/10"
                      >
                        +
                      </button>
                    </div>
                    <button
                      aria-label={t("cart:remove", "Remover")}
                      onClick={() => removeItem(it.id)}
                      className="ml-2 text-white/60 hover:text-white"
                      title={t("cart:remove", "Remover")}
                    >
                      ‚úï
                    </button>
                  </div>
                ))
              )}
            </div>

            {/* Footer */}
            <div className="absolute bottom-0 left-0 right-0 border-t border-white/10 p-5 bg-black/40">
              <div className="flex items-center justify-between text-white/80">
                <span>{t("bag:subtotal", "Subtotal")}</span>
                <strong className="text-white">{formatPrice(subtotalCents, locale as any)}</strong>
              </div>
              <div className="mt-4 flex gap-3">
                {/* CTA ‚Äî fecha o drawer usando o MESMO store */}
                <Link
                  href="/checkout"
                  className="flex-1 text-center rounded-xl px-4 py-3 font-semibold border border-white/20 text-white hover:bg-white/5"
                  onClick={() => toggle(false)}
                >
                  {t("bag:checkoutCta", "Ir para checkout")}
                </Link>
                <Link
                  href="/sacola"
                  className="rounded-xl px-4 py-3 font-semibold bg-white text-black hover:brightness-95"
                  onClick={() => toggle(false)}
                >
                  {t("bag:viewBag", "Ver sacola")}
                </Link>
              </div>
            </div>
            </motion.div>
          </>
        )}
      </AnimatePresence>
    </Portal>
  );
}



    üìÑ Navbar.tsx

============================================================
FILE: src\components\Navbar.tsx
============================================================
// INSANYCK STEP 9 ‚Äî Navbar com favoritos + hideCart (FIX hooks)
"use client";

import React, { useEffect, useState } from "react";
import Link from "next/link";
import { useRouter } from "next/router";
import { Search, ShoppingBag, Heart } from "lucide-react";
import { useTranslation } from "next-i18next";

import dynamic from "next/dynamic";
import { useCartCount, useCartStore } from "@/store/cart";

// Mantidos (SearchBox/MiniCart)
const SearchBox = dynamic(() => import("@/components/SearchBox"), { ssr: false });
const MiniCart = dynamic(() => import("@/components/MiniCart"), { ssr: false });

// Wishlist (seu store real)
import { useWishlist } from "@/store/wishlist";

// NextAuth (UserMenu usa)
import { useSession } from "next-auth/react";

export default function Navbar() {
  const router = useRouter();
  const { t, i18n } = useTranslation(["nav"]);
  const currentLocale = i18n?.language || (router as any).locale || "pt";

  // esconder sacola/favoritos em rotas sens√≠veis
  const { pathname } = useRouter();
  const hideCart =
    pathname.startsWith("/checkout") || pathname.startsWith("/conta/pagamento");

  // Idioma
  function switchLocale(nextLocale: "pt" | "en") {
    if (nextLocale === currentLocale) return;
    const asPath = (router as any).asPath || "/";
    (router as any).push(asPath, asPath, { locale: nextLocale });
  }

  // Carrinho
  const count = useCartCount();
  const toggleCart = useCartStore((s) => s.toggle);

  // ---------- FIX CR√çTICO DE HOOKS ----------
  // Chame o hook SEMPRE (nunca condicional)
  const wishlistLen = useWishlist((s) => s.items.length);
  // Hidrata√ß√£o: s√≥ exibimos o n√∫mero depois de montar
  const [mounted, setMounted] = useState(false);
  useEffect(() => setMounted(true), []);
  const wishlistCount = mounted ? wishlistLen : 0;
  // -----------------------------------------

  return (
    <header
      className="
        fixed inset-x-0 top-0 z-50
        backdrop-blur-[10px]
        bg-[rgba(10,10,10,.42)]
        border-b border-[rgba(255,255,255,.08)]
      "
      role="navigation"
      aria-label={t("nav:aria.mainNav", "Principal")}
    >
      <div className="mx-auto max-w-[1280px] px-6 py-4 flex items-center justify-between">
        {/* Logo */}
        <Link
          href="/"
          aria-label={t("nav:aria.goHome", "Ir para a Home")}
          className="flex items-center"
        >
          <span
            className="text-[20px] font-medium text-white/90 tracking-[0.15em] select-none"
            style={{ textTransform: "uppercase" }}
          >
            INSANYCK
          </span>
        </Link>

        {/* Links centrais */}
        <nav className="hidden md:flex items-center gap-12 text-[16px] text-white/82">
          <Link 
            href="/novidades" 
            prefetch={true}
            className="hover:text-white/95 transition-colors duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black rounded-lg px-2 py-1"
          >
            {t("nav:links.novidades", "Novidades")}
          </Link>
          <Link 
            href="/loja" 
            prefetch={true}
            className="hover:text-white/95 transition-colors duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black rounded-lg px-2 py-1"
          >
            {t("nav:links.loja", "Loja")}
          </Link>
          <Link 
            href="/colecao" 
            prefetch={true}
            className="hover:text-white/95 transition-colors duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black rounded-lg px-2 py-1"
          >
            {t("nav:links.colecao", "Cole√ß√£o")}
          </Link>
        </nav>

        {/* A√ß√µes (direita) */}
        <div className="flex items-center gap-6">
          {/* Switcher idioma */}
          <div
            className="hidden sm:flex items-center gap-2 text-white/70 text-[12px] leading-none select-none"
            aria-label={t("nav:aria.language", "Idioma")}
          >
            <button
              type="button"
              onClick={() => switchLocale("pt")}
              className={`px-2 py-1 rounded-[6px] border border-white/10 hover:border-white/25 hover:text-white/95 hover:bg-white/5 transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-1 ${
                String(currentLocale).startsWith("pt") ? "text-white border-white/20 bg-white/5" : ""
              }`}
              aria-pressed={String(currentLocale).startsWith("pt")}
            >
              PT
            </button>
            <span className="opacity-40">/</span>
            <button
              type="button"
              onClick={() => switchLocale("en")}
              className={`px-2 py-1 rounded-[6px] border border-white/10 hover:border-white/25 hover:text-white/95 hover:bg-white/5 transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-1 ${
                String(currentLocale).startsWith("en") ? "text-white border-white/20 bg-white/5" : ""
              }`}
              aria-pressed={String(currentLocale).startsWith("en")}
            >
              EN
            </button>
          </div>

          {/* Mantidos do seu projeto */}
          <SearchBox />
          <UserMenu />

          {/* Link para buscar (mantido) */}
          <Link
            href="/buscar"
            prefetch={true}
            aria-label={t("nav:aria.search", "Pesquisar")}
            className="text-white/80 hover:text-white/95 transition-colors duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black rounded-lg p-2"
          >
            {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Sr-only text para √≠cone */}
            <span className="sr-only">{t("nav:aria.search", "Pesquisar")}</span>
            <Search size={22} strokeWidth={1.5} aria-hidden="true" focusable="false" />
          </Link>

          {/* Favoritos (com contador) ‚Äî oculta em checkout/pagamento */}
          {!hideCart && (
            <Link
              href="/favoritos"
              prefetch={true}
              aria-label="Favoritos"
              className="relative text-white/80 hover:text-white/95 transition-colors duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black rounded-lg p-2"
            >
              {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Sr-only text para √≠cone */}
              <span className="sr-only">Favoritos</span>
              <Heart size={22} strokeWidth={1.5} aria-hidden="true" focusable="false" />
              {wishlistCount > 0 && (
                <span className="absolute -top-1.5 -right-1.5 min-w-4 h-4 px-1 rounded-full bg-white text-black text-[10px] leading-4 font-semibold ring-1 ring-black/10 text-center">
                  {wishlistCount}
                </span>
              )}
            </Link>
          )}

          {/* Sacola (drawer) ‚Äî oculta em checkout/pagamento */}
          {!hideCart && (
            <button
              type="button"
              onClick={() => toggleCart(true)}
              aria-label={t("nav:aria.cart", "Carrinho")}
              className="relative text-white/80 hover:text-white/95 transition-colors duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black rounded-lg p-2"
            >
              {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Sr-only text para √≠cone */}
              <span className="sr-only">{t("nav:aria.cart", "Carrinho")}</span>
              <ShoppingBag size={22} strokeWidth={1.5} aria-hidden="true" focusable="false" />
              {count > 0 && (
                <span className="absolute -top-1.5 -right-1.5 min-w-4 h-4 px-1 rounded-full bg-white text-black text-[10px] leading-4 font-semibold ring-1 ring-black/10 text-center">
                  {count}
                </span>
              )}
            </button>
          )}
        </div>
      </div>

      {/* Drawer Mini-Cart (lazy) */}
      {!hideCart && <MiniCart />}
    </header>
  );
}

/* ======================= Mantido ‚Äî UserMenu ======================= */
function UserMenu() {
  const { data: session, status } = useSession();

  if (status !== "authenticated") {
    return (
      <Link
        href="/conta/login"
        prefetch={true}
        className="text-white/80 hover:text-white/95 transition-all duration-150 px-2 py-1 rounded-lg border border-white/10 hover:border-white/25 hover:bg-white/5 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black"
      >
        Entrar
      </Link>
    );
  }

  const name = session?.user?.name ?? session?.user?.email ?? "Conta";

  return (
    <div className="relative group">
      <button className="text-white/80 hover:text-white/95 transition-all duration-150 px-2 py-1 rounded-lg border border-white/10 hover:border-white/25 hover:bg-white/5 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black">
        {String(name).split(" ")[0]}
      </button>
      <div className="absolute right-0 mt-2 hidden group-hover:block rounded-2xl border border-white/10 bg-black/70 backdrop-blur-md shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] p-2 w-[220px] z-[60]">
        <Link className="block px-3 py-2 text-white/80 hover:text-white/95 hover:bg-white/8 rounded-lg transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-1" href="/conta" prefetch={true}>
          Minha conta
        </Link>
        <Link className="block px-3 py-2 text-white/80 hover:text-white/95 hover:bg-white/8 rounded-lg transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-1" href="/conta/pedidos" prefetch={true}>
          Pedidos
        </Link>
        <Link className="block px-3 py-2 text-white/80 hover:text-white/95 hover:bg-white/8 rounded-lg transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-1" href="/favoritos" prefetch={true}>
          Favoritos
        </Link>
        <form method="post" action="/api/auth/signout" className="mt-1">
          <button className="w-full text-left px-3 py-2 text-white/70 hover:text-white/95 hover:bg-white/8 rounded-lg transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-1">
            Sair
          </button>
        </form>
      </div>
    </div>
  );
}



    üìÑ OrderSummary.tsx

============================================================
FILE: src\components\OrderSummary.tsx
============================================================
// INSANYCK STEP 7 ‚Äî Order Summary refinado (usa lib/price, mant√©m sua API)
// src/components/OrderSummary.tsx
"use client";

import * as React from "react";
import { useTranslation } from "next-i18next";
import { formatPrice, Locale } from "@/lib/price";

export type OrderSummaryProps = {
  subtotalCents: number;
  shippingCents?: number;
  discountCents?: number;
  locale?: Locale;
  className?: string;
  noteBelow?: React.ReactNode;
};

export default function OrderSummary({
  subtotalCents,
  shippingCents = 0,
  discountCents = 0,
  locale = "pt",
  className = "",
  noteBelow,
}: OrderSummaryProps) {
  const { t } = useTranslation(["bag", "checkout"]);
  const total = Math.max(0, subtotalCents + shippingCents - discountCents);

  return (
    <aside
      className={`rounded-2xl border border-white/10 bg-black/40 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] p-5 ${className}`}
      aria-label={t("bag:summary", "Resumo do pedido")}
    >
      <h2 className="text-white/90 text-lg font-semibold">
        {t("checkout:orderSummary", "Resumo do pedido")}
      </h2>

      <div className="mt-4 space-y-3 text-white/80 text-sm">
        <div className="flex items-center justify-between">
          <span>{t("bag:subtotal", "Subtotal")}</span>
          <span className="font-medium">{formatPrice(subtotalCents, locale)}</span>
        </div>
        <div className="flex items-center justify-between">
          <span>{t("bag:shipping", "Frete")}</span>
          <span>
            {shippingCents > 0 ? formatPrice(shippingCents, locale) : t("bag:free", "Gr√°tis")}
          </span>
        </div>
        {discountCents > 0 && (
          <div className="flex items-center justify-between text-emerald-400/90">
            <span>{t("bag:discount", "Desconto")}</span>
            <span>-{formatPrice(discountCents, locale)}</span>
          </div>
        )}
        <div className="h-px bg-white/10 my-2" />
        <div className="flex items-center justify-between text-white">
          <span className="font-semibold">{t("bag:total", "Total")}</span>
          <span className="font-semibold">{formatPrice(total, locale)}</span>
        </div>
      </div>

      {noteBelow ? <p className="mt-3 text-xs text-white/50">{noteBelow}</p> : null}
    </aside>
  );
}



    üìÑ PdpGallery.tsx

============================================================
FILE: src\components\PdpGallery.tsx
============================================================
// INSANYCK ¬∑ PDP 3D fallback est√°vel (sem deps, zero-CLS)
import React from "react";
import dynamic from "next/dynamic";
import { useEffect, useState, ErrorInfo } from "react";
import OptimizedImage from "@/components/ui/OptimizedImage";

// Use o viewer 3D j√° existente no repo (ajuste o path se necess√°rio):
const Product3DView = dynamic(() => import("@/components/three/Product3DView"), { 
  ssr: false,
  loading: () => (
    <div className="w-full bg-white/5 rounded-2xl flex items-center justify-center" style={{ aspectRatio: "3 / 4" }}>
      <div className="text-white/60 text-sm animate-pulse">Carregando 3D...</div>
    </div>
  )
});

const BACKEND_DISABLED =
  process.env.NEXT_PUBLIC_BACKEND_DISABLED === "1" || process.env.BACKEND_DISABLED === "1";

interface Product {
  id: string;
  title: string;
  image: string | null;
  model3d?: { url: string };
}

// Simple error boundary for 3D model
class Model3DErrorBoundary extends React.Component<
  { children: React.ReactNode; onError: () => void },
  { hasError: boolean }
> {
  constructor(props: { children: React.ReactNode; onError: () => void }) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(): { hasError: boolean } {
    return { hasError: true };
  }

  componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    if (!BACKEND_DISABLED) {
      console.error("3D model error boundary caught:", error, errorInfo);
    }
    this.props.onError();
  }

  render() {
    if (this.state.hasError) {
      return null;
    }
    return this.props.children;
  }
}

export default function PdpGallery({ product }: { product: Product }) {
  const [can3D, setCan3D] = useState(false);
  const [has3DError, setHas3DError] = useState(false);

  const hero = product?.image || "/products/placeholder/front.webp";
  const modelUrl = product?.model3d?.url;

  useEffect(() => {
    if (BACKEND_DISABLED) return setCan3D(false);
    if (typeof window === "undefined") return setCan3D(false);
    setCan3D(!!(window as any).WebGLRenderingContext);
  }, []);

  const show3D = can3D && !!modelUrl && !has3DError;

  const handleModelError = () => {
    if (!BACKEND_DISABLED) console.error("3D model failed to load, falling back to image");
    setHas3DError(true);
  };

  return (
    <section aria-label="Galeria do produto" className="overflow-hidden rounded-2xl bg-white/5">
      <div className="relative w-full" style={{ aspectRatio: "3 / 4" }} data-testid="pdp-hero">
        {show3D ? (
          <div data-testid="model-viewer" className="w-full h-full">
            <Model3DErrorBoundary onError={handleModelError}>
              <Product3DView modelUrl={modelUrl!} />
            </Model3DErrorBoundary>
          </div>
        ) : (
          <OptimizedImage
            src={hero}
            alt={`${product?.title} ‚Äî Imagem do produto`}
            aspectRatio="3/4"
            sizes="(max-width: 768px) 100vw, 50vw"
            className="object-contain"
            priority
            loading="eager"
            fallbackSrc="/products/placeholder/front.webp"
          />
        )}
      </div>
      {/* n√£o alterar thumbs/controles existentes */}
    </section>
  );
}


    üìÑ Portal.tsx

============================================================
FILE: src\components\Portal.tsx
============================================================
// INSANYCK HOTFIX ‚Äî Portal React para document.body
"use client";

import { ReactNode, useLayoutEffect, useState } from "react";
import { createPortal } from "react-dom";

interface PortalProps {
  children: ReactNode;
}

export default function Portal({ children }: PortalProps) {
  const [mounted, setMounted] = useState(false);

  useLayoutEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted || typeof window === "undefined") {
    return null;
  }

  return createPortal(children, document.body);
}


    üìÑ ProductCard.tsx

============================================================
FILE: src\components\ProductCard.tsx
============================================================
// INSANYCK STEP 11 ‚Äî ProductCard with Real Prisma Types
"use client";

import Link from "next/link";
import { motion } from "framer-motion";
import { ProductCardData } from "@/types/product";
import { useTranslation } from "next-i18next";
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Import OptimizedImage for zero CLS
import OptimizedImage from "@/components/ui/OptimizedImage";

// INSANYCK STEP 6 ‚Äî bot√£o de carrinho
import AddToCartButton from "@/components/AddToCartButton";

// INSANYCK STEP 8 ‚Äî bot√£o de favoritos
import WishlistButton from "@/components/WishlistButton"; // INSANYCK STEP 8

type Props = { product: ProductCardData };

export default function ProductCard({ product }: Props) {
  const { t } = useTranslation(["plp", "cart", "common"]);

  const img =
    product.thumbs?.front ||
    product.images?.front ||
    "/products/placeholder/front.webp";

  // INSANYCK STEP 11 ‚Äî converte pre√ßo para centavos (aceita string "R$ 199,90" ou number)
  const priceCents =
    typeof product.price === "number"
      ? Math.round(product.price * 100)
      : (() => {
          const val = Number(
            String(product.price)
              .replace(/[^\d,.-]/g, "") // remove s√≠mbolos e espa√ßos
              .replace(/\./g, "")        // remove separadores de milhar
              .replace(",", ".")         // v√≠rgula -> ponto decimal
          );
          return Number.isFinite(val) ? Math.round(val * 100) : 0;
        })();

  return (
    <motion.article
      whileHover={{ y: -3, borderColor: "rgba(255,255,255,0.15)" }}
      transition={{ duration: 0.15, ease: [0.2, 0, 0, 1] }}
      className="rounded-2xl border border-white/10 bg-black/40 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] overflow-hidden focus-within:ring-2 focus-within:ring-white/40 focus-within:ring-offset-2 focus-within:ring-offset-black"
    >
      {/* √Årea clic√°vel (imagem + t√≠tulo) */}
      <Link
        href={`/produto/${product.slug}`}
        prefetch
        className="block group focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black rounded-2xl"
        aria-label={`Ver detalhes de ${product.title}`}
      >
        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî OptimizedImage para zero CLS */}
        <OptimizedImage
          src={img}
          alt={`${product.title} ‚Äî ${t("common:aria.productImage", "Imagem do produto")}`}
          aspectRatio="3/4"
          fallbackSrc="/products/placeholder/front.webp"
          sizes="(max-width: 640px) 50vw, (max-width: 1024px) 33vw, 25vw"
          className="transition-transform duration-300 group-hover:scale-[1.02]"
          loading="lazy"
        />
      </Link>

      {/* Conte√∫do textual + a√ß√µes */}
      <div className="p-4">
        <div className="flex items-start justify-between">
          <h3 className="text-white/90 text-lg font-semibold insanyck-reset-text">
            {product.title}
          </h3>
          {product.status === "new" ? (
            <span className="ml-3 text-xs rounded-full px-2 py-1 bg-white/10 text-white/80">
              {t("plp:badge.new", "Novo")}
            </span>
          ) : null}
          {product.status === "soldout" ? (
            <span className="ml-3 text-xs rounded-full px-2 py-1 bg-white/5 text-white/50 border border-white/10">
              {t("plp:badge.soldout", "Esgotado")}
            </span>
          ) : null}
        </div>

        <div className="mt-2 text-white/70">{product.price}</div>

        {/* A√ß√µes ‚Äì mant√©m visual; adiciona carrinho sem alterar layout */}
        <div className="mt-4 flex gap-3 items-center">
          <Link
            href={`/produto/${product.slug}`}
            prefetch
            className="rounded-xl px-4 py-2 text-sm font-semibold border border-white/15 text-white hover:bg-white/8 hover:border-white/25 active:bg-white/12 transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black"
          >
            {t("plp:viewDetails", "Ver detalhes")}
          </Link>

          {/* INSANYCK STEP 6 ‚Äî bot√£o de adicionar ao carrinho */}
          <AddToCartButton
            product={{
              slug: product.slug,
              title: product.title,
              image: img,
              price: product.price, // componente converte se for string
            }}
            className="rounded-xl px-4 py-2 text-sm font-semibold border border-white/15 text-white hover:bg-white/8 hover:border-white/25 active:bg-white/12 transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black"
          >
            {t("cart:addToCart", "Adicionar ao carrinho")}
          </AddToCartButton>

          {/* INSANYCK STEP 8 ‚Äî Wishlist inline (ao lado dos CTAs) */}
          <WishlistButton
            slug={product.slug}
            title={product.title}
            priceCents={priceCents}
            image={img}
          />
        </div>
      </div>
    </motion.article>
  );
}



    üìÑ ProductGrid.tsx

============================================================
FILE: src\components\ProductGrid.tsx
============================================================
// INSANYCK STEP 11 ‚Äî ProductGrid with Real Prisma Types
import ProductCard from "@/components/ProductCard";
import Skeleton from "@/components/Skeleton";
import { ProductCardData } from "@/types/product";

type Props = { items?: ProductCardData[]; className?: string; showSkeleton?: boolean; skeletonCount?: number };

export default function ProductGrid({ items = [], className, showSkeleton = false, skeletonCount = 8 }: Props) {
  const list = Array.isArray(items) ? items : [];
  
  if (showSkeleton && !list.length) {
    return (
      // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Lista sem√¢ntica para produtos + neutraliza√ß√£o de defaults
      <ul role="list" className={`grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 list-none p-0 m-0 ${className || ''}`} aria-live="polite">
        {Array.from({ length: skeletonCount }).map((_, i) => (
          <li key={i} role="listitem" className="contents">
            <article className="rounded-2xl border border-white/10 bg-black/30 p-3">
              <Skeleton.Thumb />
              <div className="mt-3 space-y-2">
                <Skeleton.TextLg className="w-4/5" />
                <Skeleton.Text className="w-2/5" />
              </div>
            </article>
          </li>
        ))}
      </ul>
    );
  }
  
  if (!list.length) {
    return <section className={className} aria-live="polite" />;
  }
  
  return (
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Lista sem√¢ntica para produtos + neutraliza√ß√£o de defaults
    <ul role="list" className={`grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 list-none p-0 m-0 ${className || ''}`}>
      {list.map((p) => (
        <li key={p.id ?? p.slug} role="listitem" className="contents">
          <ProductCard product={p} />
        </li>
      ))}
    </ul>
  );
}



    üìÑ ProductHeroImageKit.tsx

============================================================
FILE: src\components\ProductHeroImageKit.tsx
============================================================
// INSANYCK STEP 5 ‚Äî Hero Cinematogr√°fico (CSS pedestal + luz)
// src/components/ProductHeroImageKit.tsx
"use client";

import { motion, useReducedMotion } from "framer-motion";
import Image from "next/image";
import { ReactNode } from "react";

export type ProductHeroProps = {
  title: string;
  subtitle?: string;
  price?: string;
  image: string;
  imageAlt?: string;
  left?: ReactNode;
  right?: ReactNode;
};

export default function ProductHeroImageKit({
  title,
  subtitle,
  price,
  image,
  imageAlt = title,
  left,
  right,
}: ProductHeroProps) {
  const prefersReducedMotion = useReducedMotion();

  return (
    <section className="relative w-full overflow-hidden" aria-labelledby="pdp-hero-title">
      {/* Fundo premium */}
      <div
        aria-hidden
        className="pointer-events-none absolute inset-0 -z-10"
        style={{
          background:
            "radial-gradient(80% 120% at 50% 20%, rgba(255,255,255,0.06) 0%, rgba(255,255,255,0.03) 22%, rgba(0,0,0,0) 55%)",
          WebkitMaskImage:
            "radial-gradient(90% 120% at 50% 40%, #000 0%, #000 70%, transparent 100%)",
          maskImage:
            "radial-gradient(90% 120% at 50% 40%, #000 0%, #000 70%, transparent 100%)",
        }}
      />

      <div className="mx-auto max-w-[1200px] px-6 pt-20 lg:pt-24">
        <div className="grid grid-cols-1 lg:grid-cols-12 items-center gap-8">
          <div className="lg:col-span-5">
            {left ?? (
              <div className="text-center lg:text-left">
                <h1
                  id="pdp-hero-title"
                  className="text-white/95 text-[44px] leading-tight font-semibold tracking-[-0.01em]"
                >
                  {title}
                </h1>
                {subtitle ? <p className="mt-3 text-white/70 text-lg">{subtitle}</p> : null}
                {price ? (
                  <div className="mt-5 text-white/85 text-xl font-semibold">{price}</div>
                ) : null}
              </div>
            )}
          </div>

          <div className="lg:col-span-7 relative">
            <div className="relative mx-auto h-[440px] w-full max-w-[760px]">
              <style jsx>{`
                .pedestal:before {
                  content: "";
                  position: absolute;
                  left: 50%;
                  transform: translateX(-50%);
                  bottom: 18px;
                  width: 72%;
                  height: 26px;
                  border-radius: 999px;
                  background: radial-gradient(
                    60% 120% at 50% 50%,
                    rgba(0, 0, 0, 0.6) 0%,
                    rgba(0, 0, 0, 0.35) 40%,
                    rgba(0, 0, 0, 0.0) 80%
                  );
                  filter: blur(8px);
                }
                .pedestal:after {
                  content: "";
                  position: absolute;
                  left: 50%;
                  transform: translateX(-50%);
                  bottom: 0;
                  width: 78%;
                  height: 34px;
                  border-radius: 999px;
                  background: linear-gradient(180deg, rgba(20, 20, 20, 1) 0%, rgba(10, 10, 10, 1) 100%);
                  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.04), 0 10px 40px rgba(0, 0, 0, 0.45);
                }
              `}</style>
              <div className="pedestal absolute inset-0" aria-hidden />
              <div
                aria-hidden
                className="pointer-events-none absolute inset-x-0 -top-10 h-40"
                style={{
                  background:
                    "radial-gradient(60% 100% at 50% 0%, rgba(255,255,255,0.14) 0%, rgba(255,255,255,0.06) 30%, rgba(255,255,255,0.0) 70%)",
                }}
              />

              <motion.div
                initial={{ y: prefersReducedMotion ? 0 : -2, rotate: 0 }}
                animate={{
                  y: prefersReducedMotion ? 0 : [-2, -6, -2],
                  rotate: prefersReducedMotion ? 0 : [0, -0.8, 0.6, 0],
                }}
                transition={{
                  duration: prefersReducedMotion ? 0 : 6,
                  ease: "easeInOut",
                  repeat: prefersReducedMotion ? 0 : Infinity,
                }}
                className="relative h-full w-full flex items-end justify-center"
              >
                <div className="relative w-[90%] max-w-[720px] aspect-[3/4]">
                  <Image
                    src={image}
                    alt={imageAlt}
                    priority
                    sizes="(min-width:1024px) 800px, 100vw"
                    fill
                    className="object-contain [mix-blend-mode:multiply] [mask-image:radial-gradient(100%_100%_at_50%_50%,#000_60%,transparent_100%)]"
                  />
                </div>
              </motion.div>
            </div>
          </div>
        </div>

        {right ? <div className="mt-6">{right}</div> : null}
      </div>
    </section>
  );
}
[]


    üìÑ ProductImageView.tsx

============================================================
FILE: src\components\ProductImageView.tsx
============================================================
// INSANYCK STEP 3 ‚Äî Viewer est√°tico (sem WebGL), troca Frente/Verso/Detalhe
"use client";
import React, { useState, useEffect } from "react";
import clsx from "clsx";
import Image from "next/image";

type Variant = "front" | "back" | "detail";

const SRC: Record<Variant, string> = {
  front:  "/hero/front.webp",
  back:   "/hero/back.webp",
  detail: "/hero/detail.webp",
};

export default function ProductImageView({
  initial = "front",
  className,
}: { initial?: Variant; className?: string }) {
  const [variant, setVariant] = useState<Variant>(initial);
  
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Keyboard navigation for gallery
  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if (e.target !== document.body) return; // Only when no input is focused
      
      const variants: Variant[] = ["front", "back", "detail"];
      const currentIndex = variants.indexOf(variant);
      
      if (e.key === "ArrowLeft" || e.key === "ArrowUp") {
        e.preventDefault();
        const nextIndex = currentIndex > 0 ? currentIndex - 1 : variants.length - 1;
        setVariant(variants[nextIndex]);
      } else if (e.key === "ArrowRight" || e.key === "ArrowDown") {
        e.preventDefault();
        const nextIndex = currentIndex < variants.length - 1 ? currentIndex + 1 : 0;
        setVariant(variants[nextIndex]);
      }
    };
    
    window.addEventListener("keydown", handleKeyDown);
    return () => window.removeEventListener("keydown", handleKeyDown);
  }, [variant]);

  return (
    <div
      className={clsx(
        "w-full aspect-[4/3] rounded-2xl bg-black/50 border border-white/10 overflow-hidden relative",
        className
      )}
    >
      {/* Selo no canto (no 3D era '60 FPS') */}
      <div className="absolute right-4 top-3 z-10 text-white/70 text-sm select-none">
        Studio HDR
      </div>

      {/* imagem principal com fade suave */}
      <div className="absolute inset-0">
        <Image
          key={variant}
          src={SRC[variant]}
          alt={`Produto INSANYCK - ${variant === "front" ? "Frente" : variant === "back" ? "Verso" : "Detalhes"}`}
          fill
          priority
          className="object-contain transition-opacity duration-300 opacity-100"
          sizes="(min-width: 1024px) 640px, 100vw"
          onError={(e) => {
            (e.target as HTMLImageElement).src = "/thumbs/placeholder.webp";
          }}
        />
      </div>

      {/* miniaturas/variantes iguais ao mock */}
      <div className="absolute right-4 bottom-4 flex gap-4">
        {([
          { k: "front",  label: "Frente"  },
          { k: "back",   label: "Verso"   },
          { k: "detail", label: "Detalhes"},
        ] as const).map((o) => (
          <button
            key={o.k}
            onClick={() => setVariant(o.k)}
            className={clsx(
              "w-[92px] h-[92px] rounded-xl border text-white/85 text-sm bg-white/[0.04] overflow-hidden relative transition-all duration-150",
              "focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black",
              "hover:border-white/25 hover:bg-white/[0.06]",
              variant === o.k ? "border-white/40 bg-white/[0.08] ring-2 ring-white/20" : "border-white/10"
            )}
            aria-label={`Ver ${o.label.toLowerCase()}`}
            aria-pressed={variant === o.k}
          >
            <Image
              src={`/hero/thumbs/${o.k}.webp`}
              alt={`Thumbnail ${o.label.toLowerCase()}`}
              width={92}
              height={92}
              className="w-full h-full object-cover opacity-95"
              onError={(e) => {
                (e.target as HTMLImageElement).src = "/thumbs/placeholder.webp";
              }}
            />
            <div className="absolute inset-x-0 bottom-1 text-center drop-shadow-[0_1px_1px_rgba(0,0,0,.8)]">
              {o.label}
            </div>
          </button>
        ))}
      </div>
    </div>
  );
}



    üìÅ pwa/
      üìÑ UpdateBanner.tsx

============================================================
FILE: src\components\pwa\UpdateBanner.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî PWA update banner with glass aesthetic
"use client";

import { motion, AnimatePresence } from "framer-motion";
import { useTranslation } from "next-i18next";
import { X, RefreshCw } from "lucide-react";
import { useState } from "react";

interface UpdateBannerProps {
  onUpdate: () => void;
  updating?: boolean;
}

export function UpdateBanner({ onUpdate, updating = false }: UpdateBannerProps) {
  const { t } = useTranslation('common');
  const [dismissed, setDismissed] = useState(false);

  if (dismissed) return null;

  return (
    <AnimatePresence>
      <motion.div
        initial={{ y: -100, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        exit={{ y: -100, opacity: 0 }}
        transition={{ type: "spring", stiffness: 300, damping: 25 }}
        className="fixed top-0 left-0 right-0 z-50 p-4"
        role="status"
        aria-live="polite"
        aria-atomic="true"
        aria-label={t('pwa.updateAvailable', 'App update available')}
      >
        <div className="mx-auto max-w-4xl">
          <div className="bg-black/40 border border-white/10 backdrop-blur-sm rounded-2xl shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] p-4">
            <div className="flex items-center justify-between gap-4">
              <div className="flex items-center gap-3">
                <motion.div
                  animate={{ rotate: updating ? 360 : 0 }}
                  transition={{ 
                    duration: 1, 
                    repeat: updating ? Infinity : 0,
                    ease: "linear"
                  }}
                >
                  <RefreshCw className="h-5 w-5 text-white" aria-hidden="true" />
                </motion.div>
                <div>
                  <p className="text-white font-medium text-sm">
                    {t('pwa.updateTitle', 'Nova vers√£o dispon√≠vel')}
                  </p>
                  <p className="text-white/70 text-xs">
                    {t('pwa.updateDescription', 'Atualize para a vers√£o mais recente do INSANYCK')}
                  </p>
                </div>
              </div>

              <div className="flex items-center gap-2">
                <motion.button
                  onClick={onUpdate}
                  disabled={updating}
                  className="inline-flex items-center justify-center px-4 py-2 bg-white text-black border border-white/20 shadow-sm hover:shadow-md rounded-xl font-semibold text-sm focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 focus-visible:ring-offset-2 focus-visible:ring-offset-black transition-all duration-150 cubic-bezier(0.2, 0, 0, 1) disabled:opacity-50 disabled:cursor-not-allowed"
                  whileHover={!updating ? { 
                    scale: 1.015, 
                    boxShadow: "0 4px 12px rgba(255,255,255,0.1)"
                  } : undefined}
                  whileTap={!updating ? { scale: 0.985 } : undefined}
                  aria-busy={updating}
                >
                  {updating ? t('pwa.updating', 'Atualizando...') : t('pwa.update', 'Atualizar')}
                </motion.button>

                <motion.button
                  onClick={() => setDismissed(true)}
                  className="inline-flex items-center justify-center p-2 bg-transparent text-white/70 hover:text-white border border-white/15 hover:bg-white/5 rounded-xl focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 focus-visible:ring-offset-2 focus-visible:ring-offset-black transition-all duration-150 cubic-bezier(0.2, 0, 0, 1)"
                  whileHover={{ scale: 1.015 }}
                  whileTap={{ scale: 0.985 }}
                  aria-label={t('pwa.dismiss', 'Dispensar')}
                >
                  <X className="h-4 w-4" aria-hidden="true" />
                </motion.button>
              </div>
            </div>
          </div>
        </div>
      </motion.div>
    </AnimatePresence>
  );
}


    üìÑ SearchBox.tsx

============================================================
FILE: src\components\SearchBox.tsx
============================================================
// INSANYCK STEP 11 ‚Äî SearchBox with DB Integration
"use client";

import { useEffect, useRef, useState } from "react";
import Link from "next/link";
import { useTranslation } from "next-i18next";
import { track } from "@/lib/analytics";

type Suggestion = {
  slug: string;
  title: string;
  price: string;
  thumb?: string;
};


export default function SearchBox() {
  const { t } = useTranslation(["search"]);
  const [open, setOpen] = useState(false);
  const [q, setQ] = useState("");
  const [idx, setIdx] = useState(0);
  const [suggestions, setSuggestions] = useState<Suggestion[]>([]);
  const [_loading, setLoading] = useState(false);
  const inputRef = useRef<HTMLInputElement>(null);

  // INSANYCK STEP 11 ‚Äî Fetch suggestions from API
  useEffect(() => {
    if (!q.trim()) {
      setSuggestions([]);
      return;
    }

    const fetchSuggestions = async () => {
      setLoading(true);
      try {
        const response = await fetch(`/api/search?q=${encodeURIComponent(q)}&limit=8`);
        if (!response.ok) throw new Error('Search failed');
        
        const data = await response.json();
        const mapped: Suggestion[] = (data.results || []).map((p: any) => ({
          slug: p.slug,
          title: p.title,
          price: p.price,
          thumb: p.images?.front || "/products/placeholder/front.webp",
        }));
        
        setSuggestions(mapped);
      } catch (error) {
        console.error('[SearchBox] Error:', error);
        setSuggestions([]);
      } finally {
        setLoading(false);
      }
    };

    const timeoutId = setTimeout(fetchSuggestions, 150); // Debounce
    return () => clearTimeout(timeoutId);
  }, [q]);

  const data = suggestions;

  useEffect(() => {
    const onKey = (e: KeyboardEvent) => {
      if ((e.key === "/" || (e.key === "k" && (e.metaKey || e.ctrlKey))) && !open) {
        e.preventDefault();
        setOpen(true);
        setTimeout(() => inputRef.current?.focus(), 0);
      } else if (e.key === "Escape") {
        setOpen(false);
      }
    };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, [open]);

  const onKeyDown = (e: React.KeyboardEvent) => {
    if (!open) return;
    if (e.key === "ArrowDown") {
      e.preventDefault();
      setIdx((v) => Math.min(v + 1, Math.max(0, data.length - 1)));
    } else if (e.key === "ArrowUp") {
      e.preventDefault();
      setIdx((v) => Math.max(0, v - 1));
    } else if (e.key === "Enter" && data[idx]) {
      track("select_suggestion", { slug: data[idx].slug });
    } else if (e.key === "Escape") {
      setOpen(false);
    }
  };

  return (
    <div className="relative">
      <button
        onClick={() => setOpen((v) => !v)}
        className="text-white/80 hover:text-white/95 transition-all duration-150 px-2 py-1 rounded-lg border border-white/10 hover:border-white/25 hover:bg-white/5 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black"
        aria-expanded={open}
        aria-controls="search-dropdown"
      >
        {t("search:open", "Buscar")}
        <span className="ml-2 text-white/40 text-xs">/</span>
      </button>

      {open && (
        <div
          id="search-dropdown"
          role="dialog"
          aria-modal="true"
          aria-labelledby="insanyck-search-label"
          className="absolute right-0 mt-2 w-[380px] rounded-2xl border border-white/10 bg-black/70 backdrop-blur-md shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] p-3 z-[60]"
        >
          <label id="insanyck-search-label" className="sr-only">
            {t("search:label", "Buscar produtos")}
          </label>
          <input
            ref={inputRef}
            value={q}
            onChange={(e) => setQ(e.target.value)}
            onKeyDown={onKeyDown}
            placeholder={t("search:placeholder", "Busque por produtos")}
            className="w-full bg-transparent border border-white/15 rounded-lg px-3 py-2 outline-none text-white placeholder:text-white/40 focus:border-white/40 focus:ring-2 focus:ring-white/20 transition-all duration-150"
            autoComplete="off"
            aria-describedby="search-results"
          />
          <ul id="search-results" role="listbox" className="mt-3 max-h-[300px] overflow-auto flex flex-col gap-2">
            {data.length === 0 && (
              <li className="text-white/60 text-sm px-2 py-3">
                {t("search:empty", "Nenhum resultado")}
              </li>
            )}
            {data.map((s, i) => (
              <li key={s.slug}>
                <Link
                  href={`/produto/${s.slug}`}
                  role="option"
                  aria-selected={i === idx}
                  className={`flex items-center gap-3 rounded-xl border border-white/10 p-2 hover:bg-white/8 hover:border-white/20 transition-all duration-150 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-1 ${
                    i === idx ? "ring-2 ring-white/30 bg-white/5" : ""
                  }`}
                  onClick={() => {
                    track("search", { q });
                    setOpen(false);
                  }}
                >
                  {/* eslint-disable-next-line @next/next/no-img-element */}
                  <img
                    src={s.thumb}
                    alt={s.title}
                    className="w-12 h-12 object-cover rounded-lg border border-white/10"
                    loading="lazy"
                  />
                  <div className="flex-1 min-w-0">
                    <div className="text-white/90 text-sm truncate">{s.title}</div>
                    <div className="text-white/60 text-xs">{s.price}</div>
                  </div>
                </Link>
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
}



    üìÅ seo/
      üìÑ Seo.tsx

============================================================
FILE: src\components\seo\Seo.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî SEO component with dynamic OG, hreflang, and schema
"use client";

import Head from "next/head";
import { useRouter } from "next/router";
import { truncateText, sanitizeHtml } from "@/lib/utils";

export interface SeoProps {
  title?: string;
  description?: string;
  image?: string;
  type?: "website" | "article" | "product";
  noindex?: boolean;
  canonical?: string;
  schema?: Record<string, any> | Record<string, any>[];
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Product-specific props
  price?: number;
  currency?: string;
  availability?: string;
  brand?: string;
}

export default function Seo({
  title,
  description,
  image,
  type = "website",
  noindex = false,
  canonical,
  schema,
  price,
  currency,
  availability,
  brand
}: SeoProps) {
  const router = useRouter();
  const baseUrl = process.env.NEXT_PUBLIC_URL || 'https://insanyck.com';
  
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Get current locale and generate alternates
  const currentLocale = router.locale || 'pt';
  const currentPath = router.asPath.replace(/^\/[a-z]{2}/, '') || '/';
  
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Generate meta content
  const metaTitle = title ? `${title} | INSANYCK` : 'INSANYCK ‚Äî Luxo essencial em movimento';
  const metaDescription = description 
    ? sanitizeHtml(truncateText(description, 155))
    : currentLocale === 'en'
      ? 'Essential luxury in motion. Premium pieces with precise design and magnetic presence.'
      : 'Luxo essencial em movimento. Pe√ßas premium com design preciso e presen√ßa magn√©tica.';
  
  const metaImage = image 
    ? (image.startsWith('http') ? image : `${baseUrl}${image}`)
    : `${baseUrl}/brand/logo.svg`;
  
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Current page URL
  const currentUrl = `${baseUrl}${router.asPath}`;
  const canonicalUrl = canonical || currentUrl;
  
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Generate hreflang alternates
  const alternates = [
    { locale: 'pt-BR', url: `${baseUrl}/pt${currentPath}` },
    { locale: 'en', url: `${baseUrl}/en${currentPath}` },
    { locale: 'x-default', url: `${baseUrl}/pt${currentPath}` }
  ];

  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check if we're in preview environment
  const isPreview = process.env.VERCEL_ENV === 'preview';

  return (
    <Head>
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Basic meta tags */}
      <title>{metaTitle}</title>
      <meta name="description" content={metaDescription} />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Robots and indexing */}
      {(noindex || isPreview) && (
        <meta name="robots" content="noindex,nofollow" />
      )}
      
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Canonical URL */}
      <link rel="canonical" href={canonicalUrl} />
      
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Hreflang alternates */}
      {alternates.map(({ locale, url }) => (
        <link
          key={locale}
          rel="alternate"
          hrefLang={locale}
          href={url}
        />
      ))}
      
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Open Graph */}
      <meta property="og:title" content={truncateText(metaTitle, 60)} />
      <meta property="og:description" content={metaDescription} />
      <meta property="og:image" content={metaImage} />
      <meta property="og:image:width" content="1200" />
      <meta property="og:image:height" content="630" />
      <meta property="og:url" content={canonicalUrl} />
      <meta property="og:type" content={type} />
      <meta property="og:site_name" content="INSANYCK" />
      <meta property="og:locale" content={currentLocale === 'en' ? 'en_US' : 'pt_BR'} />
      
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Twitter Card */}
      <meta name="twitter:card" content="summary_large_image" />
      <meta name="twitter:title" content={truncateText(metaTitle, 60)} />
      <meta name="twitter:description" content={metaDescription} />
      <meta name="twitter:image" content={metaImage} />
      
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Product-specific meta tags */}
      {type === 'product' && price && (
        <>
          <meta property="product:price:amount" content={price.toString()} />
          <meta property="product:price:currency" content={currency || 'BRL'} />
          {availability && <meta property="product:availability" content={availability} />}
          {brand && <meta property="product:brand" content={brand} />}
        </>
      )}
      
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Schema.org JSON-LD */}
      {schema && (
        <script
          type="application/ld+json"
          dangerouslySetInnerHTML={{
            __html: JSON.stringify(Array.isArray(schema) ? schema : [schema])
          }}
        />
      )}
      
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Additional meta tags for better indexing */}
      <meta name="theme-color" content="#000000" />
      <meta name="msapplication-TileColor" content="#000000" />
      <meta name="application-name" content="INSANYCK" />
      <meta name="apple-mobile-web-app-title" content="INSANYCK" />
      <meta name="apple-mobile-web-app-capable" content="yes" />
      <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    </Head>
  );
}


    üìÑ ShippingSelector.tsx

============================================================
FILE: src\components\ShippingSelector.tsx
============================================================
// INSANYCK STEP 7 ‚Äî Shipping selector unificado (compat√≠vel com sua assinatura)
// src/components/ShippingSelector.tsx
"use client";

import * as React from "react";
import { useTranslation } from "next-i18next";
import { formatPrice, Locale } from "@/lib/price";

type Id = "standard" | "express";

type Props = {
  value: Id;
  onChange: (_id: Id, _priceCents: number) => void; // mant√©m sua assinatura atual
  locale?: Locale;
  className?: string;
};

export default function ShippingSelector({
  value,
  onChange,
  locale = "pt",
  className = "",
}: Props) {
  const { t } = useTranslation(["checkout", "bag"]);

  const options: { id: Id; label: string; priceCents: number; desc: string }[] = [
    {
      id: "standard",
      label: t("checkout:shipping.standard", "Padr√£o"),
      priceCents: 0,
      desc: t("checkout:shipping.eta5", "5 dias √∫teis"),
    },
    {
      id: "express",
      label: t("checkout:shipping.express", "Expresso"),
      priceCents: 2490,
      desc: t("checkout:shipping.eta2", "2 dias √∫teis"),
    },
  ];

  return (
    <div className={`space-y-2 ${className}`} role="group" aria-label={t("checkout:shipping.title", "Frete")}>
      {options.map((o) => {
        const active = value === o.id;
        return (
          <button
            key={o.id}
            type="button"
            onClick={() => onChange(o.id, o.priceCents)}
            className={`w-full flex items-center justify-between rounded-xl border px-4 py-3 transition
              ${active ? "border-white/30 bg-white/5" : "border-white/10 hover:border-white/20 bg-black/40"}`}
            aria-pressed={active}
          >
            <div className="text-left">
              <div className="text-white/90 font-medium">{o.label}</div>
              <div className="text-white/60 text-sm">{o.desc}</div>
            </div>
            <div className="text-white/80">
              {o.priceCents > 0 ? formatPrice(o.priceCents, locale) : t("bag:free", "Gr√°tis")}
            </div>
          </button>
        );
      })}
    </div>
  );
}



    üìÑ Skeleton.tsx

============================================================
FILE: src\components\Skeleton.tsx
============================================================
// INSANYCK STEP 9 ‚Äî Skeletons reutiliz√°veis (sem clsx)
"use client";
import React from "react";

type BaseProps = React.HTMLAttributes<HTMLDivElement> & { className?: string };

function cx(...c: Array<string | false | null | undefined>) {
  return c.filter(Boolean).join(" ");
}

type Compound = React.FC<BaseProps> & {
  Text: React.FC<BaseProps>;
  TextLg: React.FC<BaseProps>;
  Thumb: React.FC<BaseProps>;
};

const Skeleton = (({ className, ...rest }: BaseProps) => {
  return <div className={cx("skl", className)} aria-hidden {...rest} />;
}) as Compound;

Skeleton.Text = function Text({ className, ...rest }: BaseProps) {
  return <div className={cx("skl skl--text", className)} aria-hidden {...rest} />;
};
Skeleton.TextLg = function TextLg({ className, ...rest }: BaseProps) {
  return <div className={cx("skl skl--text-lg", className)} aria-hidden {...rest} />;
};
Skeleton.Thumb = function Thumb({ className, ...rest }: BaseProps) {
  return <div className={cx("skl skl--thumb", className)} aria-hidden {...rest} />;
};

export default Skeleton;



    üìÅ skeletons/
      üìÑ HeroSkeleton.tsx

============================================================
FILE: src\components\skeletons\HeroSkeleton.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Hero section skeleton with bloom effect
"use client";

import { motion } from "framer-motion";

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Skeleton base component
const SkeletonBase = ({ className = "" }: { className?: string }) => (
  <motion.div
    className={`bg-white/5 rounded-lg ${className}`}
    animate={{
      opacity: [0.5, 0.8, 0.5],
    }}
    transition={{
      duration: 2,
      ease: "easeInOut",
      repeat: Infinity,
    }}
  />
);

export default function HeroSkeleton() {
  return (
    <div className="relative min-h-[60vh] flex items-center justify-center bg-black">
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Hero content skeleton */}
      <div className="text-center max-w-4xl mx-auto px-4">
        {/* Main heading skeleton */}
        <SkeletonBase className="h-16 w-full max-w-2xl mx-auto mb-6" />
        
        {/* Subheading skeleton */}
        <SkeletonBase className="h-8 w-3/4 mx-auto mb-8" />
        
        {/* CTA buttons skeleton */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <SkeletonBase className="h-12 w-40 rounded-xl" />
          <SkeletonBase className="h-12 w-32 rounded-xl" />
        </div>
      </div>

      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Background accent skeleton */}
      <div className="absolute inset-0 -z-10 overflow-hidden">
        <SkeletonBase className="absolute top-1/4 left-1/4 w-96 h-96 rounded-full opacity-20" />
        <SkeletonBase className="absolute bottom-1/4 right-1/4 w-64 h-64 rounded-full opacity-15" />
      </div>
    </div>
  );
}


      üìÑ ProductCardSkeleton.tsx

============================================================
FILE: src\components\skeletons\ProductCardSkeleton.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Product card skeleton with subtle bloom animation
"use client";

import { motion } from "framer-motion";

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Skeleton base component with bloom effect
const SkeletonBase = ({ className = "" }: { className?: string }) => (
  <motion.div
    className={`bg-white/5 rounded-lg ${className}`}
    animate={{
      opacity: [0.5, 0.8, 0.5],
    }}
    transition={{
      duration: 2,
      ease: "easeInOut",
      repeat: Infinity,
    }}
  />
);

export default function ProductCardSkeleton() {
  return (
    <div className="rounded-2xl border border-white/10 bg-black/40 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] overflow-hidden">
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Image skeleton with proper aspect ratio for zero CLS */}
      <div className="relative w-full aspect-[3/4] overflow-hidden">
        <SkeletonBase className="w-full h-full" />
      </div>

      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Content skeleton matching ProductCard structure */}
      <div className="p-4">
        <div className="flex items-start justify-between">
          {/* Title skeleton */}
          <SkeletonBase className="h-6 w-3/4" />
          {/* Badge skeleton */}
          <SkeletonBase className="h-6 w-12 rounded-full" />
        </div>

        {/* Price skeleton */}
        <div className="mt-2">
          <SkeletonBase className="h-5 w-20" />
        </div>

        {/* Actions skeleton */}
        <div className="mt-4 flex gap-3 items-center">
          <SkeletonBase className="h-10 w-24 rounded-xl" />
          <SkeletonBase className="h-10 w-32 rounded-xl" />
          <SkeletonBase className="h-10 w-10 rounded-xl" />
        </div>
      </div>
    </div>
  );
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Grid of product card skeletons for PLP
export function ProductGridSkeleton({ count = 8 }: { count?: number }) {
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      {Array.from({ length: count }).map((_, i) => (
        <ProductCardSkeleton key={i} />
      ))}
    </div>
  );
}


    üìÅ three/
      üìÑ Product3DView.tsx

============================================================
FILE: src\components\three\Product3DView.tsx
============================================================
// INSANYCK STEP 3
"use client";

import * as THREE from "three";
import { Canvas } from "@react-three/fiber";
import { ContactShadows, OrbitControls, useGLTF } from "@react-three/drei";
import { Suspense, useEffect, useMemo, useRef } from "react";

type Variant = "front" | "back" | "detail";

function ShirtModel({ url }: { url: string }) {
  // carrega glb (se n√£o existir, cai num placeholder)
  const { scene } = useGLTF(url, true) as any;
  return <primitive object={scene} />;
}


export default function Product3DView({
  modelUrl = "/models/shirt.glb",
  variant = "front",
}: {
  modelUrl?: string;
  variant?: Variant;
}) {
  const group = useRef<THREE.Group>(null);

  useEffect(() => {
    if (!group.current) return;
    group.current.rotation.y =
      variant === "back" ? Math.PI : variant === "detail" ? Math.PI / 6 : 0;
  }, [variant]);

  // pedestal
  const base = useMemo(() => {
    const geo = new THREE.CylinderGeometry(1.6, 1.6, 0.18, 64);
    const mat = new THREE.MeshStandardMaterial({
      color: new THREE.Color("#101010"),
      roughness: 0.4,
      metalness: 0.15,
    });
    return { geo, mat };
  }, []);

  return (
    <div className="w-full h-[520px] rounded-3xl bg-[#0a0a0a] border border-white/10 overflow-hidden">
      <Canvas
        shadows
        dpr={[1, 2]}
        camera={{ position: [0, 1.1, 3.2], fov: 35 }}
        onCreated={({ gl, scene }) => {
          // studio look
          gl.toneMapping = THREE.ACESFilmicToneMapping;
          gl.outputColorSpace = THREE.SRGBColorSpace;
          gl.shadowMap.enabled = true;
          gl.shadowMap.type = THREE.PCFSoftShadowMap;
          scene.background = new THREE.Color("#0a0a0a");
        }}
      >
        {/* luz de est√∫dio */}
        <ambientLight intensity={0.35} />
        <spotLight
          position={[5, 8, 6]}
          angle={0.35}
          penumbra={0.6}
          intensity={90}
          decay={2}
          distance={40}
          castShadow
          color={"#ffffff"}
        />
        <directionalLight
          position={[-5, 8, -2]}
          intensity={0.9}
          color={"#fff"}
          castShadow
        />

        {/* modelo */}
        <Suspense fallback={null}>
          <group ref={group} position={[0, 0.2, 0]} scale={1.25} castShadow>
            {/* tenta carregar o GLB; se falhar, renderiza placeholder */}
            <ShirtModel url={modelUrl} />
          </group>
        </Suspense>

        {/* pedestal */}
        <mesh geometry={base.geo} material={base.mat} position={[0, -0.78, 0]} receiveShadow />
        <ContactShadows
          position={[0, -0.72, 0]}
          opacity={0.55}
          blur={2.8}
          far={3}
          scale={5}
          color="#000000"
        />

        {/* HDR opcional (coloque /hdr/studio.hdr se tiver) */}
        {/* <Environment files="/hdr/studio.hdr" /> */}

        <OrbitControls
          enablePan={false}
          enableZoom={false}
          minPolarAngle={Math.PI / 2.4}
          maxPolarAngle={Math.PI / 2.0}
          rotateSpeed={0.6}
        />
      </Canvas>
    </div>
  );
}



      üìÑ ProductCard3D.tsx

============================================================
FILE: src\components\three\ProductCard3D.tsx
============================================================
// src/components/ProductCard3D.tsx
import React, { Suspense, useRef, useState, useCallback } from "react";
import { Canvas } from "@react-three/fiber";
import { OrbitControls, Environment, useGLTF } from "@react-three/drei";
import { motion } from "framer-motion";
import { useTranslation } from "react-i18next";

interface ProductCard3DProps {
  glbUrl: string;        // Caminho do modelo 3D (.glb DRACO)
  image: string;         // Imagem fallback
  name: string;
  price: string;
  isNew?: boolean;
  isFeatured?: boolean;
  onDetails: () => void;
}

function Model({ url, onLoaded }: { url: string; onLoaded?: () => void }) {
  const { scene } = useGLTF(url, true);
  React.useEffect(() => {
    if (onLoaded) onLoaded();
  }, [onLoaded]);
  return <primitive object={scene} />;
}

export const ProductCard3D: React.FC<ProductCard3DProps> = ({
  glbUrl, image, name, price, isNew, isFeatured, onDetails
}) => {
  // Usar namespace "product" para tradu√ß√£o modular
  const { t } = useTranslation("product");
  const [is3d, setIs3d] = useState(false);
  const [loading, setLoading] = useState(true);
  const cardRef = useRef<HTMLDivElement>(null);

  // Evita m√∫ltiplos triggers do loader
  const handleModelLoaded = useCallback(() => setLoading(false), []);

  return (
    <motion.div
      ref={cardRef}
      initial={{ opacity: 0, y: 30, scale: 0.97 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      exit={{ opacity: 0, y: 30, scale: 0.97 }}
      transition={{ type: "spring", stiffness: 340, damping: 32, mass: 0.7 }}
      className="relative rounded-[24px] p-6 bg-black/70 backdrop-blur-xl shadow-2xl border border-neutral-800 overflow-hidden"
      style={{ minWidth: 300, maxWidth: 370 }}
      tabIndex={0}
      aria-label={name}
      onMouseEnter={() => setIs3d(true)}
      onMouseLeave={() => { setIs3d(false); setLoading(true); }} // Reseta loader ao sair do card
      onFocus={() => setIs3d(true)}
      onBlur={() => { setIs3d(false); setLoading(true); }}
      role="region"
    >
      {/* TAGS */}
      <div className="absolute top-4 left-4 flex flex-col gap-2 z-20 pointer-events-none">
        {isFeatured && (
          <motion.span
            initial={{ opacity: 0, scale: 0.7 }}
            animate={{ opacity: 1, scale: 1 }}
            className="bg-gradient-to-r from-yellow-400 to-orange-400 text-black px-4 py-1 rounded-full text-xs font-extrabold animate-pulse shadow-md"
            style={{ letterSpacing: 1, boxShadow: "0 2px 10px #ffd70055" }}
          >
            {t("common:featured")}
          </motion.span>
        )}
        {isNew && (
          <motion.span
            initial={{ opacity: 0, scale: 0.7 }}
            animate={{ opacity: 1, scale: 1 }}
            className="bg-pink-500 text-white px-3 py-1 rounded-full text-xs font-bold animate-pulse"
          >
            {t("common:new")}
          </motion.span>
        )}
      </div>

      {/* VISUALIZA√á√ÉO 3D */}
      <div
        className="w-full h-64 rounded-xl mb-5 bg-gradient-to-br from-neutral-900 to-black flex items-center justify-center overflow-hidden relative"
        aria-label={t("common:view3D")}
      >
        <Suspense
          fallback={
            <div className="animate-pulse text-yellow-400 text-lg font-bold">
              {t("common:loading")}
            </div>
          }
        >
          {is3d ? (
            <Canvas
              camera={{ position: [0, 0, 2.2], fov: 40 }}
              shadows
              style={{ width: "100%", height: "100%" }}
            >
              <ambientLight intensity={0.7} />
              <spotLight position={[5, 15, 10]} angle={0.2} penumbra={1} intensity={2.2} castShadow />
              <Environment preset="city" />
              <Model url={glbUrl} onLoaded={handleModelLoaded} />
              <OrbitControls enableZoom={false} enablePan={false} autoRotate autoRotateSpeed={2.2} />
            </Canvas>
          ) : (
            <img
              src={image}
              alt={name}
              className="w-full h-full object-contain"
              loading="lazy"
              style={{ filter: "brightness(1.05) drop-shadow(0 0 18px #000a)" }}
              onLoad={() => setLoading(false)}
            />
          )}
        </Suspense>
        {/* SKELETRON LOADER */}
        {loading && (
          <div className="absolute inset-0 flex items-center justify-center bg-black/50 z-30">
            <div className="w-10 h-10 rounded-full bg-gradient-to-br from-yellow-400 to-orange-400 animate-pulse shadow-lg" />
          </div>
        )}
      </div>

      {/* INFOS */}
      <h3 className="font-bold text-xl text-yellow-300 mb-2">{name}</h3>
      <span className="block text-neutral-300 font-medium mb-4">{price}</span>

      <motion.button
        className="w-full bg-gradient-to-r from-yellow-400 to-orange-400 text-black font-extrabold py-3 rounded-xl shadow-md mt-2 active:scale-95 transition-transform focus:outline-none focus:ring-2 focus:ring-yellow-400/70"
        onClick={onDetails}
        whileHover={{ scale: 1.03 }}
        whileTap={{ scale: 0.97 }}
        aria-label={t("common:viewDetails")}
      >
        {t("common:viewDetails")}
      </motion.button>
    </motion.div>
  );
};



      üìÑ ProductDetailModal.tsx

============================================================
FILE: src\components\three\ProductDetailModal.tsx
============================================================
// src/components/ProductDetailModal/ProductDetailModal.tsx
import React, { useRef, useState, useEffect, Suspense, useCallback } from "react";
import { Canvas } from "@react-three/fiber";
import { XR } from "@react-three/xr";
import { OrbitControls, Environment, useTexture, useGLTF } from "@react-three/drei";
import { AnimatePresence, motion } from "framer-motion";
import { useTranslation } from "react-i18next";
import * as tf from "@tensorflow/tfjs";

// --- TYPES
interface BodyMeasurements {
  size: string;
  height: number;
  chest: number;
  waist: number;
  hips: number;
}

interface TextureVariant {
  id: string;
  name: string;
  color: string;
  textureSet: string[]; // [base, normal, roughness]
}

interface Product3DModel {
  glb: string;
  textures: {
    base: string;
    normal: string;
    roughness: string;
    variants: TextureVariant[];
  };
}

interface ARConfig {
  scale: number;
  anchorType: "floor" | "face" | "image";
  placementHint: string;
}

interface TryOnData {
  bodyMeasurements: boolean;
  sizeRecommendation: boolean;
}

interface Product {
  id: string;
  name: string;
  price: number;
  description: string;
  model3D: Product3DModel;
  arConfig: ARConfig;
  tryOnData?: TryOnData;
}

interface ProductDetailModalProps {
  product: Product;
  onClose: () => void;
}

// --- Loader & Error UI
function Loader3D() { return null; }
function _ErrorFallback({ message: _message }: { message: string }) { return null; }

// --- Componente 3D + texturiza√ß√£o
function ProductModel({
  modelUrl,
  textureVariant,
}: {
  modelUrl: string;
  textureVariant: TextureVariant;
}) {
  const { scene } = useGLTF(modelUrl) as any;
  const textures = useTexture(textureVariant.textureSet);

  // Aplica texturas e cor
  useEffect(() => {
    if (!scene) return;
    scene.traverse((child: any) => {
      if (child.isMesh && child.material) {
        child.material.map = textures[0];
        child.material.normalMap = textures[1];
        child.material.roughnessMap = textures[2];
        child.material.needsUpdate = true;
        child.material.color.set(textureVariant.color);
      }
    });
  }, [scene, textures, textureVariant.color]);

  if (!scene) return <Loader3D />;
  return <primitive object={scene} dispose={null} />;
}

// --- ARView
function ARView({ product }: { product: Product }) {
  return (
    <group>
      <ProductModel
        modelUrl={product.model3D.glb}
        textureVariant={product.model3D.textures.variants[0]}
      />
      {/* AR hint removed temporarily */}
    </group>
  );
}

// --- TryOnView (IA)
function TryOnView({ measurements }: { measurements: BodyMeasurements }) {
  return (
    <div className="bg-black/70 p-8 rounded-2xl text-yellow-400 text-lg font-bold">
      <div>
        üëï Seu tamanho estimado:{" "}
        <span className="text-white">{measurements.size}</span>
      </div>
      <div className="mt-4">
        Altura: {measurements.height} cm <br />
        Peito: {measurements.chest} cm <br />
        Cintura: {measurements.waist} cm <br />
        Quadril: {measurements.hips} cm
      </div>
      <div className="mt-4">
        <em>* Recomenda√ß√£o autom√°tica gerada por IA</em>
      </div>
    </div>
  );
}

// --- MODAL PRINCIPAL
export const ProductDetailModal: React.FC<ProductDetailModalProps> = ({
  product,
  onClose,
}) => {
  const ns = ["common", "pdp", "product"] as const;
  const { t } = useTranslation(ns);
  const [currentVariantIndex, setCurrentVariantIndex] = useState(0);
  const [mode, setMode] = useState<"3d" | "ar" | "try-on">("3d");
  const [bodyMeasurements, setBodyMeasurements] = useState<BodyMeasurements | null>(null);
  const [isLoadingAI, setIsLoadingAI] = useState(false);
  const canvasRef = useRef<HTMLCanvasElement>(null);

  // Keyboard support for accessibility
  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if (e.key === 'Escape') {
        onClose();
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => document.removeEventListener('keydown', handleKeyDown);
  }, [onClose]);

  const currentTextureVariant = product.model3D.textures.variants[currentVariantIndex];

  // Libera c√¢mera se sair do modal (boa pr√°tica mobile)
  const cleanupCamera = useCallback(() => {
    const video = document.querySelector("video");
    if (video && video.srcObject) {
      const tracks = (video.srcObject as MediaStream).getTracks();
      tracks.forEach((track) => track.stop());
      video.srcObject = null;
    }
  }, []);

  useEffect(() => cleanupCamera, [cleanupCamera]);

  // IA simulada (mock) ‚Äî trocar depois por modelo real!
  const startBodyScan = async () => {
    setIsLoadingAI(true);
    await tf.ready();
    // Simula an√°lise corporal
    const measurements: BodyMeasurements = { size: "M", height: 175, chest: 95, waist: 80, hips: 100 };
    setTimeout(() => {
      setBodyMeasurements(measurements);
      setMode("try-on");
      setIsLoadingAI(false);
    }, 1800);
  };

  const modalVariants = {
    hidden: { opacity: 0, scale: 0.85 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: { duration: 0.5, ease: [0.4, 0, 0.2, 1] as any, staggerChildren: 0.08 },
    },
    exit: { opacity: 0, scale: 0.8, transition: { duration: 0.3 } },
  };

  // --- Fallback para browsers sem WebXR
  const [xrSupported, setXrSupported] = useState(false);
  useEffect(() => {
    if (navigator.xr && navigator.xr.isSessionSupported) {
      navigator.xr.isSessionSupported("immersive-ar").then(setXrSupported);
    }
  }, []);

  return (
    <AnimatePresence>
      <motion.div
        className="fixed inset-0 bg-black/90 z-[200] flex items-center justify-center p-4"
        initial="hidden"
        animate="visible"
        exit="exit"
        variants={modalVariants}
        role="dialog"
        aria-modal="true"
        aria-labelledby="product-modal-title"
      >
        <div className="absolute inset-0 backdrop-blur-2xl pointer-events-none"></div>
        <motion.div
          className="relative w-full max-w-6xl h-[90vh] bg-gradient-to-br from-neutral-900 to-black rounded-3xl border-2 border-yellow-500/40 shadow-2xl overflow-hidden"
          variants={{ hidden: { y: 60 }, visible: { y: 0 } }}
        >
          {/* BOT√ÉO FECHAR */}
          <motion.button
            onClick={onClose}
            className="absolute top-6 right-6 z-50 text-yellow-400 text-2xl bg-black/60 rounded-full w-12 h-12 flex items-center justify-center hover:bg-yellow-400 hover:text-black transition-all"
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.92 }}
            aria-label={t("common:close")}
          >
            ‚úï
          </motion.button>

          {/* BOT√ïES DE MODO */}
          <div className="absolute top-6 left-6 z-50 flex gap-3">
            <motion.button
              onClick={() => setMode("3d")}
              className={`px-4 py-2 rounded-full font-bold ${
                mode === "3d"
                  ? "bg-yellow-400 text-black"
                  : "bg-white/10 text-white hover:bg-yellow-400/70"
              }`}
              whileHover={{ scale: 1.06 }}
              whileTap={{ scale: 0.96 }}
            >
              {t("pdp:modo3D")}
            </motion.button>
            {xrSupported && (
              <button
                aria-label="Visualizar produto em realidade aumentada"
                className="bg-purple-500 text-white px-4 py-2 rounded-full font-bold"
                onClick={() => setMode("ar")}
              >
                {t("pdp:verEmAR")}
              </button>
            )}
            {product.tryOnData && (
              <motion.button
                onClick={startBodyScan}
                className="bg-blue-500 text-white px-4 py-2 rounded-full font-bold"
                whileHover={{ scale: 1.06 }}
                whileTap={{ scale: 0.96 }}
                disabled={isLoadingAI}
              >
                {isLoadingAI ? t("common:loading") : t("pdp:experimentar")}
              </motion.button>
            )}
          </div>

          {/* CANVAS 3D PRINCIPAL */}
          <div className="relative w-full h-full">
            <Canvas
              ref={canvasRef}
              shadows
              camera={{ position: [0, 0, 2.6], fov: 44 }}
              gl={{ preserveDrawingBuffer: true }}
              style={{ background: "transparent" }}
            >
              <XR store={null as any}>
                <Suspense fallback={null}>
                  <ambientLight intensity={0.89} />
                  <spotLight position={[12, 16, 18]} angle={0.17} penumbra={1} />
                  {mode === "3d" && currentTextureVariant && (
                    <>
                      <ProductModel
                        modelUrl={product.model3D.glb}
                        textureVariant={currentTextureVariant}
                      />
                      <OrbitControls
                        enableZoom
                        enablePan
                        minPolarAngle={Math.PI / 4}
                        maxPolarAngle={Math.PI / 1.4}
                      />
                      <Environment preset="city" />
                    </>
                  )}
                  {mode === "ar" && xrSupported && <ARView product={product} />}
                  {mode === "try-on" && bodyMeasurements && (
                    <TryOnView measurements={bodyMeasurements} />
                  )}
                </Suspense>
              </XR>
            </Canvas>
            
            {/* Overlays DOM fora do Canvas */}
            {mode === "ar" && xrSupported && (
              <div className="pointer-events-none absolute left-1/2 bottom-24 -translate-x-1/2 text-yellow-400 font-bold">
                {product.arConfig?.placementHint || "Posicione o produto no ambiente"}
              </div>
            )}
          </div>

          {/* RODAP√â/INFOS */}
          <motion.div
            className="absolute bottom-0 left-0 right-0 bg-black/70 backdrop-blur-lg p-4 border-t border-yellow-400/20"
            initial={{ y: 120 }}
            animate={{ y: 0 }}
            transition={{ delay: 0.18 }}
          >
            <div className="flex justify-between items-start">
              <div>
                <h2 id="product-modal-title" className="text-3xl font-bold text-yellow-400 mb-2">{product.name}</h2>
                <p className="text-white mb-4 max-w-2xl">{product.description}</p>
              </div>
              <div className="text-2xl font-bold text-white">
                R$ {product.price.toFixed(2)}
              </div>
            </div>
            <div className="mt-4 flex gap-3 flex-wrap">
              {product.model3D.textures.variants.map((variant, idx) => (
                <motion.button
                  key={variant.id}
                  onClick={() => setCurrentVariantIndex(idx)}
                  className={`px-4 py-2 rounded-full font-medium ${
                    currentVariantIndex === idx
                      ? "bg-yellow-400 text-black"
                      : "bg-white/10 text-white hover:bg-yellow-400/70"
                  }`}
                  whileHover={{ scale: 1.04 }}
                  whileTap={{ scale: 0.97 }}
                >
                  {variant.name}
                </motion.button>
              ))}
            </div>
          </motion.div>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  );
};

// Tradu√ß√µes (pode deixar em outro arquivo depois)
export const resources = {
  pt: {
    fechar: "Fechar",
    modo3D: "Modo 3D",
    verEmAR: "Ver em AR",
    experimentar: "Experimentar",
    carregando: "Carregando experi√™ncia...",
  },
  en: {
    fechar: "Close",
    modo3D: "3D Mode",
    verEmAR: "View in AR",
    experimentar: "Try On",
    carregando: "Loading experience...",
  },
};



    üìÅ ui/
      üìÑ Button.tsx

============================================================
FILE: src\components\ui\Button.tsx
============================================================

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Premium button with micro-interactions and a11y
"use client";

import { ButtonHTMLAttributes, forwardRef, ReactNode } from "react";
import { motion } from "framer-motion";

export interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: "primary" | "ghost" | "link";
  size?: "sm" | "md" | "lg";
  loading?: boolean;
  children: ReactNode;
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Button variants with INSANYCK glass aesthetic
const buttonVariants = {
  primary: "bg-white text-black border border-white/20 shadow-sm hover:shadow-md hover:bg-white/95 active:bg-white/90 active:shadow-sm",
  ghost: "bg-transparent text-white border border-white/15 hover:bg-white/8 hover:border-white/25 active:bg-white/12 active:border-white/30",
  link: "bg-transparent text-white/80 hover:text-white/95 active:text-white/85 border-none p-0 underline-offset-4 hover:underline"
};

const buttonSizes = {
  sm: "px-4 py-2 text-sm",
  md: "px-6 py-3 text-base",
  lg: "px-8 py-4 text-lg"
};

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Loading spinner component
const LoadingSpinner = () => (
  <svg
    className="animate-spin -ml-1 mr-2 h-4 w-4"
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    aria-hidden="true"
  >
    <circle
      className="opacity-25"
      cx="12"
      cy="12"
      r="10"
      stroke="currentColor"
      strokeWidth="4"
    ></circle>
    <path
      className="opacity-75"
      fill="currentColor"
      d="m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
    ></path>
  </svg>
);

export const Button = forwardRef<HTMLButtonElement, ButtonProps>(
  ({ 
    className, 
    variant = "primary", 
    size = "md", 
    loading = false,
    disabled,
    children, 
    ...props 
  }, ref) => {
    const isDisabled = disabled || loading;

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Extract motion-specific props to avoid conflicts
    const { onDrag: _onDrag, onDragStart: _onDragStart, onDragEnd: _onDragEnd, ...buttonProps } = props as any;

    return (
      <motion.button
        ref={ref}
        className={cn(
          // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Base styles with INSANYCK aesthetic
          "inline-flex items-center justify-center rounded-xl font-semibold",
          "focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/40 focus-visible:ring-offset-2 focus-visible:ring-offset-black",
          "transition-all duration-150 cubic-bezier(0.2, 0, 0, 1)",
          "disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:transform-none",
          "relative z-0",
          buttonVariants[variant],
          variant !== "link" && buttonSizes[size],
          className
        )}
        // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Micro-interactions with subtle scale and shadow
        whileHover={!isDisabled ? { 
          scale: variant === "link" ? 1 : 1.015, 
          boxShadow: variant === "primary" ? "0 4px 12px rgba(255,255,255,0.12), 0 2px 4px rgba(255,255,255,0.06)" : 
                     variant === "ghost" ? "0 2px 8px rgba(255,255,255,0.08)" : undefined
        } : undefined}
        whileTap={!isDisabled ? { scale: variant === "link" ? 1 : 0.985 } : undefined}
        disabled={isDisabled}
        aria-busy={loading}
        data-state={loading ? "loading" : "idle"}
        {...buttonProps}
      >
        {loading && <LoadingSpinner />}
        {children}
      </motion.button>
    );
  }
);

Button.displayName = "Button";

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Utility function for className merging
function cn(...classes: (string | undefined | false)[]): string {
  return classes.filter(Boolean).join(' ');
}


      üìÑ Card.tsx

============================================================
FILE: src\components\ui\Card.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Premium card component with glass aesthetic and hover effects
"use client";

import { HTMLAttributes, forwardRef, ReactNode } from "react";
import { motion } from "framer-motion";

export interface CardProps extends HTMLAttributes<HTMLDivElement> {
  children: ReactNode;
  hoverable?: boolean;
  variant?: "default" | "glass" | "minimal";
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Card variants with INSANYCK aesthetic
const cardVariants = {
  default: "bg-black/40 border border-white/10",
  glass: "bg-black/20 border border-white/5 backdrop-blur-sm",
  minimal: "bg-transparent border border-white/5"
};

export const Card = forwardRef<HTMLDivElement, CardProps>(
  ({ 
    className = "", 
    children, 
    hoverable = true, 
    variant = "default",
    ...props 
  }, ref) => {
    const baseClasses = "rounded-2xl shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] overflow-hidden";
    const variantClasses = cardVariants[variant];
    const focusClasses = "focus-within:ring-2 focus-within:ring-white/40 focus-within:ring-offset-2 focus-within:ring-offset-black";

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Extract drag-related props to avoid conflicts
    const { onDrag: _onDrag, onDragStart: _onDragStart, onDragEnd: _onDragEnd, ...divProps } = props as any;

    return (
      <motion.div
        ref={ref}
        className={`${baseClasses} ${variantClasses} ${focusClasses} ${className}`}
        // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Subtle hover animation with elevation and content lift
        whileHover={hoverable ? { 
          y: -2,
          boxShadow: "0 12px 40px rgba(0,0,0,0.4), inset 0 1px 0 rgba(255,255,255,0.12), 0 4px 16px rgba(255,255,255,0.04)",
          borderColor: "rgba(255,255,255,0.15)"
        } : undefined}
        whileTap={hoverable ? {
          y: -1,
          transition: { duration: 0.1 }
        } : undefined}
        transition={{
          duration: 0.15,
          ease: [0.2, 0, 0, 1]
        }}
        {...divProps}
      >
        {children}
      </motion.div>
    );
  }
);

Card.displayName = "Card";

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Card header subcomponent
export const CardHeader = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(
  ({ className = "", children, ...props }, ref) => (
    <div
      ref={ref}
      className={`p-6 pb-0 ${className}`}
      {...props}
    >
      {children}
    </div>
  )
);

CardHeader.displayName = "CardHeader";

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Card content subcomponent
export const CardContent = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(
  ({ className = "", children, ...props }, ref) => (
    <div
      ref={ref}
      className={`p-6 ${className}`}
      {...props}
    >
      {children}
    </div>
  )
);

CardContent.displayName = "CardContent";

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Card footer subcomponent
export const CardFooter = forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(
  ({ className = "", children, ...props }, ref) => (
    <div
      ref={ref}
      className={`p-6 pt-0 ${className}`}
      {...props}
    >
      {children}
    </div>
  )
);

CardFooter.displayName = "CardFooter";


      üìÑ OptimizedImage.tsx

============================================================
FILE: src\components\ui\OptimizedImage.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Optimized image component for zero CLS
"use client";
import Image, { ImageProps } from "next/image";
import { useState } from "react";
import { motion } from "framer-motion";

interface OptimizedImageProps extends Omit<ImageProps, "onLoad"> {
  aspectRatio?: `${number}/${number}` | string; // ex: "3/4"
  fallbackSrc?: string;
}

export default function OptimizedImage({
  aspectRatio = "3/4",
  fallbackSrc,
  alt,
  ...rest
}: OptimizedImageProps) {
  const [src, setSrc] = useState(rest.src as string);

  return (
    <div
      aria-label={alt}
      style={{ aspectRatio }}
      className="relative w-full overflow-hidden rounded-2xl"
    >
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
        <Image
          {...rest}
          alt={alt}
          src={src}
          fill
          sizes={(rest as any).sizes ?? "(max-width: 768px) 100vw, 50vw"}
          onError={() => {
            if (fallbackSrc && src !== fallbackSrc) setSrc(fallbackSrc);
          }}
          style={{ objectFit: (rest as any).objectFit ?? "cover" }}
          priority={(rest as any).priority ?? false}
        />
      </motion.div>
    </div>
  );
}


    üìÑ VariantSelector.tsx

============================================================
FILE: src\components\VariantSelector.tsx
============================================================
// INSANYCK STEP 10 ‚Äî Seletor de Variantes
// src/components/VariantSelector.tsx
"use client";

import { useState, useEffect } from 'react';

interface OptionValue {
  slug: string;
  name: string;
  value: string;
}

interface Option {
  slug: string;
  name: string;
  values: OptionValue[];
  type?: 'color' | 'size' | 'select'; // INSANYCK STEP 10 ‚Äî Tipagem para renderiza√ß√£o
}

interface Variant {
  id: string;
  sku: string;
  title?: string;
  priceCents: number;
  currency: string;
  inventory: {
    quantity: number;
    reserved: number;
    available: number;
  };
  options: {
    option: string;
    value: string;
  }[];
}

interface VariantSelectorProps {
  options: Option[];
  variants: Variant[];
  onVariantChange: (_variant: Variant | null) => void;
}

export default function VariantSelector({
  options,
  variants,
  onVariantChange,
}: VariantSelectorProps) {
  const [selectedOptions, setSelectedOptions] = useState<Record<string, string>>({});
  const [selectedVariant, setSelectedVariant] = useState<Variant | null>(null);

  // Encontrar variante baseada nas op√ß√µes selecionadas
  useEffect(() => {
    const variant = variants.find((v) => {
      return v.options.every((vo) => {
        return selectedOptions[vo.option] === vo.value;
      });
    });

    setSelectedVariant(variant || null);
    onVariantChange(variant || null);
  }, [selectedOptions, variants, onVariantChange]);

  const handleOptionChange = (optionSlug: string, valueSlug: string) => {
    setSelectedOptions((prev) => ({
      ...prev,
      [optionSlug]: valueSlug,
    }));
  };

  const isOptionValueAvailable = (optionSlug: string, valueSlug: string) => {
    // Verificar se existe alguma variante dispon√≠vel com essa combina√ß√£o
    return variants.some((variant) => {
      const hasThisOption = variant.options.some(
        (vo) => vo.option === optionSlug && vo.value === valueSlug
      );
      
      if (!hasThisOption) return false;

      // Verificar se outras op√ß√µes selecionadas s√£o compat√≠veis
      const otherSelectedOptions = Object.entries(selectedOptions).filter(
        ([key]) => key !== optionSlug
      );

      const isCompatible = otherSelectedOptions.every(([otherOptionSlug, otherValueSlug]) => {
        return variant.options.some(
          (vo) => vo.option === otherOptionSlug && vo.value === otherValueSlug
        );
      });

      return isCompatible && variant.inventory.available > 0;
    });
  };

  const getOptionValueClass = (optionSlug: string, valueSlug: string, option: Option) => {
    const isSelected = selectedOptions[optionSlug] === valueSlug;
    const isAvailable = isOptionValueAvailable(optionSlug, valueSlug);
    
    let baseClass = "border transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 ";

    // INSANYCK STEP 10 ‚Äî Detectar cor por type ou slug (retrocompat√≠bvel)
    const isColorFilter = option.type === 'color' || option.slug === 'color';

    if (isColorFilter) {
      // Seletor de cor como c√≠rculo
      baseClass += "w-8 h-8 rounded-full cursor-pointer ";
      
      if (isSelected) {
        baseClass += "ring-2 ring-white ring-offset-2 ring-offset-black border-white/40 ";
      } else {
        baseClass += "border-white/20 hover:border-white/30 ";
      }
      
      if (!isAvailable) {
        baseClass += "opacity-30 cursor-not-allowed ";
      }
    } else {
      // Seletor de tamanho como bot√£o
      baseClass += "px-4 py-2 rounded-lg text-sm font-medium cursor-pointer ";
      
      if (isSelected) {
        baseClass += "bg-white text-black border-white ";
      } else {
        baseClass += "bg-transparent text-white border-white/20 hover:bg-white/10 hover:border-white/40 ";
      }
      
      if (!isAvailable) {
        baseClass += "opacity-30 cursor-not-allowed line-through ";
      }
    }

    return baseClass;
  };

  return (
    <div className="space-y-6">
      {options.map((option) => (
        // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Fieldset/legend para sele√ß√£o de variantes + neutraliza√ß√£o de defaults
        <fieldset key={option.slug} className="m-0 p-0 border-0" data-testid={`variant-${option.slug}`}>
          <legend className="sr-only">{`Selecione ${option.name.toLowerCase()}`}</legend>
          <h2 className="text-white font-medium mb-3">{option.name}</h2>
          
          <div className="flex flex-wrap gap-3" role="group" aria-labelledby={`legend-${option.slug}`}>
            {option.values.map((value) => {
              const isAvailable = isOptionValueAvailable(option.slug, value.slug);
              const isSelected = selectedOptions[option.slug] === value.slug;
              
              // INSANYCK STEP 10 ‚Äî Detectar cor por type ou slug (retrocompat√≠bvel)
              const isColorOption = option.type === 'color' || option.slug === 'color';
              
              if (isColorOption) {
                // Seletor de cor
                return (
                  <button
                    key={value.slug}
                    type="button"
                    onClick={() => {
                      if (isAvailable) {
                        handleOptionChange(option.slug, value.slug);
                      }
                    }}
                    className={getOptionValueClass(option.slug, value.slug, option)}
                    style={{ backgroundColor: value.value }}
                    aria-label={`${value.name}${!isAvailable ? ' - Indispon√≠vel' : ''}${isSelected ? ' - Selecionado' : ''}`}
                    aria-pressed={isSelected}
                    disabled={!isAvailable}
                  />
                );
              } else {
                // Seletor de tamanho/outros
                return (
                  <button
                    key={value.slug}
                    type="button"
                    onClick={() => {
                      if (isAvailable) {
                        handleOptionChange(option.slug, value.slug);
                      }
                    }}
                    className={getOptionValueClass(option.slug, value.slug, option)}
                    aria-pressed={isSelected}
                    disabled={!isAvailable}
                  >
                    {value.name}
                  </button>
                );
              }
            })}
          </div>
        </fieldset>
      ))}

      {/* Informa√ß√µes da variante selecionada */}
      {selectedVariant && (
        <div className="mt-6 p-4 bg-white/5 rounded-lg border border-white/10" aria-live="polite">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-white/80 text-sm">SKU: {selectedVariant.sku}</p>
              {selectedVariant.title && (
                <p className="text-white/60 text-sm">{selectedVariant.title}</p>
              )}
            </div>
            <div className="text-right">
              <p className="text-white font-semibold text-lg">
                {(selectedVariant.priceCents / 100).toLocaleString('pt-BR', {
                  style: 'currency',
                  currency: selectedVariant.currency,
                })}
              </p>
              <p className="text-white/60 text-sm">
                {selectedVariant.inventory.available > 0
                  ? `${selectedVariant.inventory.available} em estoque`
                  : 'Fora de estoque'
                }
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}


    üìÑ WishlistButton.tsx

============================================================
FILE: src\components\WishlistButton.tsx
============================================================
// INSANYCK STEP 8
"use client";

import { useWishlist } from "@/store/wishlist";
import { track } from "@/lib/analytics";
import { useTranslation } from "next-i18next";
import { useSession } from "next-auth/react";
import { useState } from "react";

type Props = {
  slug: string;
  title: string;
  priceCents: number;
  image?: string;
  className?: string;
};

export default function WishlistButton({ slug, title, priceCents, image, className }: Props) {
  const { t } = useTranslation(["wishlist"]);
  const { data: session } = useSession();
  const { has, add, removeBySlug, syncWithServer } = useWishlist();
  const [busy, setBusy] = useState(false);

  const onToggle = async () => {
    if (busy) return;
    setBusy(true);
    try {
      if (has(slug)) {
        removeBySlug(slug);
        track("remove_from_wishlist", { slug });
        if (session?.user?.id) {
          // tenta apagar no server
          try {
            const res = await fetch("/api/account/wishlist");
            const data = await res.json();
            const found = (data.items ?? []).find((i: any) => i.slug === slug);
            if (found) await fetch(`/api/account/wishlist/${found.id}`, { method: "DELETE" });
          } catch {}
        }
      } else {
        add({ slug, title, priceCents, image });
        track("add_to_wishlist", { slug, title });
        if (session?.user?.id) {
          try {
            await fetch("/api/account/wishlist", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ slug, title, priceCents, image }),
            });
          } catch {}
        }
      }
      if (session?.user?.id) await syncWithServer(session.user.id as any);
    } finally {
      setBusy(false);
    }
  };

  const active = has(slug);

  return (
    <button
      type="button"
      onClick={onToggle}
      aria-pressed={active}
      title={active ? t("wishlist:remove", "Remover dos favoritos") : t("wishlist:add", "Adicionar aos favoritos")}
      className={`inline-flex items-center justify-center rounded-xl border border-white/15 text-white/80 hover:text-white hover:bg-white/5 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 transition px-3 py-2 ${className ?? ""}`}
      disabled={busy}
    >
      <span className="sr-only">{t("wishlist:toggle", "Favoritar")}</span>
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî √çcone decorativo com atributos A11y */}
      <svg
        width="18"
        height="18"
        viewBox="0 0 24 24"
        fill={active ? "currentColor" : "none"}
        stroke="currentColor"
        strokeWidth="1.5"
        className="opacity-90"
        aria-hidden="true"
        focusable="false"
      >
        <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
      </svg>
    </button>
  );
}



  üìÅ context/
    üìÑ CartContext.tsx

============================================================
FILE: src\context\CartContext.tsx
============================================================
import {
    createContext,
    useContext,
    useState,
    useMemo,
    useCallback,
    PropsWithChildren,
  } from "react";
  
  /**
   * Contexto global para visibilidade do Drawer do Carrinho.
   * @example
   * <CartProvider>
   *   <App />
   * </CartProvider>
   * const { isCartOpen, openCart } = useCartDrawer();
   * @throws {Error} Se usado fora de CartProvider.
   */
  type CartContextType = {
    isCartOpen: boolean;
    openCart: () => void;
    closeCart: () => void;
  };
  
  const CartContext = createContext<CartContextType | undefined>(undefined);
  
  // Garantir contexto s√≥ client-side para SSR/Next.js
  const isClient = typeof window !== "undefined";
  
  export const CartProvider = ({ children }: PropsWithChildren) => {
    const [isCartOpen, setIsCartOpen] = useState(false);
  
    // useCallback para estabilidade de refer√™ncia (evita renders em filhos)
    const openCart = useCallback(() => setIsCartOpen(true), []);
    const closeCart = useCallback(() => setIsCartOpen(false), []);
  
    const value = useMemo(
      () => ({
        isCartOpen,
        openCart,
        closeCart,
      }),
      [isCartOpen, openCart, closeCart]
    );
  
    // Durante SSR, apenas renderize filhos (n√£o inicie contexto)
    if (!isClient) {
      // SSR fallback: previne hydrate mismatch
      return <>{children}</>;
    }
  
    return (
      <CartContext.Provider value={value}>{children}</CartContext.Provider>
    );
  };
  
  /**
   * Hook global para acesso ao estado do Drawer do Carrinho.
   * @throws {Error} Se usado fora de CartProvider.
   */
  export const useCartDrawer = () => {
    const context = useContext(CartContext);
    if (!context)
      throw new Error("useCartDrawer must be used within CartProvider");
    return context;
  };
  


  üìÅ core/
    üìÅ Cart/
      üìÑ api.ts

============================================================
FILE: src\core\Cart\api.ts
============================================================



      üìÑ CartDrawerCore.tsx

============================================================
FILE: src\core\Cart\CartDrawerCore.tsx
============================================================
import { useCart } from "@/store/useCart";
import { AnimatePresence, motion } from "framer-motion";
import { useEffect, useRef, useMemo, useCallback } from "react";
import { CartDrawerSignature } from "@/signature/Cart/visuals";
import { Virtuoso } from "react-virtuoso";
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useLockBodyScroll } from "@/hooks/useLockBodyScroll";

interface Props {
  open: boolean;
  onClose: () => void;
}

export function CartDrawerCore({ open, onClose }: Props) {
  const { items, remove, update, checkout, isLoading } = useCart();
  const closeBtn = useRef<HTMLButtonElement>(null);

  // Scroll lock
  useLockBodyScroll(open);

  // Focus management
  useEffect(() => {
    if (open && closeBtn.current) closeBtn.current.focus();
  }, [open]);

  // ESC to close
  useEffect(() => {
    if (!open) return;
    const onEsc = (e: KeyboardEvent) => e.key === "Escape" && onClose();
    window.addEventListener("keydown", onEsc);
    return () => window.removeEventListener("keydown", onEsc);
  }, [open, onClose]);

  // Cart subtotal
  const total = useMemo(
    () => items.reduce((sum, i) => sum + i.preco * i.quantidade, 0),
    [items]
  );

  // Handlers
  const handleRemove = useCallback(async (id: string, cor: string, tamanho: string) => {
    try {
      await remove(id, cor, tamanho);
      toast.success("Item removido!");
    } catch (e: any) {
      toast.error(e.message || "Erro ao remover item.");
    }
  }, [remove]);

  const handleUpdate = useCallback(
    async (id: string, cor: string, tamanho: string, quantidade: number) => {
      if (quantidade < 1) return;
      try {
        await update(id, cor, tamanho, { quantidade });
      } catch (e: any) {
        toast.error(e.message || "Erro ao atualizar quantidade.");
      }
    },
    [update]
  );

  const handleCheckout = useCallback(async () => {
    try {
      await checkout();
      toast.success("Compra finalizada!");
      onClose();
    } catch (e: any) {
      toast.error(e.message || "Erro ao finalizar compra.");
    }
  }, [checkout, onClose]);

  // Drawer Height for ultra responsiveness
  const drawerHeight = useMemo(() => (items.length === 0 ? "50vh" : "85vh"), [items.length]);

  return (
    <AnimatePresence>
      {open && (
        <>
          {/* Backdrop */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-[998] bg-black/70 backdrop-blur-lg"
            onClick={onClose}
            aria-hidden="true"
          />
          {/* Drawer */}
          <motion.aside
            initial={{ x: "100%" }}
            animate={{ x: 0 }}
            exit={{ x: "100%" }}
            transition={{
              type: "spring",
              stiffness: 170,
              damping: 22,
              mass: 0.6,
            }}
            className="fixed top-0 right-0 h-full max-h-[98vh] w-full max-w-md z-[999] bg-neutral-950 border-l border-yellow-400/20 shadow-2xl flex flex-col rounded-l-3xl overflow-hidden"
            style={{ height: drawerHeight }}
            role="dialog"
            aria-modal="true"
            aria-labelledby="cart-title"
          >
            {/* Header */}
            <div className="flex items-center justify-between px-6 py-5 border-b border-yellow-400/20 bg-gradient-to-r from-black/90 to-yellow-900/10">
              <h2 id="cart-title" className="text-2xl font-bold text-yellow-400">
                Seu Carrinho
              </h2>
              <button
                ref={closeBtn}
                className="text-yellow-400 bg-black/30 p-2 rounded-full hover:bg-yellow-400/10 focus:outline-none focus:ring-2 focus:ring-yellow-500"
                onClick={onClose}
                aria-label="Fechar carrinho"
              >
                ‚úï
              </button>
            </div>

            {/* Conte√∫do */}
            <div className="flex-1 overflow-y-auto px-4 py-3">
              {items.length === 0 ? (
                <div className="flex flex-col items-center justify-center h-full text-center text-neutral-400 py-14">
                  <div className="text-6xl mb-4">üõí</div>
                  <p className="text-lg">Seu carrinho est√° vazio</p>
                  <p className="text-sm mt-2">Adicione produtos para come√ßar sua experi√™ncia de luxo!</p>
                </div>
              ) : (
                <Virtuoso
                  style={{ height: "100%" }}
                  data={items}
                  overscan={4}
                  itemContent={(idx, item) => (
                    <div
                      key={`${item.id}-${item.cor}-${item.tamanho}-${idx}`}
                      className="flex gap-4 items-center bg-gradient-to-r from-black/70 to-neutral-900/60 rounded-xl p-4 mb-3 border border-yellow-400/10 shadow"
                    >
                      {item.image && (
                        <img
                          src={item.image}
                          alt={item.nome}
                          className="w-16 h-16 rounded-lg object-cover border border-yellow-400/10"
                          loading="lazy"
                          width={64}
                          height={64}
                        />
                      )}
                      <div className="flex-1 min-w-0">
                        <div className="font-semibold text-white truncate">{item.nome}</div>
                        <div className="text-neutral-400 text-xs">
                          Cor: <span className="text-yellow-300">{item.cor}</span> | Tamanho: <span className="text-yellow-300">{item.tamanho}</span>
                        </div>
                        <div className="text-yellow-300 font-bold mt-1">
                          R$ {item.preco.toFixed(2)}
                          <span className="ml-2 text-xs text-white/60">x{item.quantidade}</span>
                        </div>
                      </div>
                      <div className="flex flex-col items-center gap-2">
                        <div className="flex gap-1 bg-black/70 rounded-lg p-1">
                          <button
                            className="w-8 h-8 flex items-center justify-center text-white/80 hover:text-yellow-400 rounded"
                            onClick={() => handleUpdate(item.id, item.cor, item.tamanho, item.quantidade - 1)}
                            aria-label={`Diminuir ${item.nome}`}
                            disabled={item.quantidade <= 1}
                          >-</button>
                          <span className="w-8 h-8 flex items-center justify-center">{item.quantidade}</span>
                          <button
                            className="w-8 h-8 flex items-center justify-center text-white/80 hover:text-yellow-400 rounded"
                            onClick={() => handleUpdate(item.id, item.cor, item.tamanho, item.quantidade + 1)}
                            aria-label={`Aumentar ${item.nome}`}
                          >+</button>
                        </div>
                        <button
                          className="text-white/60 hover:text-red-400 p-1"
                          onClick={() => handleRemove(item.id, item.cor, item.tamanho)}
                          aria-label={`Remover ${item.nome}`}
                        >Remover</button>
                      </div>
                    </div>
                  )}
                />
              )}
            </div>
            {/* Footer */}
            <div className="px-6 py-5 border-t border-yellow-400/20 bg-gradient-to-r from-black/80 to-yellow-900/10">
              <div className="flex justify-between items-center mb-4">
                <span className="text-lg text-neutral-300">Subtotal:</span>
                <span className="text-xl text-white">R$ {total.toFixed(2)}</span>
              </div>
              <button
                className="w-full bg-gradient-to-r from-yellow-500 to-yellow-400 text-black rounded-xl py-4 font-extrabold text-lg shadow-lg hover:brightness-105 transition-all transform hover:scale-[1.02] active:scale-[0.98] disabled:opacity-60 disabled:cursor-not-allowed"
                onClick={handleCheckout}
                disabled={isLoading || items.length === 0}
                aria-label="Finalizar compra"
              >
                {isLoading ? (
                  <span className="flex items-center gap-2">
                    <span className="animate-spin">‚è≥</span> Processando...
                  </span>
                ) : (
                  `Finalizar compra ‚Ä¢ R$ ${total.toFixed(2)}`
                )}
              </button>
            </div>
            <CartDrawerSignature />
          </motion.aside>
        </>
      )}
    </AnimatePresence>
  );
}



  üìÅ data/
    üìÑ products.mock.ts

============================================================
FILE: src\data\products.mock.ts
============================================================
// INSANYCK STEP 5
// src/data/products.mock.ts
export type Product = {
    id: string;
    slug: string;
    title: string;
    price: string;
    status?: "new" | "soldout";
    images?: {
      front?: string;
      back?: string;
      detail?: string;
    };
    thumbs?: {
      front?: string;
      back?: string;
      detail?: string;
    };
  };
  
  export const products: Product[] = [
    {
      id: "1",
      slug: "oversized-classic",
      title: "Oversized Classic",
      price: "R$199",
      status: "new",
      images: {
        front: "/products/oversized-classic/front.webp",
        back: "/products/oversized-classic/back.webp",
        detail: "/products/oversized-classic/detail.webp",
      },
      thumbs: {
        front: "/products/oversized-classic/thumbs/front.webp",
        back: "/products/oversized-classic/thumbs/back.webp",
        detail: "/products/oversized-classic/thumbs/detail.webp",
      },
    },
    // adicione outros produtos aqui quando quiser
  ];
  


  üìÅ emails/
    üìÑ OrderConfirmation.tsx

============================================================
FILE: src\emails\OrderConfirmation.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Order confirmation email template
import {
  Body,
  Container,
  Head,
  Heading,
  Hr,
  Html,
  Img,
  Link,
  Preview,
  Section,
  Text,
} from '@react-email/components';

interface OrderConfirmationProps {
  customerName?: string;
  orderNumber?: string;
  orderDate?: string;
  items?: Array<{
    name: string;
    variant?: string;
    price: number;
    quantity: number;
    image?: string;
  }>;
  subtotal?: number;
  shipping?: number;
  total?: number;
  shippingAddress?: {
    name: string;
    street: string;
    city: string;
    state: string;
    postalCode: string;
    country: string;
  };
  language?: 'pt' | 'en';
}

const baseUrl = process.env.VERCEL_URL
  ? `https://${process.env.VERCEL_URL}`
  : process.env.NODE_ENV === 'production'
  ? 'https://insanyck.com'
  : 'http://localhost:3000';

const text = {
  pt: {
    preview: 'Seu pedido INSANYCK foi confirmado',
    title: 'Pedido confirmado',
    greeting: 'Obrigado por sua compra',
    orderInfo: 'Informa√ß√µes do pedido',
    orderNumber: 'Pedido n¬∫',
    orderDate: 'Data',
    items: 'Itens',
    subtotal: 'Subtotal',
    shipping: 'Envio',
    total: 'Total',
    shippingTo: 'Envio para',
    footer: 'Voc√™ receber√° uma atualiza√ß√£o quando seu pedido for enviado.',
    questions: 'D√∫vidas? Entre em contato conosco',
    viewOrder: 'Ver pedido',
  },
  en: {
    preview: 'Your INSANYCK order has been confirmed',
    title: 'Order confirmed',
    greeting: 'Thank you for your purchase',
    orderInfo: 'Order information',
    orderNumber: 'Order #',
    orderDate: 'Date',
    items: 'Items',
    subtotal: 'Subtotal',
    shipping: 'Shipping',
    total: 'Total',
    shippingTo: 'Shipping to',
    footer: 'You\'ll receive an update when your order ships.',
    questions: 'Questions? Contact us',
    viewOrder: 'View order',
  },
};

export default function OrderConfirmation({
  customerName = 'Cliente',
  orderNumber = '#INS-2024-001',
  orderDate = new Date().toLocaleDateString('pt-BR'),
  items = [
    {
      name: 'Oversized Classic Tee',
      variant: 'Preto ‚Ä¢ M',
      price: 12900,
      quantity: 1,
      image: '/products/oversized-classic/front.webp',
    },
  ],
  subtotal = 12900,
  shipping = 0,
  total = 12900,
  shippingAddress = {
    name: 'Cliente INSANYCK',
    street: 'Rua das Flores, 123',
    city: 'S√£o Paulo',
    state: 'SP',
    postalCode: '01234-567',
    country: 'Brasil',
  },
  language = 'pt',
}: OrderConfirmationProps) {
  const t = text[language];

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat(language === 'pt' ? 'pt-BR' : 'en-US', {
      style: 'currency',
      currency: language === 'pt' ? 'BRL' : 'USD',
    }).format(price / 100);
  };

  return (
    <Html>
      <Head />
      <Preview>{t.preview}</Preview>
      <Body style={main}>
        <Container style={container}>
          {/* Header */}
          <Section style={header}>
            <Img
              src={`${baseUrl}/brand/logo.svg`}
              width="120"
              height="40"
              alt="INSANYCK"
              style={logo}
            />
          </Section>

          {/* Main Content */}
          <Section style={content}>
            <Heading style={h1}>{t.title}</Heading>
            <Text style={text1}>
              {customerName}, {t.greeting.toLowerCase()}!
            </Text>

            {/* Order Info */}
            <Section style={orderInfo}>
              <Heading style={h2}>{t.orderInfo}</Heading>
              <Text style={orderDetails}>
                <strong>{t.orderNumber}:</strong> {orderNumber}<br />
                <strong>{t.orderDate}:</strong> {orderDate}
              </Text>
            </Section>

            {/* Items */}
            <Section style={itemsSection}>
              <Heading style={h2}>{t.items}</Heading>
              {items.map((item, index) => (
                <Section key={index} style={itemRow}>
                  <Img
                    src={`${baseUrl}${item.image}`}
                    width="60"
                    height="60"
                    alt={item.name}
                    style={itemImage}
                  />
                  <Section style={itemDetails}>
                    <Text style={itemName}>{item.name}</Text>
                    <Text style={itemVariant}>{item.variant}</Text>
                    <Text style={itemPrice}>
                      {formatPrice(item.price)} √ó {item.quantity}
                    </Text>
                  </Section>
                </Section>
              ))}
            </Section>

            {/* Totals */}
            <Hr style={hr} />
            <Section style={totals}>
              <Text style={totalRow}>
                <span>{t.subtotal}:</span>
                <span>{formatPrice(subtotal)}</span>
              </Text>
              <Text style={totalRow}>
                <span>{t.shipping}:</span>
                <span>{shipping === 0 ? 'Gr√°tis' : formatPrice(shipping)}</span>
              </Text>
              <Text style={totalRowFinal}>
                <span>{t.total}:</span>
                <span>{formatPrice(total)}</span>
              </Text>
            </Section>

            {/* Shipping Address */}
            <Hr style={hr} />
            <Section style={shippingSection}>
              <Heading style={h2}>{t.shippingTo}</Heading>
              <Text style={address}>
                {shippingAddress.name}<br />
                {shippingAddress.street}<br />
                {shippingAddress.city}, {shippingAddress.state} {shippingAddress.postalCode}<br />
                {shippingAddress.country}
              </Text>
            </Section>

            {/* CTA */}
            <Section style={buttonSection}>
              <Link href={`${baseUrl}/account/orders?order=${orderNumber}`} style={button}>
                {t.viewOrder}
              </Link>
            </Section>

            {/* Footer */}
            <Hr style={hr} />
            <Text style={footer}>
              {t.footer}
            </Text>
            <Text style={footer}>
              {t.questions} <Link href={`${baseUrl}/contato`} style={link}>support@insanyck.com</Link>
            </Text>
          </Section>
        </Container>
      </Body>
    </Html>
  );
}

// Styles
const main = {
  backgroundColor: '#0a0a0a',
  fontFamily: '"Helvetica Neue", Helvetica, Arial, sans-serif',
};

const container = {
  margin: '0 auto',
  padding: '20px 0 48px',
  maxWidth: '600px',
};

const header = {
  padding: '32px 0',
  textAlign: 'center' as const,
};

const logo = {
  filter: 'invert(1)',
};

const content = {
  backgroundColor: '#111111',
  border: '1px solid #333333',
  borderRadius: '16px',
  padding: '32px',
};

const h1 = {
  color: '#ffffff',
  fontSize: '32px',
  fontWeight: '600',
  lineHeight: '40px',
  margin: '0 0 24px',
};

const h2 = {
  color: '#ffffff',
  fontSize: '20px',
  fontWeight: '600',
  lineHeight: '28px',
  margin: '0 0 16px',
};

const text1 = {
  color: '#cccccc',
  fontSize: '16px',
  lineHeight: '24px',
  margin: '0 0 32px',
};

const orderInfo = {
  marginBottom: '32px',
};

const orderDetails = {
  color: '#cccccc',
  fontSize: '14px',
  lineHeight: '20px',
  margin: '0',
};

const itemsSection = {
  marginBottom: '32px',
};

const itemRow = {
  display: 'flex',
  alignItems: 'center',
  marginBottom: '16px',
  padding: '16px',
  backgroundColor: '#1a1a1a',
  borderRadius: '12px',
};

const itemImage = {
  borderRadius: '8px',
  marginRight: '16px',
};

const itemDetails = {
  flex: '1',
};

const itemName = {
  color: '#ffffff',
  fontSize: '16px',
  fontWeight: '500',
  margin: '0 0 4px',
};

const itemVariant = {
  color: '#999999',
  fontSize: '14px',
  margin: '0 0 4px',
};

const itemPrice = {
  color: '#ffffff',
  fontSize: '14px',
  fontWeight: '600',
  margin: '0',
};

const hr = {
  borderColor: '#333333',
  margin: '32px 0',
};

const totals = {
  marginBottom: '32px',
};

const totalRow = {
  color: '#cccccc',
  fontSize: '16px',
  lineHeight: '24px',
  margin: '0 0 8px',
  display: 'flex',
  justifyContent: 'space-between',
};

const totalRowFinal = {
  color: '#ffffff',
  fontSize: '18px',
  fontWeight: '600',
  lineHeight: '24px',
  margin: '8px 0 0',
  display: 'flex',
  justifyContent: 'space-between',
  borderTop: '1px solid #333333',
  paddingTop: '16px',
};

const shippingSection = {
  marginBottom: '32px',
};

const address = {
  color: '#cccccc',
  fontSize: '14px',
  lineHeight: '20px',
  margin: '0',
};

const buttonSection = {
  textAlign: 'center' as const,
  marginBottom: '32px',
};

const button = {
  backgroundColor: '#ffffff',
  borderRadius: '12px',
  color: '#000000',
  fontSize: '16px',
  fontWeight: '600',
  textDecoration: 'none',
  textAlign: 'center' as const,
  display: 'inline-block',
  padding: '12px 24px',
};

const footer = {
  color: '#999999',
  fontSize: '14px',
  lineHeight: '20px',
  textAlign: 'center' as const,
  margin: '0 0 16px',
};

const link = {
  color: '#ffffff',
  textDecoration: 'underline',
};


    üìÑ PasswordReset.tsx

============================================================
FILE: src\emails\PasswordReset.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Password reset email template
import {
  Body,
  Container,
  Head,
  Heading,
  Hr,
  Html,
  Img,
  Link,
  Preview,
  Section,
  Text,
} from '@react-email/components';

interface PasswordResetProps {
  customerName?: string;
  resetUrl?: string;
  ipAddress?: string;
  userAgent?: string;
  expiresIn?: string;
  language?: 'pt' | 'en';
}

const baseUrl = process.env.VERCEL_URL
  ? `https://${process.env.VERCEL_URL}`
  : process.env.NODE_ENV === 'production'
  ? 'https://insanyck.com'
  : 'http://localhost:3000';

const text = {
  pt: {
    preview: 'Redefinir sua senha INSANYCK',
    title: 'Redefinir senha',
    greeting: 'Solicita√ß√£o de redefini√ß√£o de senha',
    description: 'Recebemos uma solicita√ß√£o para redefinir a senha da sua conta INSANYCK.',
    instructions: 'Para redefinir sua senha, clique no bot√£o abaixo:',
    resetButton: 'Redefinir senha',
    expiresIn: 'Este link expira em',
    securityInfo: 'Informa√ß√µes de seguran√ßa',
    ipAddress: 'Endere√ßo IP',
    userAgent: 'Navegador',
    notYou: 'N√£o foi voc√™?',
    notYouDescription: 'Se voc√™ n√£o solicitou esta altera√ß√£o, ignore este e-mail. Sua senha permanecer√° inalterada.',
    footer: 'Por motivos de seguran√ßa, este link expirar√° automaticamente.',
    questions: 'D√∫vidas sobre seguran√ßa? Entre em contato conosco',
  },
  en: {
    preview: 'Reset your INSANYCK password',
    title: 'Reset password',
    greeting: 'Password reset request',
    description: 'We received a request to reset the password for your INSANYCK account.',
    instructions: 'To reset your password, click the button below:',
    resetButton: 'Reset password',
    expiresIn: 'This link expires in',
    securityInfo: 'Security information',
    ipAddress: 'IP address',
    userAgent: 'Browser',
    notYou: 'Wasn\'t you?',
    notYouDescription: 'If you didn\'t request this change, ignore this email. Your password will remain unchanged.',
    footer: 'For security reasons, this link will expire automatically.',
    questions: 'Security questions? Contact us',
  },
};

export default function PasswordReset({
  customerName = 'Cliente',
  resetUrl = `${baseUrl}/auth/reset-password?token=example-token`,
  ipAddress = '192.168.1.1',
  userAgent = 'Chrome 91.0.4472.124',
  expiresIn = '1 hora',
  language = 'pt',
}: PasswordResetProps) {
  const t = text[language];

  return (
    <Html>
      <Head />
      <Preview>{t.preview}</Preview>
      <Body style={main}>
        <Container style={container}>
          {/* Header */}
          <Section style={header}>
            <Img
              src={`${baseUrl}/brand/logo.svg`}
              width="120"
              height="40"
              alt="INSANYCK"
              style={logo}
            />
          </Section>

          {/* Main Content */}
          <Section style={content}>
            {/* Security Icon */}
            <Section style={iconSection}>
              <div style={securityIcon}>üîê</div>
            </Section>

            <Heading style={h1}>{t.title}</Heading>
            <Text style={text1}>
              {customerName}, {t.greeting.toLowerCase()}.
            </Text>
            <Text style={description}>
              {t.description}
            </Text>
            <Text style={instructions}>
              {t.instructions}
            </Text>

            {/* CTA */}
            <Section style={buttonSection}>
              <Link href={resetUrl} style={button}>
                {t.resetButton}
              </Link>
            </Section>

            {/* Expiration Notice */}
            <Section style={expirationNotice}>
              <Text style={expirationText}>
                <strong>{t.expiresIn}:</strong> {expiresIn}
              </Text>
            </Section>

            {/* Security Info */}
            <Hr style={hr} />
            <Section style={securitySection}>
              <Heading style={h2}>{t.securityInfo}</Heading>
              <Text style={securityDetails}>
                <strong>{t.ipAddress}:</strong> {ipAddress}<br />
                <strong>{t.userAgent}:</strong> {userAgent}
              </Text>
            </Section>

            {/* Not You Section */}
            <Hr style={hr} />
            <Section style={notYouSection}>
              <Heading style={h2}>{t.notYou}</Heading>
              <Text style={notYouText}>
                {t.notYouDescription}
              </Text>
            </Section>

            {/* Footer */}
            <Hr style={hr} />
            <Text style={footer}>
              {t.footer}
            </Text>
            <Text style={footer}>
              {t.questions} <Link href={`${baseUrl}/contato`} style={link}>security@insanyck.com</Link>
            </Text>
          </Section>
        </Container>
      </Body>
    </Html>
  );
}

// Styles
const main = {
  backgroundColor: '#0a0a0a',
  fontFamily: '"Helvetica Neue", Helvetica, Arial, sans-serif',
};

const container = {
  margin: '0 auto',
  padding: '20px 0 48px',
  maxWidth: '600px',
};

const header = {
  padding: '32px 0',
  textAlign: 'center' as const,
};

const logo = {
  filter: 'invert(1)',
};

const content = {
  backgroundColor: '#111111',
  border: '1px solid #333333',
  borderRadius: '16px',
  padding: '32px',
};

const iconSection = {
  textAlign: 'center' as const,
  marginBottom: '24px',
};

const securityIcon = {
  fontSize: '48px',
  lineHeight: '1',
};

const h1 = {
  color: '#ffffff',
  fontSize: '32px',
  fontWeight: '600',
  lineHeight: '40px',
  margin: '0 0 16px',
  textAlign: 'center' as const,
};

const h2 = {
  color: '#ffffff',
  fontSize: '20px',
  fontWeight: '600',
  lineHeight: '28px',
  margin: '0 0 16px',
};

const text1 = {
  color: '#cccccc',
  fontSize: '16px',
  lineHeight: '24px',
  margin: '0 0 16px',
};

const description = {
  color: '#cccccc',
  fontSize: '16px',
  lineHeight: '24px',
  margin: '0 0 24px',
};

const instructions = {
  color: '#cccccc',
  fontSize: '16px',
  lineHeight: '24px',
  margin: '0 0 32px',
};

const buttonSection = {
  textAlign: 'center' as const,
  marginBottom: '24px',
};

const button = {
  backgroundColor: '#ffffff',
  borderRadius: '12px',
  color: '#000000',
  fontSize: '16px',
  fontWeight: '600',
  textDecoration: 'none',
  textAlign: 'center' as const,
  display: 'inline-block',
  padding: '16px 32px',
};

const expirationNotice = {
  backgroundColor: '#1a1a1a',
  borderRadius: '12px',
  padding: '16px',
  marginBottom: '32px',
  textAlign: 'center' as const,
};

const expirationText = {
  color: '#ffffff',
  fontSize: '14px',
  margin: '0',
};

const hr = {
  borderColor: '#333333',
  margin: '32px 0',
};

const securitySection = {
  marginBottom: '32px',
};

const securityDetails = {
  color: '#cccccc',
  fontSize: '14px',
  lineHeight: '20px',
  margin: '0',
  backgroundColor: '#1a1a1a',
  padding: '16px',
  borderRadius: '12px',
};

const notYouSection = {
  marginBottom: '32px',
};

const notYouText = {
  color: '#cccccc',
  fontSize: '14px',
  lineHeight: '20px',
  margin: '0',
};

const footer = {
  color: '#999999',
  fontSize: '14px',
  lineHeight: '20px',
  textAlign: 'center' as const,
  margin: '0 0 16px',
};

const link = {
  color: '#ffffff',
  textDecoration: 'underline',
};


    üìÑ ShippingUpdate.tsx

============================================================
FILE: src\emails\ShippingUpdate.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Shipping update email template
import {
  Body,
  Container,
  Head,
  Heading,
  Hr,
  Html,
  Img,
  Link,
  Preview,
  Section,
  Text,
} from '@react-email/components';

interface ShippingUpdateProps {
  customerName?: string;
  orderNumber?: string;
  trackingNumber?: string;
  carrier?: string;
  estimatedDelivery?: string;
  shippingAddress?: {
    name: string;
    street: string;
    city: string;
    state: string;
    postalCode: string;
    country: string;
  };
  items?: Array<{
    name: string;
    variant?: string;
    quantity: number;
    image?: string;
  }>;
  language?: 'pt' | 'en';
}

const baseUrl = process.env.VERCEL_URL
  ? `https://${process.env.VERCEL_URL}`
  : process.env.NODE_ENV === 'production'
  ? 'https://insanyck.com'
  : 'http://localhost:3000';

const text = {
  pt: {
    preview: 'Seu pedido INSANYCK foi enviado',
    title: 'Pedido enviado',
    greeting: 'Seu pedido est√° a caminho',
    description: 'Seu pedido foi despachado e est√° a caminho do endere√ßo de entrega.',
    orderNumber: 'Pedido n¬∫',
    trackingNumber: 'C√≥digo de rastreamento',
    carrier: 'Transportadora',
    estimatedDelivery: 'Previs√£o de entrega',
    shippingTo: 'Envio para',
    items: 'Itens enviados',
    trackPackage: 'Rastrear pedido',
    footer: 'Voc√™ receber√° uma notifica√ß√£o quando seu pedido for entregue.',
    questions: 'D√∫vidas? Entre em contato conosco',
  },
  en: {
    preview: 'Your INSANYCK order has shipped',
    title: 'Order shipped',
    greeting: 'Your order is on the way',
    description: 'Your order has been dispatched and is on its way to the delivery address.',
    orderNumber: 'Order #',
    trackingNumber: 'Tracking number',
    carrier: 'Carrier',
    estimatedDelivery: 'Estimated delivery',
    shippingTo: 'Shipping to',
    items: 'Items shipped',
    trackPackage: 'Track package',
    footer: 'You\'ll receive a notification when your order is delivered.',
    questions: 'Questions? Contact us',
  },
};

export default function ShippingUpdate({
  customerName = 'Cliente',
  orderNumber = '#INS-2024-001',
  trackingNumber = 'BR123456789',
  carrier = 'Correios',
  estimatedDelivery = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toLocaleDateString('pt-BR'),
  shippingAddress = {
    name: 'Cliente INSANYCK',
    street: 'Rua das Flores, 123',
    city: 'S√£o Paulo',
    state: 'SP',
    postalCode: '01234-567',
    country: 'Brasil',
  },
  items = [
    {
      name: 'Oversized Classic Tee',
      variant: 'Preto ‚Ä¢ M',
      quantity: 1,
      image: '/products/oversized-classic/front.webp',
    },
  ],
  language = 'pt',
}: ShippingUpdateProps) {
  const t = text[language];

  const getTrackingUrl = () => {
    if (carrier.toLowerCase().includes('correios')) {
      return `https://www2.correios.com.br/sistemas/rastreamento/ctrl/ctrlRastreamento.cfm?codigo=${trackingNumber}`;
    }
    return '#';
  };

  return (
    <Html>
      <Head />
      <Preview>{t.preview}</Preview>
      <Body style={main}>
        <Container style={container}>
          {/* Header */}
          <Section style={header}>
            <Img
              src={`${baseUrl}/brand/logo.svg`}
              width="120"
              height="40"
              alt="INSANYCK"
              style={logo}
            />
          </Section>

          {/* Main Content */}
          <Section style={content}>
            {/* Shipping Icon */}
            <Section style={iconSection}>
              <div style={shippingIcon}>üì¶</div>
            </Section>

            <Heading style={h1}>{t.title}</Heading>
            <Text style={text1}>
              {customerName}, {t.greeting.toLowerCase()}!
            </Text>
            <Text style={description}>
              {t.description}
            </Text>

            {/* Tracking Info */}
            <Section style={trackingInfo}>
              <Text style={infoRow}>
                <strong>{t.orderNumber}:</strong> {orderNumber}
              </Text>
              <Text style={infoRow}>
                <strong>{t.trackingNumber}:</strong> {trackingNumber}
              </Text>
              <Text style={infoRow}>
                <strong>{t.carrier}:</strong> {carrier}
              </Text>
              <Text style={infoRow}>
                <strong>{t.estimatedDelivery}:</strong> {estimatedDelivery}
              </Text>
            </Section>

            {/* CTA */}
            <Section style={buttonSection}>
              <Link href={getTrackingUrl()} style={button}>
                {t.trackPackage}
              </Link>
            </Section>

            {/* Items */}
            <Hr style={hr} />
            <Section style={itemsSection}>
              <Heading style={h2}>{t.items}</Heading>
              {items.map((item, index) => (
                <Section key={index} style={itemRow}>
                  <Img
                    src={`${baseUrl}${item.image}`}
                    width="60"
                    height="60"
                    alt={item.name}
                    style={itemImage}
                  />
                  <Section style={itemDetails}>
                    <Text style={itemName}>{item.name}</Text>
                    <Text style={itemVariant}>{item.variant}</Text>
                    <Text style={itemQuantity}>Qtd: {item.quantity}</Text>
                  </Section>
                </Section>
              ))}
            </Section>

            {/* Shipping Address */}
            <Hr style={hr} />
            <Section style={shippingSection}>
              <Heading style={h2}>{t.shippingTo}</Heading>
              <Text style={address}>
                {shippingAddress.name}<br />
                {shippingAddress.street}<br />
                {shippingAddress.city}, {shippingAddress.state} {shippingAddress.postalCode}<br />
                {shippingAddress.country}
              </Text>
            </Section>

            {/* Footer */}
            <Hr style={hr} />
            <Text style={footer}>
              {t.footer}
            </Text>
            <Text style={footer}>
              {t.questions} <Link href={`${baseUrl}/contato`} style={link}>support@insanyck.com</Link>
            </Text>
          </Section>
        </Container>
      </Body>
    </Html>
  );
}

// Styles
const main = {
  backgroundColor: '#0a0a0a',
  fontFamily: '"Helvetica Neue", Helvetica, Arial, sans-serif',
};

const container = {
  margin: '0 auto',
  padding: '20px 0 48px',
  maxWidth: '600px',
};

const header = {
  padding: '32px 0',
  textAlign: 'center' as const,
};

const logo = {
  filter: 'invert(1)',
};

const content = {
  backgroundColor: '#111111',
  border: '1px solid #333333',
  borderRadius: '16px',
  padding: '32px',
};

const iconSection = {
  textAlign: 'center' as const,
  marginBottom: '24px',
};

const shippingIcon = {
  fontSize: '48px',
  lineHeight: '1',
};

const h1 = {
  color: '#ffffff',
  fontSize: '32px',
  fontWeight: '600',
  lineHeight: '40px',
  margin: '0 0 16px',
  textAlign: 'center' as const,
};

const h2 = {
  color: '#ffffff',
  fontSize: '20px',
  fontWeight: '600',
  lineHeight: '28px',
  margin: '0 0 16px',
};

const text1 = {
  color: '#cccccc',
  fontSize: '16px',
  lineHeight: '24px',
  margin: '0 0 16px',
  textAlign: 'center' as const,
};

const description = {
  color: '#cccccc',
  fontSize: '16px',
  lineHeight: '24px',
  margin: '0 0 32px',
  textAlign: 'center' as const,
};

const trackingInfo = {
  backgroundColor: '#1a1a1a',
  borderRadius: '12px',
  padding: '24px',
  marginBottom: '32px',
};

const infoRow = {
  color: '#cccccc',
  fontSize: '14px',
  lineHeight: '20px',
  margin: '0 0 8px',
};

const buttonSection = {
  textAlign: 'center' as const,
  marginBottom: '32px',
};

const button = {
  backgroundColor: '#ffffff',
  borderRadius: '12px',
  color: '#000000',
  fontSize: '16px',
  fontWeight: '600',
  textDecoration: 'none',
  textAlign: 'center' as const,
  display: 'inline-block',
  padding: '16px 32px',
};

const hr = {
  borderColor: '#333333',
  margin: '32px 0',
};

const itemsSection = {
  marginBottom: '32px',
};

const itemRow = {
  display: 'flex',
  alignItems: 'center',
  marginBottom: '16px',
  padding: '16px',
  backgroundColor: '#1a1a1a',
  borderRadius: '12px',
};

const itemImage = {
  borderRadius: '8px',
  marginRight: '16px',
};

const itemDetails = {
  flex: '1',
};

const itemName = {
  color: '#ffffff',
  fontSize: '16px',
  fontWeight: '500',
  margin: '0 0 4px',
};

const itemVariant = {
  color: '#999999',
  fontSize: '14px',
  margin: '0 0 4px',
};

const itemQuantity = {
  color: '#cccccc',
  fontSize: '14px',
  margin: '0',
};

const shippingSection = {
  marginBottom: '32px',
};

const address = {
  color: '#cccccc',
  fontSize: '14px',
  lineHeight: '20px',
  margin: '0',
};

const footer = {
  color: '#999999',
  fontSize: '14px',
  lineHeight: '20px',
  textAlign: 'center' as const,
  margin: '0 0 16px',
};

const link = {
  color: '#ffffff',
  textDecoration: 'underline',
};


  üìÅ hooks/
    üìÑ useCheckout.ts

============================================================
FILE: src\hooks\useCheckout.ts
============================================================
// src/hooks/useCheckout.ts
import { useCart } from "@/store/useCart";
import { useState } from "react";
import { loadStripe } from "@stripe/stripe-js";

export function useCheckout() {
  const cart = useCart((s) => s.items);
  const [isLoading, setIsLoading] = useState(false);

  const handleCheckout = async () => {
    setIsLoading(true);
    try {
      const stripe = await loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY as string);
      // Chamada para endpoint seguro que cria PaymentIntent
      const res = await fetch("/api/create-payment-intent", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ cart, currency: "BRL" }),
      });
      const data = await res.json();
      if (!data.clientSecret) throw new Error("Falha no pagamento");

      // Stripe Payment Flow
      await stripe?.redirectToCheckout({ sessionId: data.sessionId });

      // Fallback: modo offline/localStorage caso Stripe falhe (simples exemplo)
    } catch {
      alert("Erro ao processar pagamento, tente novamente.");
    } finally {
      setIsLoading(false);
    }
  };

  return { handleCheckout, isLoading };
}



    üìÑ useLockBodyScroll.ts

============================================================
FILE: src\hooks\useLockBodyScroll.ts
============================================================
// INSANYCK ‚Äî Body scroll lock hook
import { useEffect } from 'react';

export function useLockBodyScroll(lock: boolean) {
  useEffect(() => {
    if (lock) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = '';
    }

    return () => {
      document.body.style.overflow = '';
    };
  }, [lock]);
}


  üìÅ lib/
    üìÑ adminAuth.ts

============================================================
FILE: src\lib\adminAuth.ts
============================================================
// INSANYCK STEP 10 ‚Äî RBAC Helper para Admin
// src/lib/adminAuth.ts
import { NextApiRequest, NextApiResponse } from 'next';
import { getServerSession } from 'next-auth';
import { createAuthOptions } from '@/pages/api/auth/[...nextauth]';

export class UnauthorizedError extends Error {
  constructor(message = 'Unauthorized') {
    super(message);
    this.name = 'UnauthorizedError';
  }
}

export async function requireAdmin(req: NextApiRequest, res: NextApiResponse) {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(req, res, authOptions);
  
  if (!session?.user) {
    throw new UnauthorizedError('Authentication required');
  }
  
  // INSANYCK STEP 10 ‚Äî Verificar role admin
  const userRole = (session.user as any)?.role;
  if (userRole !== 'admin') {
    throw new UnauthorizedError('Admin access required');
  }
  
  return session;
}

export function withAdminAuth(handler: (_req: NextApiRequest, _res: NextApiResponse, _session: any) => Promise<void>) {
  return async (req: NextApiRequest, res: NextApiResponse) => {
    try {
      const session = await requireAdmin(req, res);
      return await handler(req, res, session);
    } catch (error) {
      if (error instanceof UnauthorizedError) {
        return res.status(401).json({ error: error.message });
      }
      console.error('Admin auth error:', error);
      return res.status(500).json({ error: 'Internal server error' });
    }
  };
}

export function withAdminMiddleware(req: NextApiRequest, res: NextApiResponse, next: () => void) {
  requireAdmin(req, res)
    .then(() => next())
    .catch((error) => {
      if (error instanceof UnauthorizedError) {
        res.status(401).json({ error: error.message });
      } else {
        console.error('Admin middleware error:', error);
        res.status(500).json({ error: 'Internal server error' });
      }
    });
}


    üìÑ analytics.ts

============================================================
FILE: src\lib\analytics.ts
============================================================
// INSANYCK STEP 8
type EventName =
  | "view_item"
  | "add_to_wishlist"
  | "remove_from_wishlist"
  | "search"
  | "select_suggestion"
  | "begin_checkout"
  | "purchase";

export function track(_event: EventName, _payload?: Record<string, any>) {
  try {
    if (process.env.NODE_ENV === "development") {
      // Debug em desenvolvimento via console.debug (removido para ESLint)
    }
    // Aqui no futuro podemos enviar para GA/Segment etc.
  } catch {
    // n√£o bloqueia UI
  }
}



    üìÑ backendGuard.ts

============================================================
FILE: src\lib\backendGuard.ts
============================================================
// src/lib/backendGuard.ts
export const backendDisabled = process.env.INSANYCK_DISABLE_BACKEND === "1";

export function missingEnv(...keys: string[]) {
  const absent = keys.filter(k => !process.env[k] || process.env[k] === "");
  return { ok: absent.length === 0, absent };
}


    üìÑ catalog.ts

============================================================
FILE: src\lib\catalog.ts
============================================================
// INSANYCK STEP 11 ‚Äî Catalog Utils with Real Prisma Integration
import { prisma } from "@/lib/prisma";
import { ProductCardData, productToCardData } from "@/types/product";

const PLACEHOLDER = "/thumbs/placeholder.webp";
const backendDisabled = process.env.BACKEND_DISABLED === "1";

const mockProducts: ProductCardData[] = [
  { id:"m1", slug:"tee-oversized-preta", title:"Oversized Tee Preta", price:"R$ 149,00",
    images:{ front: PLACEHOLDER }, thumbs:{ front: PLACEHOLDER } },
  { id:"m2", slug:"tee-classic-branca", title:"Classic Tee Branca", price:"R$ 139,00",
    images:{ front: PLACEHOLDER }, thumbs:{ front: PLACEHOLDER } },
  { id:"m3", slug:"regata-essential-preta", title:"Regata Essential Preta", price:"R$ 99,00",
    images:{ front: PLACEHOLDER }, thumbs:{ front: PLACEHOLDER } },
  { id:"m4", slug:"drop-zero-limited", title:"Drop Zero Limited", price:"R$ 199,00",
    images:{ front: PLACEHOLDER }, thumbs:{ front: PLACEHOLDER } },
  { id:"m5", slug:"acessorio-bucket-preto", title:"Bucket Hat Preto", price:"R$ 119,00",
    images:{ front: PLACEHOLDER }, thumbs:{ front: PLACEHOLDER } },
  { id:"m6", slug:"moletom-classic-cinza", title:"Moletom Classic Cinza", price:"R$ 249,00",
    images:{ front: PLACEHOLDER }, thumbs:{ front: PLACEHOLDER } },
  { id:"m7", slug:"oversized-classic-off", title:"Oversized Classic Off", price:"R$ 159,00",
    images:{ front: PLACEHOLDER }, thumbs:{ front: PLACEHOLDER } },
  { id:"m8", slug:"regatas-verao-pack", title:"Pack Regatas Ver√£o", price:"R$ 179,00",
    images:{ front: PLACEHOLDER }, thumbs:{ front: PLACEHOLDER } },
];

/**
 * Get featured products for home page carousels
 */
export async function getFeaturedProducts(limit = 8): Promise<ProductCardData[]> {
  if (backendDisabled) return mockProducts.slice(0, limit);
  
  try {
    const products = await prisma.product.findMany({
      where: { status: 'active' },
      take: limit,
      include: {
        images: true,
        variants: {
          include: {
            price: true,
            inventory: true,
          }
        },
      },
      orderBy: { createdAt: 'desc' },
    });

    return products.map(productToCardData);
  } catch (error) {
    if (!backendDisabled) console.error('[INSANYCK][Catalog] featured:', error);
    return mockProducts.slice(0, limit);
  }
}

/**
 * Get new arrivals for home page
 */
export async function getNewArrivals(limit = 6): Promise<ProductCardData[]> {
  if (backendDisabled) return mockProducts.slice(0, limit);
  
  try {
    const products = await prisma.product.findMany({
      where: { status: 'active' },
      take: limit,
      include: {
        images: true,
        variants: {
          include: {
            price: true,
            inventory: true,
          }
        },
      },
      orderBy: { createdAt: 'desc' },
    });

    return products.map(productToCardData);
  } catch (error) {
    if (!backendDisabled) console.error('[INSANYCK][Catalog] new arrivals:', error);
    return mockProducts.slice(0, limit);
  }
}

/**
 * Get category highlights
 */
export async function getCategoryHighlights(categorySlug: string, limit = 4): Promise<ProductCardData[]> {
  if (backendDisabled) return mockProducts.slice(0, limit);
  
  try {
    const products = await prisma.product.findMany({
      where: {
        status: 'active',
        category: { is: { slug: categorySlug } }
      },
      take: limit,
      include: {
        images: true,
        variants: {
          include: {
            price: true,
            inventory: true,
          }
        },
        category: true,
      },
      orderBy: { createdAt: 'desc' },
    });

    return products.map(productToCardData);
  } catch (error) {
    if (!backendDisabled) console.error('[INSANYCK][Catalog] cat highlights:', error);
    return mockProducts.slice(0, limit);
  }
}

/**
 * Search products by query string
 */
export async function searchProducts(query: string, limit = 20): Promise<ProductCardData[]> {
  if (!query.trim()) return [];
  
  if (backendDisabled) {
    return mockProducts
      .filter(p => p.title.toLowerCase().includes(query.toLowerCase()))
      .slice(0, limit);
  }

  try {
    const products = await prisma.product.findMany({
      where: {
        status: 'active',
        OR: [
          { title: { contains: query, mode: 'insensitive' } },
          { description: { contains: query, mode: 'insensitive' } },
        ],
      },
      take: limit,
      include: {
        images: true,
        variants: {
          include: {
            price: true,
            inventory: true,
          }
        },
        category: true,
      },
      orderBy: { title: 'asc' },
    });

    return products.map(productToCardData);
  } catch (error) {
    if (!backendDisabled) console.error('[INSANYCK][Catalog] search:', error);
    return mockProducts
      .filter(p => p.title.toLowerCase().includes(query.toLowerCase()))
      .slice(0, limit);
  }
}

/**
 * Get all products for PLP with filtering/sorting
 */
export async function getAllProducts(options: {
  categorySlug?: string;
  sortBy?: 'newest' | 'oldest' | 'price_asc' | 'price_desc' | 'title';
  limit?: number;
  offset?: number;
} = {}): Promise<ProductCardData[]> {
  const { categorySlug, sortBy = 'newest', limit = 20, offset = 0 } = options;

  if (backendDisabled) return mockProducts.slice(offset, offset + limit);

  try {
    // Build where clause
    const where: any = { status: 'active' };
    if (categorySlug) {
      where.category = { is: { slug: categorySlug } };
    }

    // Build orderBy clause
    let orderBy: any;
    switch (sortBy) {
      case 'oldest':
        orderBy = { createdAt: 'asc' };
        break;
      case 'title':
        orderBy = { title: 'asc' };
        break;
      case 'price_asc':
      case 'price_desc':
        // For price sorting, we'll sort after fetching based on variant pricing
        orderBy = { createdAt: 'desc' };
        break;
      default:
        orderBy = { createdAt: 'desc' };
    }

    const products = await prisma.product.findMany({
      where,
      take: limit,
      skip: offset,
      include: {
        images: true,
        variants: {
          include: {
            price: true,
            inventory: true,
          }
        },
        category: true,
      },
      orderBy,
    });

    // INSANYCK STEP 11 ‚Äî Robust price sorting with minCents (no string parsing)
    const getMinCents = (prod: any) => {
      const vals = (prod.variants ?? [])
        .map((v: any) => v?.price?.cents ?? 0)
        .filter((n: number) => Number.isFinite(n) && n > 0);
      return vals.length ? Math.min(...vals) : 0;
    };

    if (sortBy === 'price_asc' || sortBy === 'price_desc') {
      products.sort((a: any, b: any) => {
        const A = getMinCents(a);
        const B = getMinCents(b);
        return sortBy === 'price_asc' ? A - B : B - A;
      });
    }

    // Map depois da ordena√ß√£o
    const result = products.map(productToCardData);
    return result;
  } catch (error) {
    if (!backendDisabled) console.error('[INSANYCK][Catalog] all products:', error);
    return mockProducts.slice(offset, offset + limit);
  }
}


    üìÑ coupon.ts

============================================================
FILE: src\lib\coupon.ts
============================================================
// src/lib/coupon.ts
export type CouponResult = {
    valid: boolean;
    discountCents: number;
    message?: string; // i18n key
  };
  
  export function applyCoupon(code: string, subtotalCents: number): CouponResult {
    const c = (code || "").trim().toUpperCase();
    if (!c) return { valid: false, discountCents: 0, message: "checkout:errors.couponEmpty" };
  
    if (c === "INSANY10") {
      const discount = Math.round(subtotalCents * 0.1);
      return { valid: true, discountCents: discount, message: "checkout:coupon.applied10" };
    }
  
    if (c === "FRETEGRATIS") {
      // cupom de frete √© tratado na tela, aqui sinalizamos "v√°lido sem desconto direto"
      return { valid: true, discountCents: 0, message: "checkout:coupon.freeShipping" };
    }
  
    return { valid: false, discountCents: 0, message: "checkout:errors.couponInvalid" };
  }
  


    üìÑ env.public.ts

============================================================
FILE: src\lib\env.public.ts
============================================================
// src/lib/env.public.ts
// Somente vari√°veis p√∫blicas. Nunca dar throw. Seguro para rodar no client.

const sanitize = (u: string) => u.replace(/\/$/, "");

export const getPublicBaseUrl = (): string => {
  const raw = (process.env.NEXT_PUBLIC_URL || "").trim();
  const valid = raw && /^https?:\/\//i.test(raw) ? raw : "";
  const fallback = process.env.NODE_ENV === "production"
    ? "https://insanyck.com"
    : "http://localhost:3000";
  if (!valid && typeof console !== "undefined" && process.env.NODE_ENV !== "production") {
    // Log √∫nico e discreto em dev
    console.warn("[INSANYCK][ENV] NEXT_PUBLIC_URL ausente. Usando fallback:", fallback);
  }
  return sanitize(valid || fallback);
};

export const PUBLIC_URL = getPublicBaseUrl();


    üìÑ env.server.ts

============================================================
FILE: src\lib\env.server.ts
============================================================
// INSANYCK STEP 11 ‚Äî ENV Server-Only Validation with Zod
import { z } from 'zod';

// Server-only environment schema
const serverEnvSchema = z.object({
  // Stripe (required for checkout/webhook)
  STRIPE_SECRET_KEY: z.string().min(1, 'STRIPE_SECRET_KEY is required'),
  STRIPE_WEBHOOK_SECRET: z.string().min(1, 'STRIPE_WEBHOOK_SECRET is required'),
  STRIPE_API_VERSION: z.string().default('2025-07-30.basil'),
  
  // Auth (required for NextAuth)
  NEXTAUTH_URL: z.string().url('NEXTAUTH_URL must be a valid URL'),
  NEXTAUTH_SECRET: z.string().min(1, 'NEXTAUTH_SECRET is required'),
  
  // Database (required for Prisma)
  DATABASE_URL: z.string().min(1, 'DATABASE_URL is required'),
  
  // URLs (must be coherent)
  NEXT_PUBLIC_URL: z.string().url('NEXT_PUBLIC_URL must be a valid URL'),
  
  // Optional
  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),
});

// Parse and validate environment variables once
let _env: z.infer<typeof serverEnvSchema> | null = null;

export const env = (() => {
  if (_env) return _env;
  
  try {
    _env = serverEnvSchema.parse(process.env);
    
    // Validate coherence between URLs
    if (_env.NODE_ENV === 'production') {
      const nextAuthUrl = new URL(_env.NEXTAUTH_URL);
      const publicUrl = new URL(_env.NEXT_PUBLIC_URL);
      
      if (nextAuthUrl.origin !== publicUrl.origin) {
        throw new Error('NEXTAUTH_URL and NEXT_PUBLIC_URL must have the same origin in production');
      }
    }
    
    // Environment validation successful (log removed for ESLint)
    
    return _env;
  } catch (error) {
    if (error instanceof z.ZodError) {
      console.error('[INSANYCK][ENV] Environment validation failed:');
      error.issues.forEach((err) => {
        console.error(`  - ${err.path.join('.')}: ${err.message}`);
      });
    } else {
      console.error('[INSANYCK][ENV] Environment error:', error);
    }
    
    throw new Error('Invalid environment configuration');
  }
})();

// Helper to check if server env is ready
export const isServerEnvReady = () => {
  try {
    return !!env;
  } catch {
    return false;
  }
};


    üìÑ fraud.ts

============================================================
FILE: src\lib\fraud.ts
============================================================
// ==========================
// üéØ FINGERPRINT DO DISPOSITIVO
// ==========================
export async function getFingerprint(): Promise<{
  id: string;
  os: string;
  browser: string;
  screen: string;
  timezone: string;
  language: string;
  userAgent: string;
  canvasHash: string;
}> {
  const os = detectOS();
  const browser = detectBrowser();
  const screen = `${window.screen.width}x${window.screen.height}`;
  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
  const language = navigator.language;
  const userAgent = navigator.userAgent;
  const canvasHash = await generateCanvasFingerprint();

  const raw = `${os}-${browser}-${screen}-${timezone}-${language}-${canvasHash}`;
  const id = hashString(raw);

  return {
    id,
    os,
    browser,
    screen,
    timezone,
    language,
    userAgent,
    canvasHash,
  };
}

// ======= üîç Detecta o sistema operacional =======
function detectOS(): string {
  const { userAgent, platform } = navigator;
  if (/Win/.test(platform)) return "Windows";
  if (/Mac/.test(platform)) return "MacOS";
  if (/Linux/.test(platform)) return "Linux";
  if (/iPhone|iPad|iPod/.test(userAgent)) return "iOS";
  if (/Android/.test(userAgent)) return "Android";
  return "Unknown";
}

// ======= üîç Detecta o navegador com precis√£o =======
function detectBrowser(): string {
  const ua = navigator.userAgent;
  if (/Chrome\/\d+/.test(ua) && !/Edge/.test(ua)) return "Chrome";
  if (/Safari/.test(ua) && !/Chrome/.test(ua)) return "Safari";
  if (/Firefox/.test(ua)) return "Firefox";
  if (/Edg/.test(ua)) return "Edge";
  return "Unknown";
}

// ======= üé® Fingerprint por Canvas (anti-bot) =======
function generateCanvasFingerprint(): Promise<string> {
  return new Promise((resolve) => {
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    if (!ctx) return resolve("no-canvas");

    canvas.width = 200;
    canvas.height = 50;

    ctx.textBaseline = "top";
    ctx.font = "16px Arial";
    ctx.fillStyle = "#f60";
    ctx.fillRect(125, 1, 62, 20);
    ctx.fillStyle = "#069";
    ctx.fillText("INSANYCK_FINGERPRINT", 2, 15);

    const dataURL = canvas.toDataURL();
    resolve(hashString(dataURL));
  });
}

// ======= üîê Fun√ß√£o de hash simples (base-36 com CRC simulada) =======
function hashString(str: string): string {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    hash = (hash << 5) - hash + str.charCodeAt(i);
    hash |= 0; // to 32bit int
  }
  return Math.abs(hash).toString(36);
}

// ==========================
// üß† AN√ÅLISE DE COMPORTAMENTO AVAN√áADA
// ==========================

export async function analyzeBehavior(): Promise<{ risk: number; events: number }> {
  let moveCount = 0;
  let keyCount = 0;
  let pasteCount = 0;
  let scrollCount = 0;

  // Fun√ß√µes separadas para cada tipo de evento (tipagem correta!)
  function onMouseMove(_ev: MouseEvent) { moveCount++; }
  function onKeyDown(_ev: KeyboardEvent) { keyCount++; }
  function onPaste(_ev: ClipboardEvent) { pasteCount++; }
  function onScroll(_ev: Event) { scrollCount++; }

  // Adiciona listeners
  window.addEventListener("mousemove", onMouseMove);
  window.addEventListener("keydown", onKeyDown);
  window.addEventListener("paste", onPaste);
  window.addEventListener("scroll", onScroll);

  // Espera 4 segundos capturando os eventos do usu√°rio
  await new Promise(resolve => setTimeout(resolve, 4000));

  // Remove listeners depois de medir
  window.removeEventListener("mousemove", onMouseMove);
  window.removeEventListener("keydown", onKeyDown);
  window.removeEventListener("paste", onPaste);
  window.removeEventListener("scroll", onScroll);

  // Calcula um score de risco (exemplo simples, refine como quiser)
  // Comportamento "muito rob√≥tico" = pouco evento -> risco alto
  const total = moveCount + keyCount + pasteCount + scrollCount;
  let risk = 1;
  if (total < 2) risk = 8; // Praticamente n√£o mexeu ‚Äî suspeito
  else if (total < 5) risk = 5; // Intera√ß√£o m√≠nima

  return { risk, events: total };
}



    üìÑ i18n.ts

============================================================
FILE: src\lib\i18n.ts
============================================================
// lib/i18n.ts
import i18n from "i18next";
import { initReactI18next } from "react-i18next";
import LanguageDetector from "i18next-browser-languagedetector";

// Tradu√ß√µes organizadas por namespace (permite crescer para outros m√≥dulos)
const resources = {
  pt: {
    checkout: {
      review: "Revisar pedido",
      irParaPagamento: "Ir para pagamento",
      sucesso: "Pagamento aprovado!",
      confirmacao: "Obrigado por comprar INSANYCK.",
      voltar: "Voltar",
      formPagamento: "Formul√°rio de Pagamento",
      pagarAgora: "Pagar agora",
      processando: "Processando...",
      total: "Total",
      cor: "Cor",
      tamanho: "Tamanho",
    },
    menu: {
      home: "In√≠cio",
      colecao: "Cole√ß√£o",
      manifesto: "Manifesto",
      blog: "Blog",
      contato: "Contato",
      cliente: "√Årea do Cliente",
      carrinho: "Carrinho"
    }
  },
  en: {
    checkout: {
      review: "Review Order",
      irParaPagamento: "Proceed to Payment",
      sucesso: "Payment Successful!",
      confirmacao: "Thank you for shopping INSANYCK.",
      voltar: "Back",
      formPagamento: "Payment Form",
      pagarAgora: "Pay now",
      processando: "Processing...",
      total: "Total",
      cor: "Color",
      tamanho: "Size",
    },
    menu: {
      home: "Home",
      colecao: "Collection",
      manifesto: "Manifest",
      blog: "Blog",
      contato: "Contact",
      cliente: "Client Area",
      carrinho: "Cart"
    }
  }
};

i18n
  .use(LanguageDetector) // detecta idioma do browser automaticamente
  .use(initReactI18next)
  .init({
    resources,
    ns: ["checkout", "menu"], // namespaces para organiza√ß√£o modular
    defaultNS: "checkout",
    fallbackLng: "pt",
    detection: {
      // Prioridade: querystring, localStorage, cookie, navegador
      order: ["querystring", "localStorage", "cookie", "navigator"],
      caches: ["localStorage", "cookie"],
    },
    interpolation: {
      escapeValue: false, // React j√° faz escaping
    },
    debug: process.env.NODE_ENV === "development"
  });

export default i18n;



    üìÅ models/
      üìÑ Cart.ts

============================================================
FILE: src\lib\models\Cart.ts
============================================================
// src/lib/models/Cart.ts
import mongoose, { Schema, Document, Model, Types } from "mongoose";

export enum Currency {
  _BRL = "BRL",
  _USD = "USD",
  _EUR = "EUR"
}

// Considere exportar Color/Size enums de um arquivo central depois.

export interface ICartItem {
  productId: Types.ObjectId;
  name: string;
  price: number;
  color: string;
  size: string;
  quantity: number;
  imageUrl?: string;
  currency?: Currency;
  variantId?: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface ICart extends Document {
  userId: Types.ObjectId;
  sessionId?: string;
  items: ICartItem[];
  expiresAt: Date;
}

const CartItemSchema = new Schema<ICartItem>({
  productId: { type: Schema.Types.ObjectId, required: true, ref: 'Product' },
  name: { type: String, required: true, minlength: 2, maxlength: 100 },
  price: { type: Number, required: true, min: 0.01, max: 100000 },
  color: { type: String, required: true, enum: ['black', 'white', 'red', 'blue', 'green'] },
  size: { type: String, required: true, enum: ['XS', 'S', 'M', 'L', 'XL', 'XXL'] },
  quantity: { type: Number, required: true, min: 1, max: 100, default: 1 },
  imageUrl: {
    type: String,
    validate: {
      validator: (v: string) => /^https?:\/\/.+\.(jpg|jpeg|png|webp)$/.test(v),
      message: 'URL de imagem inv√°lida'
    }
  },
  currency: { type: String, enum: Object.values(Currency), default: Currency._BRL },
  variantId: String,
  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now }
}, { _id: false });

// TTL autom√°tico
const CartSchema = new Schema<ICart>({
  userId: { type: Schema.Types.ObjectId, ref: 'User', index: true, sparse: true },
  sessionId: { type: String, index: true, sparse: true },
  items: {
    type: [CartItemSchema], default: [],
    validate: { validator: (v: ICartItem[]) => v.length <= 100, message: 'Carrinho excede o limite de 100 itens' }
  },
  expiresAt: {
    type: Date,
    default: () => new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),
    index: { expireAfterSeconds: 0 }
  }
}, {
  timestamps: true,
  versionKey: false
});

// Middleware para atualizar "updatedAt" dos itens ao salvar
CartSchema.pre<ICart>('save', function(next) {
  this.items = this.items.map(item => ({
    ...item,
    updatedAt: new Date()
  }));
  next();
});

// Static para busca flex√≠vel por user/session
CartSchema.statics.findByUserOrSession = function(userId: string | null, sessionId: string) {
  return this.findOne({
    $or: [
      { userId: userId ? new Types.ObjectId(userId) : null },
      { sessionId }
    ]
  });
};

interface CartModel extends Model<ICart> {
  findByUserOrSession(_userId: string | null, _sessionId: string): Promise<ICart | null>;
}

const Cart: CartModel = mongoose.models.Cart as CartModel || mongoose.model<ICart, CartModel>('Cart', CartSchema);
export default Cart;



    üìÑ mongo.ts

============================================================
FILE: src\lib\mongo.ts
============================================================
// src/lib/mongo.ts
import mongoose from "mongoose";

// 1. Valida√ß√£o robusta da URI
const MONGODB_URI = process.env.MONGODB_URI as string;

if (!MONGODB_URI) {
  throw new Error(
    "MONGODB_URI n√£o definida. Adicione ao .env.local:\n" +
    "MONGODB_URI=mongodb+srv://<user>:<password>@cluster.mongodb.net/<database>?retryWrites=true&w=majority"
  );
}

// 2. Configura√ß√µes otimizadas para produ√ß√£o
const connectionOptions: mongoose.ConnectOptions = {
  autoIndex: process.env.NODE_ENV === 'development', // Indexa√ß√£o apenas em dev
  maxPoolSize: 50, // Conex√µes m√°ximas
  minPoolSize: 5,  // Conex√µes m√≠nimas mantidas
  serverSelectionTimeoutMS: 5000, // Timeout de sele√ß√£o de servidor
  socketTimeoutMS: 45000, // Timeout de socket
  heartbeatFrequencyMS: 10000, // Intervalo de heartbeat
};

// 3. Singleton global tipado
declare global {
  var _mongooseGlobal: {
    conn: typeof mongoose | null;
    promise: Promise<typeof mongoose> | null;
  };
}

const cache = global._mongooseGlobal || { conn: null, promise: null };

async function connectToDatabase(): Promise<typeof mongoose> {
  if (cache.conn) return cache.conn;

  if (!cache.promise) {
    // 4. Event listeners para diagn√≥stico
    // Event listeners for MongoDB connection (logs removed for ESLint)
    
    mongoose.connection.on('error', (error) => 
      console.error('‚ùå Erro no MongoDB:', error));

    // 5. Conex√£o com tratamento de erro
    cache.promise = mongoose.connect(MONGODB_URI, connectionOptions)
      .then(mongoose => mongoose)
      .catch(error => {
        // Reset cache em caso de erro
        cache.promise = null;
        throw new Error(`Falha na conex√£o com MongoDB: ${error.message}`);
      });
  }

  try {
    cache.conn = await cache.promise;
  } catch (error) {
    cache.promise = null;
    throw error;
  }

  return cache.conn;
}

// 6. Manter cache apenas em dev para hot-reload
if (process.env.NODE_ENV === 'development') {
  global._mongooseGlobal = cache;
}

export default connectToDatabase;
export { connectToDatabase };


    üìÑ mongodb.ts

============================================================
FILE: src\lib\mongodb.ts
============================================================
import { MongoClient } from "mongodb";

// 1. Garante que a vari√°vel est√° definida
const uri = process.env.MONGODB_URI;
if (!uri) {
  throw new Error("‚ö†Ô∏è Defina MONGODB_URI no arquivo .env.local");
}

// 2. Op√ß√µes padr√£o (pode customizar depois)
const options = {};

// 3. Tipagem TypeScript para o global
declare global {
  // eslint-disable-next-line no-var
  var _mongoClientPromise: Promise<MongoClient> | undefined;
}

// 4. Inicializa√ß√£o inteligente
let client: MongoClient;
let clientPromise: Promise<MongoClient>;

if (process.env.NODE_ENV === "development") {
  // Em desenvolvimento, cacheia no global para evitar m√∫ltiplas conex√µes com hot-reload
  if (!global._mongoClientPromise) {
    client = new MongoClient(uri, options);
    global._mongoClientPromise = client.connect();
    // Nova conex√£o MongoDB iniciada em desenvolvimento
  } else {
    // Reutilizando conex√£o MongoDB em desenvolvimento
  }
  clientPromise = global._mongoClientPromise!;
} else {
  // Em produ√ß√£o, sempre cria nova conex√£o (sem cache global)
  client = new MongoClient(uri, options);
  clientPromise = client.connect();
}

// 5. Exporta a promise para uso em toda app
export default clientPromise;



    üìÑ price.ts

============================================================
FILE: src\lib\price.ts
============================================================
// INSANYCK STEP 6/7 ‚Äî Utilit√°rios de pre√ßo
// src/lib/price.ts

export type Locale = "pt" | "en";

/** Formata valores em centavos respeitando locale/moeda */
export function formatPrice(
  valueCents: number,
  locale: Locale = "pt",
  currency?: "BRL" | "USD"
) {
  const curr = currency ?? (locale === "en" ? "USD" : "BRL");
  const amount = (Math.max(0, valueCents || 0)) / 100;
  return new Intl.NumberFormat(locale === "en" ? "en-US" : "pt-BR", {
    style: "currency",
    currency: curr,
    maximumFractionDigits: 2,
  }).format(amount);
}

/** Converte string "R$199" ou number 199 em centavos */
export function parseToCents(input: string | number): number {
  if (typeof input === "number") return Math.round(input * 100);
  const clean = input.replace(/[^\d,\.]/g, "").replace(/\.(?=\d{3,})/g, "");
  const normalized = clean.replace(",", ".");
  const num = Number(normalized);
  if (Number.isNaN(num)) return 0;
  return Math.round(num * 100);
}



    üìÑ prisma.ts

============================================================
FILE: src\lib\prisma.ts
============================================================
// INSANYCK STEP 11 ‚Äî Prisma Client with Type-Safe Env
import { PrismaClient } from "@prisma/client";
import { env } from "./env.server";

declare global {
  // eslint-disable-next-line no-var
  var _prisma: PrismaClient | undefined;
}

export const prisma =
  global._prisma ??
  new PrismaClient({
    log: env.NODE_ENV === "development" ? ["query", "error", "warn"] : ["error"],
  });

if (env.NODE_ENV !== "production") global._prisma = prisma;

// INSANYCK STEP 8 ‚Äî ADI√á√ÉO para suportar `import prisma from "@/lib/prisma"`
export default prisma;



    üìÅ pwa/
      üìÑ useServiceWorkerUpdate.ts

============================================================
FILE: src\lib\pwa\useServiceWorkerUpdate.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Service Worker update detection hook
import { useEffect, useState } from 'react';

interface ServiceWorkerUpdateState {
  hasUpdate: boolean;
  updating: boolean;
  error: string | null;
}

export function useServiceWorkerUpdate() {
  const [state, setState] = useState<ServiceWorkerUpdateState>({
    hasUpdate: false,
    updating: false,
    error: null,
  });

  useEffect(() => {
    if (typeof window === 'undefined' || !('serviceWorker' in navigator)) {
      return;
    }

    let _registration: ServiceWorkerRegistration | null = null;

    const initServiceWorker = async () => {
      try {
        // Get existing registration or wait for it
        const reg = await navigator.serviceWorker.getRegistration();
        if (!reg) return;

        _registration = reg;

        // Check if there's already a waiting service worker
        if (reg.waiting) {
          setState(prev => ({ ...prev, hasUpdate: true }));
          return;
        }

        // Listen for updates
        const handleUpdateFound = () => {
          const newWorker = reg.installing;
          if (!newWorker) return;

          const handleStateChange = () => {
            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
              setState(prev => ({ ...prev, hasUpdate: true }));
            }
          };

          newWorker.addEventListener('statechange', handleStateChange);
        };

        reg.addEventListener('updatefound', handleUpdateFound);

        // Clean up function
        return () => {
          reg.removeEventListener('updatefound', handleUpdateFound);
        };
      } catch (error) {
        setState(prev => ({ 
          ...prev, 
          error: error instanceof Error ? error.message : 'Failed to initialize service worker' 
        }));
      }
    };

    initServiceWorker();
  }, []);

  const update = async () => {
    if (!navigator.serviceWorker || state.updating) return;

    setState(prev => ({ ...prev, updating: true, error: null }));

    try {
      const registration = await navigator.serviceWorker.getRegistration();
      
      if (registration?.waiting) {
        // Send SKIP_WAITING message to the waiting service worker
        registration.waiting.postMessage({ type: 'SKIP_WAITING' });

        // Listen for controllerchange to reload
        const handleControllerChange = () => {
          window.location.reload();
        };

        navigator.serviceWorker.addEventListener('controllerchange', handleControllerChange, { once: true });
      }
    } catch (error) {
      setState(prev => ({ 
        ...prev, 
        updating: false,
        error: error instanceof Error ? error.message : 'Failed to update service worker' 
      }));
    }
  };

  return {
    hasUpdate: state.hasUpdate,
    updating: state.updating,
    error: state.error,
    update,
  };
}


    üìÅ seo/
      üìÑ schema.ts

============================================================
FILE: src\lib\seo\schema.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Schema.org JSON-LD builders

import { truncateText, sanitizeHtml } from "@/lib/utils";

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Organization schema for site-wide use
export function createOrganizationSchema(locale: string = 'pt') {
  const baseUrl = process.env.NEXT_PUBLIC_URL || 'https://insanyck.com';
  
  return {
    "@context": "https://schema.org",
    "@type": "Organization",
    "name": "INSANYCK",
    "description": locale === 'en' 
      ? "Essential luxury in motion. Premium pieces with precise design and magnetic presence."
      : "Luxo essencial em movimento. Pe√ßas premium com design preciso e presen√ßa magn√©tica.",
    "url": `${baseUrl}/${locale === 'en' ? 'en' : 'pt'}`,
    "logo": `${baseUrl}/brand/logo.svg`,
    "foundingDate": "2024",
    "sameAs": [
      // Add social media URLs when available
    ],
    "contactPoint": {
      "@type": "ContactPoint",
      "contactType": "customer service",
      "availableLanguage": ["Portuguese", "English"]
    }
  };
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Product schema for PDP pages
export interface ProductSchemaProps {
  name: string;
  description?: string;
  sku?: string;
  image?: string;
  price?: number;
  currency?: string;
  availability?: 'InStock' | 'OutOfStock' | 'PreOrder';
  brand?: string;
  category?: string;
  slug: string;
  locale?: string;
}

export function createProductSchema({
  name,
  description,
  sku,
  image,
  price,
  currency = 'BRL',
  availability = 'InStock',
  brand = 'INSANYCK',
  category,
  slug,
  locale = 'pt'
}: ProductSchemaProps) {
  const baseUrl = process.env.NEXT_PUBLIC_URL || 'https://insanyck.com';
  const productUrl = `${baseUrl}/${locale === 'en' ? 'en' : 'pt'}/produto/${slug}`;
  
  return {
    "@context": "https://schema.org",
    "@type": "Product",
    "name": sanitizeHtml(name),
    "description": description ? sanitizeHtml(truncateText(description, 200)) : undefined,
    "sku": sku,
    "image": image ? (image.startsWith('http') ? image : `${baseUrl}${image}`) : undefined,
    "brand": {
      "@type": "Brand",
      "name": brand
    },
    "category": category,
    "url": productUrl,
    "offers": price ? {
      "@type": "Offer",
      "price": price,
      "priceCurrency": currency,
      "availability": `https://schema.org/${availability}`,
      "url": productUrl,
      "seller": {
        "@type": "Organization",
        "name": brand
      }
    } : undefined
  };
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Breadcrumb schema for navigation
export interface BreadcrumbItem {
  name: string;
  url: string;
}

export function createBreadcrumbSchema(items: BreadcrumbItem[]) {
  const baseUrl = process.env.NEXT_PUBLIC_URL || 'https://insanyck.com';
  
  return {
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    "itemListElement": items.map((item, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "name": item.name,
      "item": item.url.startsWith('http') ? item.url : `${baseUrl}${item.url}`
    }))
  };
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî FAQ schema for FAQ pages
export interface FAQItem {
  question: string;
  answer: string;
}

export function createFAQSchema(faqs: FAQItem[]) {
  return {
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": faqs.map(faq => ({
      "@type": "Question",
      "name": sanitizeHtml(faq.question),
      "acceptedAnswer": {
        "@type": "Answer",
        "text": sanitizeHtml(faq.answer)
      }
    }))
  };
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî WebSite schema with search action
export function createWebSiteSchema(locale: string = 'pt') {
  const baseUrl = process.env.NEXT_PUBLIC_URL || 'https://insanyck.com';
  
  return {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "name": "INSANYCK",
    "url": `${baseUrl}/${locale === 'en' ? 'en' : 'pt'}`,
    "potentialAction": {
      "@type": "SearchAction",
      "target": `${baseUrl}/${locale === 'en' ? 'en' : 'pt'}/buscar?q={search_term_string}`,
      "query-input": "required name=search_term_string"
    }
  };
}


    üìÑ seo.ts

============================================================
FILE: src\lib\seo.ts
============================================================
// INSANYCK SEO Core Library
// Handles meta tags, Open Graph, Twitter Cards, hreflang, and JSON-LD
import React from 'react';
import { PUBLIC_URL, getPublicBaseUrl } from './env.public';

type LinkTag = React.DetailedHTMLProps<
  React.LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement
>;

// Base configuration
export const baseTitle = 'INSANYCK';
export const baseDescription = 'Luxury fashion ‚Ä¢ Vidro leve ‚Ä¢ Borda hairline';

// Helper to get base URL with development fallback
export const getBaseUrl = (): string => {
  // No cliente, sempre a origem atual (evita URL errada atr√°s de proxy)
  if (typeof window !== 'undefined') return window.location.origin;
  // No server, usar PUBLIC_URL seguro (nunca lan√ßa)
  return PUBLIC_URL || getPublicBaseUrl();
};

// Build page title with INSANYCK suffix
export const buildTitle = (pageTitle?: string): string => {
  if (!pageTitle) return baseTitle;
  return `${pageTitle} ‚Ä¢ ${baseTitle}`;
};

// Interface for meta tags configuration
interface MetaTagsConfig {
  title: string;
  description?: string;
  canonical?: string;
  image?: string;
  locale?: string;
  type?: 'website' | 'article' | 'product';
  noIndex?: boolean;
}

// Generate complete meta tags object
export const metaTags = (config: MetaTagsConfig) => {
  const {
    title,
    description = baseDescription,
    canonical,
    image,
    locale = 'pt-BR',
    type = 'website',
    noIndex = false
  } = config;

  const baseUrl = getBaseUrl();
  const fullCanonical = canonical ? `${baseUrl}${canonical}` : baseUrl;
  const ogImage = image ? (image.startsWith('http') ? image : `${baseUrl}${image}`) : `${baseUrl}/brand/logo.svg`;

  const meta = [
    { name: 'description', content: description },
    { property: 'og:title', content: title },
    { property: 'og:description', content: description },
    { property: 'og:type', content: type },
    { property: 'og:url', content: fullCanonical },
    { property: 'og:image', content: ogImage },
    { property: 'og:locale', content: locale },
    { property: 'og:site_name', content: baseTitle },
    { name: 'twitter:card', content: 'summary_large_image' },
    { name: 'twitter:title', content: title },
    { name: 'twitter:description', content: description },
    { name: 'twitter:image', content: ogImage },
  ];

  if (noIndex) {
    meta.push({ name: 'robots', content: 'noindex, nofollow' });
  }

  const link: LinkTag[] = [
    { rel: 'canonical', href: fullCanonical },
  ];

  // Add hreflang alternates
  if (!noIndex) {
    link.push(
      { rel: 'alternate', href: fullCanonical, hrefLang: 'pt-BR' },
      { rel: 'alternate', href: fullCanonical.replace('/pt/', '/en/'), hrefLang: 'en' },
      { rel: 'alternate', href: fullCanonical, hrefLang: 'x-default' }
    );
  }

  return {
    title,
    meta,
    link
  };
};

// JSON-LD Schema generators
export const generateOrganizationSchema = () => ({
  '@context': 'https://schema.org',
  '@type': 'Organization',
  name: baseTitle,
  url: getBaseUrl(),
  logo: `${getBaseUrl()}/logo.png`,
  description: baseDescription,
  contactPoint: {
    '@type': 'ContactPoint',
    contactType: 'Customer Service',
    areaServed: 'BR',
    availableLanguage: ['Portuguese', 'English']
  }
});

export const generateWebSiteSchema = () => ({
  '@context': 'https://schema.org',
  '@type': 'WebSite',
  name: baseTitle,
  url: getBaseUrl(),
  potentialAction: {
    '@type': 'SearchAction',
    target: `${getBaseUrl()}/buscar?q={search_term_string}`,
    'query-input': 'required name=search_term_string'
  }
});

export const generateBreadcrumbSchema = (items: Array<{ name: string; url: string }>) => ({
  '@context': 'https://schema.org',
  '@type': 'BreadcrumbList',
  itemListElement: items.map((item, index) => ({
    '@type': 'ListItem',
    position: index + 1,
    name: item.name,
    item: `${getBaseUrl()}${item.url}`
  }))
});

interface ProductSchemaData {
  name: string;
  description?: string;
  image: string[];
  brand?: string;
  sku?: string;
  price: number;
  currency?: string;
  availability: 'InStock' | 'OutOfStock' | 'PreOrder';
  url: string;
}

export const generateProductSchema = (product: ProductSchemaData) => ({
  '@context': 'https://schema.org',
  '@type': 'Product',
  name: product.name,
  description: product.description || baseDescription,
  image: product.image,
  brand: {
    '@type': 'Brand',
    name: product.brand || baseTitle
  },
  sku: product.sku,
  offers: {
    '@type': 'Offer',
    priceCurrency: product.currency || 'BRL',
    price: product.price,
    availability: `https://schema.org/${product.availability}`,
    url: `${getBaseUrl()}${product.url}`
  }
});

// Page-specific SEO generators
export const seoHome = (locale: string = 'pt-BR') => {
  const title = buildTitle();
  const description = locale === 'en' 
    ? 'Luxury fashion ‚Ä¢ Light glass ‚Ä¢ Hairline border'
    : 'Moda luxury ‚Ä¢ Vidro leve ‚Ä¢ Borda hairline';

  return {
    ...metaTags({
      title,
      description,
      canonical: '/',
      locale
    }),
    jsonLd: [
      generateOrganizationSchema(),
      generateWebSiteSchema()
    ]
  };
};

interface PLPParams {
  title?: string;
  categorySlug?: string;
  categoryName?: string;
  productCount?: number;
  locale?: string;
}

export const seoPLP = (params: PLPParams = {}) => {
  const { title: pageTitle, categorySlug, categoryName, productCount, locale = 'pt-BR' } = params;
  
  let title = pageTitle || 'Loja';
  if (categoryName) {
    title = categoryName;
  }
  
  let description = baseDescription;
  if (productCount) {
    description = locale === 'en'
      ? `${productCount} luxury products ‚Ä¢ Light glass ‚Ä¢ Hairline border`
      : `${productCount} produtos luxury ‚Ä¢ Vidro leve ‚Ä¢ Borda hairline`;
  }

  const canonical = categorySlug ? `/loja?category=${categorySlug}` : '/loja';
  
  const breadcrumbItems = [
    { name: 'Home', url: '/' },
    { name: 'Loja', url: '/loja' }
  ];
  
  if (categoryName) {
    breadcrumbItems.push({ name: categoryName, url: canonical });
  }

  return {
    ...metaTags({
      title: buildTitle(title),
      description,
      canonical,
      locale
    }),
    jsonLd: [
      generateBreadcrumbSchema(breadcrumbItems)
    ]
  };
};

interface PDPProduct {
  title: string;
  description?: string;
  images: string[];
  slug: string;
  price: number;
  currency?: string;
  inStock: boolean;
  sku?: string;
  category?: string;
}

export const seoPDP = (product: PDPProduct, locale: string = 'pt-BR') => {
  const title = buildTitle(product.title);
  const description = product.description || baseDescription;
  const canonical = `/produto/${product.slug}`;
  const image = product.images[0];
  
  const breadcrumbItems = [
    { name: 'Home', url: '/' },
    { name: 'Loja', url: '/loja' }
  ];
  
  if (product.category) {
    breadcrumbItems.push({ name: product.category, url: `/loja?category=${product.category}` });
  }
  
  breadcrumbItems.push({ name: product.title, url: canonical });

  return {
    ...metaTags({
      title,
      description,
      canonical,
      image,
      locale,
      type: 'product'
    }),
    jsonLd: [
      generateBreadcrumbSchema(breadcrumbItems),
      generateProductSchema({
        name: product.title,
        description,
        image: product.images,
        sku: product.sku,
        price: product.price,
        currency: product.currency || 'BRL',
        availability: product.inStock ? 'InStock' : 'OutOfStock',
        url: canonical
      })
    ]
  };
};

export const seoCart = (locale: string = 'pt-BR') => {
  const title = locale === 'en' ? 'Shopping Cart' : 'Sacola';
  const description = locale === 'en'
    ? 'Review your luxury items ‚Ä¢ Light glass ‚Ä¢ Hairline border'
    : 'Revise seus itens luxury ‚Ä¢ Vidro leve ‚Ä¢ Borda hairline';

  return {
    ...metaTags({
      title: buildTitle(title),
      description,
      canonical: '/sacola',
      locale,
      noIndex: true
    }),
    jsonLd: []
  };
};

export const seoCheckout = (locale: string = 'pt-BR') => {
  const title = locale === 'en' ? 'Checkout' : 'Finalizar Compra';
  const description = locale === 'en'
    ? 'Secure checkout ‚Ä¢ Luxury fashion ‚Ä¢ INSANYCK'
    : 'Checkout seguro ‚Ä¢ Moda luxury ‚Ä¢ INSANYCK';

  return {
    ...metaTags({
      title: buildTitle(title),
      description,
      canonical: '/checkout',
      locale,
      noIndex: true
    }),
    jsonLd: []
  };
};

export const seoAccount = (locale: string = 'pt-BR') => {
  const title = locale === 'en' ? 'My Account' : 'Minha Conta';
  const description = locale === 'en'
    ? 'Manage your orders, addresses and personal information ‚Ä¢ INSANYCK'
    : 'Gerencie seus pedidos, endere√ßos e informa√ß√µes pessoais ‚Ä¢ INSANYCK';

  return {
    ...metaTags({
      title: buildTitle(title),
      description,
      canonical: '/conta',
      locale,
      noIndex: true
    }),
    jsonLd: []
  };
};

export const seoAccountLogin = (locale: string = 'pt-BR') => {
  const title = locale === 'en' ? 'Sign In' : 'Entrar';
  const description = locale === 'en'
    ? 'Access your INSANYCK account ‚Ä¢ Premium fashion ‚Ä¢ Secure login'
    : 'Acesse sua conta INSANYCK ‚Ä¢ Moda premium ‚Ä¢ Login seguro';

  return {
    ...metaTags({
      title: buildTitle(title),
      description,
      canonical: '/conta/login',
      locale,
      noIndex: true
    }),
    jsonLd: []
  };
};

export const seoAccountSignup = (locale: string = 'pt-BR') => {
  const title = locale === 'en' ? 'Create Account' : 'Criar Conta';
  const description = locale === 'en'
    ? 'Join INSANYCK ‚Ä¢ Premium fashion ‚Ä¢ Create your account'
    : 'Junte-se √† INSANYCK ‚Ä¢ Moda premium ‚Ä¢ Crie sua conta';

  return {
    ...metaTags({
      title: buildTitle(title),
      description,
      canonical: '/conta/cadastro',
      locale,
      noIndex: true
    }),
    jsonLd: []
  };
};

export const seoWishlist = (locale: string = 'pt-BR') => {
  const title = locale === 'en' ? 'Wishlist' : 'Favoritos';
  const description = locale === 'en'
    ? 'Your favorite pieces from the INSANYCK collection ‚Ä¢ Premium fashion'
    : 'Suas pe√ßas favoritas da cole√ß√£o INSANYCK ‚Ä¢ Moda premium';

  return {
    ...metaTags({
      title: buildTitle(title),
      description,
      canonical: '/favoritos',
      locale,
      noIndex: true
    }),
    jsonLd: []
  };
};

export const seoSearch = (locale: string = 'pt-BR', query?: string) => {
  const title = query 
    ? (locale === 'en' ? `Search results for "${query}"` : `Resultados para "${query}"`)
    : (locale === 'en' ? 'Search' : 'Buscar');
  const description = locale === 'en'
    ? 'Find the perfect INSANYCK pieces ‚Ä¢ Premium fashion search'
    : 'Encontre as pe√ßas INSANYCK perfeitas ‚Ä¢ Busca de moda premium';

  return {
    ...metaTags({
      title: buildTitle(title),
      description,
      canonical: query ? `/buscar?q=${encodeURIComponent(query)}` : '/buscar',
      locale,
      noIndex: true
    }),
    jsonLd: []
  };
};


    üìÑ shipping.ts

============================================================
FILE: src\lib\shipping.ts
============================================================
// src/lib/shipping.ts
export type ShippingQuote = {
    priceCents: number;
    etaDays: number;
    label: "standard" | "express";
  };
  
  export function simulate(cep: string): ShippingQuote {
    const clean = (cep || "").replace(/\D/g, "");
    // mock simples: CEPs terminados em par => expresso; √≠mpar => padr√£o
    const isExpress = clean && Number(clean.slice(-1)) % 2 === 0;
    return isExpress
      ? { priceCents: 2490, etaDays: 2, label: "express" }
      : { priceCents: 0, etaDays: 5, label: "standard" };
  }
  


    üìÑ stripe.ts

============================================================
FILE: src\lib\stripe.ts
============================================================
// INSANYCK STEP 11 ‚Äî Stripe Client Centralized and Type-Safe
import Stripe from "stripe";
import { env } from './env.server';

// Single Stripe instance with validated environment
export const stripe = new Stripe(env.STRIPE_SECRET_KEY, {
  apiVersion: env.STRIPE_API_VERSION as Stripe.StripeConfig['apiVersion'],
});

// Stripe initialized for development (log removed for ESLint)



    üìÑ utils.ts

============================================================
FILE: src\lib\utils.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Utility functions for className merging and other helpers

export function cn(...classes: (string | undefined | null | false)[]): string {
  return classes.filter(Boolean).join(' ');
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Text truncation for SEO meta descriptions
export function truncateText(text: string, maxLength: number): string {
  if (text.length <= maxLength) return text;
  return text.slice(0, maxLength - 3) + '...';
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Sanitize HTML for meta descriptions
export function sanitizeHtml(html: string): string {
  return html
    .replace(/<[^>]*>/g, '') // Remove HTML tags
    .replace(/&[^;]+;/g, ' ') // Remove HTML entities
    .replace(/\s+/g, ' ') // Normalize whitespace
    .trim();
}

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Generate slug from title
export function slugify(text: string): string {
  return text
    .toLowerCase()
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '') // Remove accents
    .replace(/[^a-z0-9]+/g, '-')
    .replace(/(^-|-$)/g, '');
}


    üìÑ validate.ts

============================================================
FILE: src\lib\validate.ts
============================================================
// lib/validate.ts

export function validateEmail(email: string) {
    return /\S+@\S+\.\S+/.test(email);
  }
  


  üìÑ next-env.d.ts

============================================================
FILE: src\next-env.d.ts
============================================================
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/pages/api-reference/config/typescript for more information.



  üìÅ pages/
    üìÑ 404.tsx

============================================================
FILE: src\pages\404.tsx
============================================================
// src/pages/404.tsx
import Head from "next/head";
import Link from "next/link";
import { GetStaticProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";

export default function NotFound() {
  return (
    <>
      <Head><title>{`404 ‚Äî P√°gina n√£o encontrada | INSANYCK`}</title></Head>
      <main className="pt-[120px] px-6 max-w-[900px] mx-auto text-white">
        <h1 className="text-3xl font-bold mb-3">P√°gina n√£o encontrada</h1>
        <p className="text-white/70">Volte para a <Link className="underline" href="/">home</Link>.</p>
      </main>
    </>
  );
}

export const getStaticProps: GetStaticProps = async ({ locale }) => ({
  props: { ...(await serverSideTranslations(locale ?? "pt", ["common","nav"])) },
  revalidate: 60
});


    üìÅ admin/
      üìÑ index.tsx

============================================================
FILE: src\pages\admin\index.tsx
============================================================
// INSANYCK STEP 10 ‚Äî Admin Dashboard
// src/pages/admin/index.tsx
import { GetServerSideProps } from 'next';
import { getServerSession } from 'next-auth';
import { createAuthOptions } from '@/pages/api/auth/[...nextauth]';
import AdminLayout from '@/components/AdminLayout';
import { prisma } from '@/lib/prisma';
import Link from 'next/link';
import { Package, Users, ShoppingCart, TrendingUp } from 'lucide-react';

interface DashboardStats {
  totalProducts: number;
  totalCategories: number;
  totalOrders: number;
  totalVariants: number;
}

interface AdminDashboardProps {
  stats: DashboardStats;
}

export default function AdminDashboard({ stats }: AdminDashboardProps) {
  const statCards = [
    {
      title: 'Produtos',
      value: stats.totalProducts,
      icon: Package,
      color: 'text-blue-400',
    },
    {
      title: 'Categorias',
      value: stats.totalCategories,
      icon: Users,
      color: 'text-green-400',
    },
    {
      title: 'Pedidos',
      value: stats.totalOrders,
      icon: ShoppingCart,
      color: 'text-purple-400',
    },
    {
      title: 'Variantes',
      value: stats.totalVariants,
      icon: TrendingUp,
      color: 'text-orange-400',
    },
  ];

  return (
    <AdminLayout>
      <div className="p-8">
        <div className="mb-8">
          <h1 className="text-3xl font-semibold text-white">Dashboard</h1>
          <p className="text-white/60 mt-2">Vis√£o geral do sistema INSANYCK</p>
        </div>

        {/* Stats grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {statCards.map((stat) => {
            const Icon = stat.icon;
            return (
              <div
                key={stat.title}
                className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-lg p-6 hover:bg-white/10 transition-colors"
              >
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm font-medium text-white/60">{stat.title}</p>
                    <p className="text-2xl font-semibold text-white mt-1">
                      {stat.value.toLocaleString()}
                    </p>
                  </div>
                  <Icon className={`h-8 w-8 ${stat.color}`} />
                </div>
              </div>
            );
          })}
        </div>

        {/* Quick actions */}
        <div className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-lg p-6">
          <h2 className="text-xl font-semibold text-white mb-4">A√ß√µes R√°pidas</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <a
              href="/admin/products/new"
              className="flex items-center justify-center px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white hover:bg-white/20 transition-colors"
            >
              <Package className="h-5 w-5 mr-2" />
              Novo Produto
            </a>
            <a
              href="/admin/categories"
              className="flex items-center justify-center px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white hover:bg-white/20 transition-colors"
            >
              <Users className="h-5 w-5 mr-2" />
              Gerenciar Categorias
            </a>
            <Link
              href="/admin/orders"
              className="flex items-center justify-center px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white hover:bg-white/20 transition-colors"
            >
              <ShoppingCart className="h-5 w-5 mr-2" />
              Ver Pedidos
            </Link>
          </div>
        </div>
      </div>
    </AdminLayout>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(context.req, context.res, authOptions);

  // INSANYCK STEP 10 ‚Äî Verificar se √© admin
  if (!session?.user || (session.user as any)?.role !== 'admin') {
    return {
      redirect: {
        destination: '/login',
        permanent: false,
      },
    };
  }

  try {
    const [totalProducts, totalCategories, totalOrders, totalVariants] = await Promise.all([
      prisma.product.count(),
      prisma.category.count(),
      prisma.order.count(),
      prisma.variant.count(),
    ]);

    return {
      props: {
        stats: {
          totalProducts,
          totalCategories,
          totalOrders,
          totalVariants,
        },
      },
    };
  } catch (error) {
    console.error('Error fetching admin stats:', error);
    return {
      props: {
        stats: {
          totalProducts: 0,
          totalCategories: 0,
          totalOrders: 0,
          totalVariants: 0,
        },
      },
    };
  }
};


      üìÑ orders.tsx

============================================================
FILE: src\pages\admin\orders.tsx
============================================================
// INSANYCK ETAPA 11E ‚Äî UI Admin Orders simples
"use client";

import React, { useState, useEffect, useCallback } from "react";
import Head from "next/head";
import Link from "next/link";
import { useSession } from "next-auth/react";
import { useRouter } from "next/router";
import { Search, Eye, Package } from "lucide-react";

interface OrderItem {
  slug: string;
  title: string;
  priceCents: number;
  qty: number;
  image?: string;
  variant?: string;
  variantId?: string;
  sku?: string;
}

interface Order {
  id: string;
  email: string;
  status: 'pending' | 'paid' | 'shipped' | 'delivered' | 'cancelled';
  currency: string;
  amountTotal: number;
  createdAt: string;
  stripeSessionId?: string;
  items: OrderItem[];
  user?: {
    id: string;
    name?: string;
    email: string;
  };
}

interface OrdersResponse {
  orders: Order[];
  pagination: {
    page: number;
    limit: number;
    total: number;
    totalPages: number;
    hasNext: boolean;
    hasPrev: boolean;
  };
}

const StatusBadge = ({ status }: { status: Order['status'] }) => {
  const colors = {
    pending: 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30',
    paid: 'bg-green-500/20 text-green-400 border-green-500/30',
    shipped: 'bg-blue-500/20 text-blue-400 border-blue-500/30',
    delivered: 'bg-green-600/20 text-green-300 border-green-600/30',
    cancelled: 'bg-red-500/20 text-red-400 border-red-500/30',
  };
  
  const labels = {
    pending: 'Pendente',
    paid: 'Pago',
    shipped: 'Enviado',
    delivered: 'Entregue',
    cancelled: 'Cancelado',
  };

  return (
    <span className={`px-2 py-1 rounded-lg text-xs font-medium border ${colors[status]}`}>
      {labels[status]}
    </span>
  );
};

AdminOrdersPage.getInitialProps = async () => {
  return {};
};

export default function AdminOrdersPage() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const [orders, setOrders] = useState<Order[]>([]);
  const [pagination, setPagination] = useState<OrdersResponse['pagination'] | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  
  // Filtros
  const [statusFilter, setStatusFilter] = useState('');
  const [emailFilter, setEmailFilter] = useState('');
  const [currentPage, setCurrentPage] = useState(1);

  // Verificar autentica√ß√£o admin
  useEffect(() => {
    if (status === 'loading') return;
    
    if (!session?.user) {
      router.push('/admin/login');
      return;
    }
    
    // Verificar role admin (mock check - adaptar conforme sua estrutura)
    const userRole = (session.user as any)?.role;
    if (userRole !== 'admin') {
      router.push('/');
      return;
    }
  }, [session, status, router]);

  const fetchOrders = useCallback(async () => {
    try {
      setLoading(true);
      const params = new URLSearchParams({
        page: currentPage.toString(),
        limit: '10',
      });
      
      if (statusFilter) params.append('status', statusFilter);
      if (emailFilter) params.append('email', emailFilter);
      
      const response = await fetch(`/api/admin/orders?${params}`);
      
      if (!response.ok) {
        throw new Error('Erro ao carregar pedidos');
      }
      
      const data: OrdersResponse = await response.json();
      setOrders(data.orders);
      setPagination(data.pagination);
      setError('');
      
    } catch (err) {
      setError('Erro ao carregar pedidos');
      console.error(err);
    } finally {
      setLoading(false);
    }
  }, [currentPage, statusFilter, emailFilter]);

  // Carregar orders
  useEffect(() => {
    if (!session?.user) return;
    
    fetchOrders();
  }, [session, currentPage, statusFilter, emailFilter, fetchOrders]);

  const formatCurrency = (cents: number) => {
    return (cents / 100).toLocaleString('pt-BR', {
      style: 'currency',
      currency: 'BRL',
    });
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('pt-BR', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  if (status === 'loading' || !session) {
    return <div className="min-h-screen bg-black flex items-center justify-center text-white">Carregando...</div>;
  }

  return (
    <>
      <Head>
        <title>Admin - Pedidos ‚Äî INSANYCK</title>
        <meta name="robots" content="noindex,nofollow" />
      </Head>

      <main className="min-h-screen bg-black text-white pt-[120px] pb-20">
        <div className="mx-auto max-w-[1400px] px-6">
          {/* Header */}
          <div className="flex items-center justify-between mb-8">
            <h1 className="text-3xl font-semibold">Pedidos</h1>
            <Link
              href="/admin"
              className="px-4 py-2 rounded-xl border border-white/20 hover:bg-white/10 transition"
            >
              ‚Üê Admin
            </Link>
          </div>

          {/* Filtros */}
          <div className="mb-6 flex flex-wrap gap-4">
            <div className="flex items-center gap-2">
              <Search className="w-4 h-4 text-white/60" />
              <input
                type="text"
                placeholder="Buscar por email..."
                value={emailFilter}
                onChange={(e) => setEmailFilter(e.target.value)}
                className="px-3 py-2 rounded-xl bg-black/40 border border-white/20 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-white/30"
              />
            </div>
            <select
              value={statusFilter}
              onChange={(e) => setStatusFilter(e.target.value)}
              className="px-3 py-2 rounded-xl bg-black/40 border border-white/20 text-white focus:outline-none focus:ring-2 focus:ring-white/30"
            >
              <option value="">Todos os status</option>
              <option value="pending">Pendente</option>
              <option value="paid">Pago</option>
              <option value="shipped">Enviado</option>
              <option value="delivered">Entregue</option>
              <option value="cancelled">Cancelado</option>
            </select>
          </div>

          {/* Lista de Orders */}
          {loading ? (
            <div className="text-center py-12">
              <div className="animate-spin w-8 h-8 border-2 border-white/20 border-t-white rounded-full mx-auto"></div>
            </div>
          ) : error ? (
            <div className="text-center py-12 text-red-400">{error}</div>
          ) : orders.length === 0 ? (
            <div className="text-center py-12 text-white/60">Nenhum pedido encontrado</div>
          ) : (
            <>
              <div className="space-y-4">
                {orders.map((order) => (
                  <div
                    key={order.id}
                    className="rounded-2xl border border-white/12 bg-black/40 backdrop-blur-md p-6"
                  >
                    <div className="flex items-start justify-between mb-4">
                      <div>
                        <div className="flex items-center gap-3 mb-2">
                          <h3 className="font-semibold text-lg">#{order.id.slice(0, 8)}</h3>
                          <StatusBadge status={order.status} />
                        </div>
                        <div className="text-white/70 text-sm space-y-1">
                          <div>Email: {order.email}</div>
                          <div>Data: {formatDate(order.createdAt)}</div>
                          {order.stripeSessionId && (
                            <div className="font-mono text-xs">Stripe: {order.stripeSessionId.slice(0, 20)}...</div>
                          )}
                        </div>
                      </div>
                      <div className="text-right">
                        <div className="text-2xl font-bold text-white">
                          {formatCurrency(order.amountTotal)}
                        </div>
                        <div className="text-white/60 text-sm">
                          {order.items.reduce((acc, item) => acc + item.qty, 0)} {order.items.length === 1 ? 'item' : 'itens'}
                        </div>
                      </div>
                    </div>

                    {/* Items preview */}
                    <div className="border-t border-white/10 pt-4 mb-4">
                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
                        {order.items.slice(0, 3).map((item, idx) => (
                          <div key={idx} className="flex items-center gap-3 p-3 rounded-xl bg-white/5">
                            <div className="w-12 h-12 rounded-lg bg-white/10 flex items-center justify-center">
                              <Package className="w-6 h-6 text-white/60" />
                            </div>
                            <div className="flex-1 min-w-0">
                              <div className="text-sm font-medium truncate">{item.title}</div>
                              <div className="text-xs text-white/60">
                                {item.qty}x {formatCurrency(item.priceCents)}
                              </div>
                            </div>
                          </div>
                        ))}
                        {order.items.length > 3 && (
                          <div className="flex items-center justify-center text-white/60 text-sm">
                            +{order.items.length - 3} mais
                          </div>
                        )}
                      </div>
                    </div>

                    {/* Actions */}
                    <div className="flex gap-2">
                      <Link
                        href={`/admin/orders/${order.id}`}
                        className="flex items-center gap-2 px-3 py-2 rounded-xl border border-white/20 hover:bg-white/10 transition text-sm"
                      >
                        <Eye className="w-4 h-4" />
                        Ver detalhes
                      </Link>
                    </div>
                  </div>
                ))}
              </div>

              {/* Pagina√ß√£o */}
              {pagination && pagination.totalPages > 1 && (
                <div className="flex items-center justify-center gap-4 mt-8">
                  <button
                    disabled={!pagination.hasPrev}
                    onClick={() => setCurrentPage(currentPage - 1)}
                    className="px-4 py-2 rounded-xl border border-white/20 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-white/10 transition"
                  >
                    Anterior
                  </button>
                  <span className="text-white/70">
                    P√°gina {pagination.page} de {pagination.totalPages}
                  </span>
                  <button
                    disabled={!pagination.hasNext}
                    onClick={() => setCurrentPage(currentPage + 1)}
                    className="px-4 py-2 rounded-xl border border-white/20 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-white/10 transition"
                  >
                    Pr√≥xima
                  </button>
                </div>
              )}
            </>
          )}
        </div>
      </main>
    </>
  );
}


      üìÅ products/
        üìÑ index.tsx

============================================================
FILE: src\pages\admin\products\index.tsx
============================================================
// INSANYCK STEP 10 ‚Äî Admin Products List
// src/pages/admin/products/index.tsx
import { useState, useEffect, useCallback } from 'react';
import { GetServerSideProps } from 'next';
import { getServerSession } from 'next-auth';
import { createAuthOptions } from '@/pages/api/auth/[...nextauth]';
import AdminLayout from '@/components/AdminLayout';
import Link from 'next/link';
import { Search, Plus, Edit, Trash2, Eye } from 'lucide-react';

interface Product {
  id: string;
  title: string;
  slug: string;
  status: string;
  isFeatured: boolean;
  category?: {
    name: string;
  };
  _count: {
    variants: number;
  };
  createdAt: string;
  updatedAt: string;
}

interface ProductsResponse {
  products: Product[];
  pagination: {
    page: number;
    limit: number;
    total: number;
    totalPages: number;
    hasNext: boolean;
    hasPrev: boolean;
  };
}

export default function AdminProducts() {
  const [products, setProducts] = useState<Product[]>([]);
  const [pagination, setPagination] = useState<ProductsResponse['pagination'] | null>(null);
  const [loading, setLoading] = useState(true);
  const [search, setSearch] = useState('');
  const [currentPage, setCurrentPage] = useState(1);

  const fetchProducts = useCallback(async () => {
    setLoading(true);
    try {
      const params = new URLSearchParams({
        page: currentPage.toString(),
        limit: '10',
      });

      if (search.trim()) {
        params.append('search', search.trim());
      }

      const response = await fetch(`/api/admin/products?${params}`);
      if (response.ok) {
        const data: ProductsResponse = await response.json();
        setProducts(data.products);
        setPagination(data.pagination);
      }
    } catch (error) {
      console.error('Error fetching products:', error);
    } finally {
      setLoading(false);
    }
  }, [currentPage, search]);

  useEffect(() => {
    fetchProducts();
  }, [currentPage, search, fetchProducts]);

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    setCurrentPage(1);
    fetchProducts();
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('pt-BR');
  };

  const getStatusBadge = (status: string) => {
    const colors = {
      active: 'bg-green-500/20 text-green-400 border-green-500/30',
      draft: 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30',
      archived: 'bg-gray-500/20 text-gray-400 border-gray-500/30',
    };

    return (
      <span className={`px-2 py-1 text-xs rounded-full border ${colors[status as keyof typeof colors] || colors.draft}`}>
        {status}
      </span>
    );
  };

  return (
    <AdminLayout>
      <div className="p-8">
        {/* Header */}
        <div className="flex items-center justify-between mb-8">
          <div>
            <h1 className="text-3xl font-semibold text-white">Produtos</h1>
            <p className="text-white/60 mt-2">Gerencie o cat√°logo de produtos</p>
          </div>
          <Link
            href="/admin/products/new"
            className="flex items-center px-4 py-2 bg-white text-black rounded-lg hover:bg-white/90 transition-colors font-medium"
          >
            <Plus className="h-4 w-4 mr-2" />
            Novo Produto
          </Link>
        </div>

        {/* Search */}
        <div className="mb-6">
          <form onSubmit={handleSearch} className="flex gap-3">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-white/40" />
              <input
                type="text"
                placeholder="Buscar produtos..."
                value={search}
                onChange={(e) => setSearch(e.target.value)}
                className="w-full pl-10 pr-4 py-3 bg-white/5 border border-white/10 rounded-lg text-white placeholder-white/40 focus:outline-none focus:border-white/30"
              />
            </div>
            <button
              type="submit"
              className="px-6 py-3 bg-white/10 border border-white/20 rounded-lg text-white hover:bg-white/20 transition-colors"
            >
              Buscar
            </button>
          </form>
        </div>

        {/* Products table */}
        <div className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-lg overflow-hidden">
          {loading ? (
            <div className="p-8 text-center">
              <div className="animate-spin h-8 w-8 border-2 border-white/20 border-t-white rounded-full mx-auto"></div>
              <p className="text-white/60 mt-2">Carregando produtos...</p>
            </div>
          ) : (
            <>
              <div className="overflow-x-auto">
                <table className="w-full">
                  <thead className="bg-white/5 border-b border-white/10">
                    <tr>
                      <th className="px-6 py-4 text-left text-sm font-medium text-white/80">Produto</th>
                      <th className="px-6 py-4 text-left text-sm font-medium text-white/80">Status</th>
                      <th className="px-6 py-4 text-left text-sm font-medium text-white/80">Categoria</th>
                      <th className="px-6 py-4 text-left text-sm font-medium text-white/80">Variantes</th>
                      <th className="px-6 py-4 text-left text-sm font-medium text-white/80">Atualizado</th>
                      <th className="px-6 py-4 text-right text-sm font-medium text-white/80">A√ß√µes</th>
                    </tr>
                  </thead>
                  <tbody className="divide-y divide-white/10">
                    {products.map((product) => (
                      <tr key={product.id} className="hover:bg-white/5">
                        <td className="px-6 py-4">
                          <div>
                            <p className="text-white font-medium">{product.title}</p>
                            <p className="text-white/60 text-sm">/{product.slug}</p>
                            {product.isFeatured && (
                              <span className="inline-block mt-1 px-2 py-0.5 bg-blue-500/20 text-blue-400 text-xs rounded">
                                Destaque
                              </span>
                            )}
                          </div>
                        </td>
                        <td className="px-6 py-4">
                          {getStatusBadge(product.status)}
                        </td>
                        <td className="px-6 py-4 text-white/80">
                          {product.category?.name || '‚Äî'}
                        </td>
                        <td className="px-6 py-4 text-white/80">
                          {product._count.variants}
                        </td>
                        <td className="px-6 py-4 text-white/80">
                          {formatDate(product.updatedAt)}
                        </td>
                        <td className="px-6 py-4">
                          <div className="flex items-center justify-end gap-2">
                            <Link
                              href={`/produto/${product.slug}`}
                              target="_blank"
                              className="p-2 text-white/60 hover:text-white hover:bg-white/10 rounded-lg transition-colors"
                              title="Ver produto"
                            >
                              <Eye className="h-4 w-4" />
                            </Link>
                            <Link
                              href={`/admin/products/${product.id}`}
                              className="p-2 text-white/60 hover:text-white hover:bg-white/10 rounded-lg transition-colors"
                              title="Editar produto"
                            >
                              <Edit className="h-4 w-4" />
                            </Link>
                            <button
                              className="p-2 text-red-400 hover:text-red-300 hover:bg-red-500/10 rounded-lg transition-colors"
                              title="Deletar produto"
                            >
                              <Trash2 className="h-4 w-4" />
                            </button>
                          </div>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>

              {/* Pagination */}
              {pagination && pagination.totalPages > 1 && (
                <div className="px-6 py-4 border-t border-white/10 flex items-center justify-between">
                  <div className="text-sm text-white/60">
                    Mostrando {products.length} de {pagination.total} produtos
                  </div>
                  <div className="flex gap-2">
                    <button
                      onClick={() => setCurrentPage(currentPage - 1)}
                      disabled={!pagination.hasPrev}
                      className="px-3 py-1 bg-white/10 border border-white/20 rounded text-white disabled:opacity-50 hover:bg-white/20 transition-colors"
                    >
                      Anterior
                    </button>
                    <span className="px-3 py-1 text-white/80">
                      {currentPage} de {pagination.totalPages}
                    </span>
                    <button
                      onClick={() => setCurrentPage(currentPage + 1)}
                      disabled={!pagination.hasNext}
                      className="px-3 py-1 bg-white/10 border border-white/20 rounded text-white disabled:opacity-50 hover:bg-white/20 transition-colors"
                    >
                      Pr√≥ximo
                    </button>
                  </div>
                </div>
              )}
            </>
          )}
        </div>
      </div>
    </AdminLayout>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(context.req, context.res, authOptions);

  // INSANYCK STEP 10 ‚Äî Verificar se √© admin
  if (!session?.user || (session.user as any)?.role !== 'admin') {
    return {
      redirect: {
        destination: '/login',
        permanent: false,
      },
    };
  }

  return { props: {} };
};


    üìÅ api/
      üìÅ account/
        üìÅ addresses/
          üìÑ index.ts

============================================================
FILE: src\pages\api\account\addresses\index.ts
============================================================
// INSANYCK STEP 8
import type { NextApiRequest, NextApiResponse } from "next";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../../auth/[...nextauth]";
import { prisma } from "@/lib/prisma";

type AddressPayload = {
  name: string;
  phone: string;
  cep: string;
  street: string;
  number: string;
  complement?: string;
  district: string;
  city: string;
  state: string;
  country: string;
  isDefault?: boolean;
};

export default async function handler(req: NextApiRequest, res: NextApiResponse): Promise<void> {
  // PWA/Workbox: esta rota deve ser NetworkOnly (sem cache)
  const authOptions = await createAuthOptions();
  const session = await getServerSession(req, res, authOptions);
  if (!session?.user?.id) {
    res.status(401).json({ error: "Unauthorized" });
    return;
  }

  const userId = (session.user as any).id as string;

  try {
    if (req.method === "GET") {
      const addresses = await prisma.address.findMany({ where: { userId }, orderBy: { createdAt: "desc" } });
      res.status(200).json({ addresses });
      return;
    }

    if (req.method === "POST") {
      const body: AddressPayload = req.body;
      if (!body?.name || !body?.cep || !body?.street || !body?.number) {
        res.status(400).json({ error: "Invalid payload" });
        return;
      }
      if (body.isDefault) {
        await prisma.address.updateMany({ where: { userId }, data: { isDefault: false } });
      }
      const created = await prisma.address.create({
        data: { ...body, isDefault: !!body.isDefault, userId },
      });
      res.status(201).json({ address: created });
      return;
    }

    res.status(405).json({ error: "Method Not Allowed" });
    return;
  } catch (err: any) {
    res.status(500).json({ error: err?.message ?? "Server error" });
    return;
  }
}



          üìÑ [id].ts

============================================================
FILE: src\pages\api\account\addresses\[id].ts
============================================================
// INSANYCK STEP 8
import type { NextApiRequest, NextApiResponse } from "next";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../../auth/[...nextauth]";
import { prisma } from "@/lib/prisma";

export default async function handler(req: NextApiRequest, res: NextApiResponse): Promise<void> {
  // PWA/Workbox: NetworkOnly
  const authOptions = await createAuthOptions();
  const session = await getServerSession(req, res, authOptions);
  if (!session?.user?.id) {
    res.status(401).json({ error: "Unauthorized" });
    return;
  }

  const userId = (session.user as any).id as string;
  const id = req.query.id as string;

  try {
    if (req.method === "PUT") {
      const body = req.body ?? {};
      if (body.isDefault) {
        await prisma.address.updateMany({ where: { userId }, data: { isDefault: false } });
      }
      const updated = await prisma.address.update({
        where: { id },
        data: { ...body, isDefault: !!body.isDefault },
      });
      if (updated.userId !== userId) {
        res.status(403).json({ error: "Forbidden" });
        return;
      }
      res.status(200).json({ address: updated });
      return;
    }

    if (req.method === "DELETE") {
      const found = await prisma.address.findUnique({ where: { id } });
      if (!found || found.userId !== userId) {
        res.status(404).json({ error: "Not Found" });
        return;
      }
      await prisma.address.delete({ where: { id } });
      res.status(204).end();
      return;
    }

    res.status(405).json({ error: "Method Not Allowed" });
    return;
  } catch (err: any) {
    res.status(500).json({ error: err?.message ?? "Server error" });
    return;
  }
}



        üìÑ me.ts

============================================================
FILE: src\pages\api\account\me.ts
============================================================
// INSANYCK STEP 8
import type { NextApiRequest, NextApiResponse } from "next";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../auth/[...nextauth]";

type MeResponse =
  | { user: { id: string; name: string | null; email: string | null; image?: string | null } }
  | { error: string };

export default async function handler(req: NextApiRequest, res: NextApiResponse<MeResponse>) {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(req, res, authOptions);
  if (!session?.user?.id) {
    return res.status(401).json({ error: "Unauthorized" });
  }
  const { id, name, email, image } = session.user as any;
  return res.status(200).json({ user: { id, name: name ?? null, email: email ?? null, image: image ?? null } });
}



        üìÑ orders.ts

============================================================
FILE: src\pages\api\account\orders.ts
============================================================
// INSANYCK STEP 8
import type { NextApiRequest, NextApiResponse } from "next";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../auth/[...nextauth]";
import { prisma } from "@/lib/prisma";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // PWA/Workbox: NetworkOnly
  const authOptions = await createAuthOptions();
  const session = await getServerSession(req, res, authOptions);
  if (!session?.user?.id) return res.status(401).json({ error: "Unauthorized" });

  const userId = (session.user as any).id as string;

  try {
    if (req.method === "GET") {
      const orders = await prisma.order.findMany({
        where: { userId },
        orderBy: { createdAt: "desc" },
        include: { items: true },
      });
      return res.status(200).json({ orders });
    }
    return res.status(405).json({ error: "Method Not Allowed" });
  } catch (err: any) {
    return res.status(500).json({ error: err?.message ?? "Server error" });
  }
}



        üìÅ wishlist/
          üìÑ index.ts

============================================================
FILE: src\pages\api\account\wishlist\index.ts
============================================================
// INSANYCK STEP 8
import type { NextApiRequest, NextApiResponse } from "next";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../../auth/[...nextauth]";
import { prisma } from "@/lib/prisma";

type WishlistPayload = {
  slug: string;
  title: string;
  priceCents: number;
  image?: string;
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // PWA/Workbox: NetworkOnly
  const authOptions = await createAuthOptions();
  const session = await getServerSession(req, res, authOptions);
  if (!session?.user?.id) return res.status(401).json({ error: "Unauthorized" });

  const userId = (session.user as any).id as string;

  try {
    if (req.method === "GET") {
      const items = await prisma.wishlistItem.findMany({ where: { userId }, orderBy: { createdAt: "desc" } });
      return res.status(200).json({ items });
    }

    if (req.method === "POST") {
      const body: WishlistPayload = req.body;
      if (!body?.slug || !body?.title) return res.status(400).json({ error: "Invalid payload" });

      // Evitar duplicados: se j√° existe slug igual para o user, s√≥ retorna
      const exists = await prisma.wishlistItem.findFirst({ where: { userId, slug: body.slug } });
      if (exists) return res.status(200).json({ item: exists });

      const created = await prisma.wishlistItem.create({
        data: { ...body, userId },
      });
      return res.status(201).json({ item: created });
    }

    return res.status(405).json({ error: "Method Not Allowed" });
  } catch (err: any) {
    return res.status(500).json({ error: err?.message ?? "Server error" });
  }
}



          üìÑ [id].ts

============================================================
FILE: src\pages\api\account\wishlist\[id].ts
============================================================
// INSANYCK STEP 8
import type { NextApiRequest, NextApiResponse } from "next";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../../auth/[...nextauth]";
import { prisma } from "@/lib/prisma";

export default async function handler(req: NextApiRequest, res: NextApiResponse): Promise<void> {
  // PWA/Workbox: NetworkOnly
  const authOptions = await createAuthOptions();
  const session = await getServerSession(req, res, authOptions);
  if (!session?.user?.id) {
    res.status(401).json({ error: "Unauthorized" });
    return;
  }

  const userId = (session.user as any).id as string;
  const id = req.query.id as string;

  try {
    if (req.method === "DELETE") {
      const found = await prisma.wishlistItem.findUnique({ where: { id } });
      if (!found || found.userId !== userId) {
        res.status(404).json({ error: "Not Found" });
        return;
      }
      await prisma.wishlistItem.delete({ where: { id } });
      res.status(204).end();
      return;
    }
    res.status(405).json({ error: "Method Not Allowed" });
    return;
  } catch (err: any) {
    res.status(500).json({ error: err?.message ?? "Server error" });
    return;
  }
}



      üìÅ admin/
        üìÅ categories/
          üìÑ index.ts

============================================================
FILE: src\pages\api\admin\categories\index.ts
============================================================
// INSANYCK STEP 10 ‚Äî Admin Categories API
// src/pages/api/admin/categories/index.ts
import { NextApiRequest, NextApiResponse } from 'next';
import { prisma } from '@/lib/prisma';
import { withAdminAuth } from '@/lib/adminAuth';
import { z } from 'zod';

const createCategorySchema = z.object({
  name: z.string().min(1),
  slug: z.string().min(1),
  description: z.string().optional(),
  parentId: z.string().optional(),
});

async function handler(req: NextApiRequest, res: NextApiResponse, session: any) {
  switch (req.method) {
    case 'GET':
      return getCategories(req, res);
    case 'POST':
      return createCategory(req, res, session);
    default:
      res.setHeader('Allow', ['GET', 'POST']);
      return res.status(405).json({ error: 'Method not allowed' });
  }
}

async function getCategories(req: NextApiRequest, res: NextApiResponse) {
  const { flat = 'false' } = req.query;

  try {
    if (flat === 'true') {
      // Lista plana para selects
      const categories = await prisma.category.findMany({
        include: {
          _count: {
            select: { products: true },
          },
        },
        orderBy: { name: 'asc' },
      });

      return res.status(200).json({ categories });
    } else {
      // Estrutura hier√°rquica
      const rootCategories = await prisma.category.findMany({
        where: { parentId: null },
        include: {
          children: {
            include: {
              children: true,
              _count: {
                select: { products: true },
              },
            },
          },
          _count: {
            select: { products: true },
          },
        },
        orderBy: { name: 'asc' },
      });

      return res.status(200).json({ categories: rootCategories });
    }
  } catch (error) {
    console.error('Error fetching categories:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

async function createCategory(req: NextApiRequest, res: NextApiResponse, _session: any) {
  try {
    const data = createCategorySchema.parse(req.body);

    // Verificar se slug j√° existe
    const existing = await prisma.category.findUnique({
      where: { slug: data.slug },
    });

    if (existing) {
      return res.status(400).json({ error: 'Slug already exists' });
    }

    // Se parentId fornecido, verificar se existe
    if (data.parentId) {
      const parent = await prisma.category.findUnique({
        where: { id: data.parentId },
      });

      if (!parent) {
        return res.status(400).json({ error: 'Parent category not found' });
      }
    }

    const category = await prisma.category.create({
      data,
      include: {
        parent: true,
        _count: {
          select: { products: true, children: true },
        },
      },
    });

    // Admin created category (log removed for ESLint)

    return res.status(201).json({ category });
  } catch (error) {
    if (error instanceof z.ZodError) {
      return res.status(400).json({ error: 'Validation error', details: error.issues });
    }
    console.error('Error creating category:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

export default withAdminAuth(handler);


        üìÅ options/
          üìÑ index.ts

============================================================
FILE: src\pages\api\admin\options\index.ts
============================================================
// INSANYCK STEP 10 ‚Äî Admin Options API
// src/pages/api/admin/options/index.ts
import { NextApiRequest, NextApiResponse } from 'next';
import { prisma } from '@/lib/prisma';
import { withAdminAuth } from '@/lib/adminAuth';

async function handler(req: NextApiRequest, res: NextApiResponse, _session: any) {
  switch (req.method) {
    case 'GET':
      return getOptions(req, res);
    default:
      res.setHeader('Allow', ['GET']);
      return res.status(405).json({ error: 'Method not allowed' });
  }
}

async function getOptions(req: NextApiRequest, res: NextApiResponse) {
  try {
    const options = await prisma.option.findMany({
      include: {
        values: {
          orderBy: { order: 'asc' },
        },
      },
      orderBy: { name: 'asc' },
    });

    return res.status(200).json({ options });
  } catch (error) {
    console.error('Error fetching options:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

export default withAdminAuth(handler);


        üìÅ orders/
          üìÑ [id].ts

============================================================
FILE: src\pages\api\admin\orders\[id].ts
============================================================
// INSANYCK ETAPA 11E ‚Äî API Admin Order Detail
import { NextApiRequest, NextApiResponse } from 'next';
import { z } from 'zod';
import { withAdminAuth } from '@/lib/adminAuth';
import { prisma } from '@/lib/prisma';

const OrderUpdateSchema = z.object({
  status: z.enum(['pending', 'paid', 'shipped', 'delivered', 'cancelled']).optional(),
  trackingCode: z.string().optional(),
});

async function handler(req: NextApiRequest, res: NextApiResponse, _session: any) {
  const { id } = req.query;
  
  if (!id || typeof id !== 'string') {
    return res.status(400).json({ error: 'ID do pedido inv√°lido' });
  }

  try {
    if (req.method === 'GET') {
      // Buscar detalhes completos do pedido
      const order = await prisma.order.findUnique({
        where: { id },
        include: {
          items: true,
          user: {
            select: {
              id: true,
              name: true,
              email: true,
              // phone: true,
            }
          }
        }
      });

      if (!order) {
        return res.status(404).json({ error: 'Pedido n√£o encontrado' });
      }

      res.status(200).json({ order });

    } else if (req.method === 'PATCH') {
      // Atualizar status do pedido
      const updateData = OrderUpdateSchema.parse(req.body);

      const order = await prisma.order.update({
        where: { id },
        data: updateData,
        include: {
          items: true,
          user: {
            select: {
              id: true,
              name: true,
              email: true,
            }
          }
        }
      });

      res.status(200).json({ order });

    } else {
      res.status(405).json({ error: 'M√©todo n√£o permitido' });
    }

  } catch (error) {
    if (error instanceof z.ZodError) {
      return res.status(400).json({ 
        error: 'Dados inv√°lidos', 
        details: error.issues 
      });
    }

    console.error('Admin order detail error:', error);
    res.status(500).json({ error: 'Erro interno do servidor' });
  }
}

export default withAdminAuth(handler);


        üìÑ orders.ts

============================================================
FILE: src\pages\api\admin\orders.ts
============================================================
// INSANYCK ETAPA 11E ‚Äî API Admin Orders com pagina√ß√£o e filtros
import { NextApiRequest, NextApiResponse } from 'next';
import { z } from 'zod';
import { withAdminAuth } from '@/lib/adminAuth';
import { prisma } from '@/lib/prisma';

// Schema para query parameters
const OrdersQuerySchema = z.object({
  page: z.string().optional().default('1'),
  limit: z.string().optional().default('10'),
  status: z.enum(['pending', 'paid', 'shipped', 'delivered', 'cancelled']).optional(),
  email: z.string().optional(),
  sortBy: z.enum(['createdAt', 'amountTotal', 'email']).optional().default('createdAt'),
  sortOrder: z.enum(['asc', 'desc']).optional().default('desc'),
});

async function handler(req: NextApiRequest, res: NextApiResponse, _session: any) {
  if (req.method !== 'GET') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    // Validar e parse query parameters
    const {
      page,
      limit,
      status,
      email,
      sortBy,
      sortOrder
    } = OrdersQuerySchema.parse(req.query);

    const pageNum = parseInt(page, 10);
    const limitNum = parseInt(limit, 10);
    const skip = (pageNum - 1) * limitNum;

    // Construir filtros where
    const where: any = {};
    if (status) {
      where.status = status;
    }
    if (email) {
      where.email = {
        contains: email,
        mode: 'insensitive'
      };
    }

    // Ordena√ß√£o
    const orderBy: any = {};
    orderBy[sortBy] = sortOrder;

    // Buscar orders com pagina√ß√£o
    const [orders, total] = await Promise.all([
      prisma.order.findMany({
        where,
        orderBy,
        skip,
        take: limitNum,
        include: {
          items: {
            select: {
              slug: true,
              title: true,
              priceCents: true,
              qty: true,
              image: true,
              variant: true,
              variantId: true,
              sku: true,
            }
          },
          user: {
            select: {
              id: true,
              name: true,
              email: true,
            }
          }
        }
      }),
      prisma.order.count({ where })
    ]);

    const totalPages = Math.ceil(total / limitNum);

    res.status(200).json({
      orders,
      pagination: {
        page: pageNum,
        limit: limitNum,
        total,
        totalPages,
        hasNext: pageNum < totalPages,
        hasPrev: pageNum > 1,
      }
    });

  } catch (error) {
    if (error instanceof z.ZodError) {
      return res.status(400).json({ 
        error: 'Par√¢metros inv√°lidos', 
        details: error.issues 
      });
    }

    console.error('Admin orders error:', error);
    res.status(500).json({ error: 'Erro interno do servidor' });
  }
}

export default withAdminAuth(handler);


        üìÅ products/
          üìÑ index.ts

============================================================
FILE: src\pages\api\admin\products\index.ts
============================================================
// INSANYCK STEP 10 ‚Äî Admin Products API
// src/pages/api/admin/products/index.ts
import { NextApiRequest, NextApiResponse } from 'next';
import { prisma } from '@/lib/prisma';
import { withAdminAuth } from '@/lib/adminAuth';
import { z } from 'zod';

const createProductSchema = z.object({
  title: z.string().min(1),
  slug: z.string().min(1),
  description: z.string().optional(),
  categoryId: z.string().optional(),
  status: z.enum(['draft', 'active', 'archived']).default('draft'),
  isFeatured: z.boolean().default(false),
  seoTitle: z.string().optional(),
  seoDescription: z.string().optional(),
});

async function handler(req: NextApiRequest, res: NextApiResponse, session: any) {
  switch (req.method) {
    case 'GET':
      return getProducts(req, res);
    case 'POST':
      return createProduct(req, res, session);
    default:
      res.setHeader('Allow', ['GET', 'POST']);
      return res.status(405).json({ error: 'Method not allowed' });
  }
}

async function getProducts(req: NextApiRequest, res: NextApiResponse) {
  const {
    page = '1',
    limit = '10',
    search,
    category,
    status = 'all',
  } = req.query;

  const pageNum = parseInt(page as string);
  const limitNum = parseInt(limit as string);
  const skip = (pageNum - 1) * limitNum;

  const where: any = {};

  if (search) {
    where.OR = [
      { title: { contains: search as string, mode: 'insensitive' } },
      { slug: { contains: search as string, mode: 'insensitive' } },
    ];
  }

  if (category) {
    where.categoryId = category as string;
  }

  if (status !== 'all') {
    where.status = status as string;
  }

  try {
    const [products, total] = await Promise.all([
      prisma.product.findMany({
        where,
        include: {
          category: true,
          images: { orderBy: { order: 'asc' } },
          variants: {
            include: {
              price: true,
              inventory: true,
            },
          },
          _count: {
            select: { variants: true },
          },
        },
        orderBy: { updatedAt: 'desc' },
        skip,
        take: limitNum,
      }),
      prisma.product.count({ where }),
    ]);

    const totalPages = Math.ceil(total / limitNum);

    return res.status(200).json({
      products,
      pagination: {
        page: pageNum,
        limit: limitNum,
        total,
        totalPages,
        hasNext: pageNum < totalPages,
        hasPrev: pageNum > 1,
      },
    });
  } catch (error) {
    console.error('Error fetching products:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

async function createProduct(req: NextApiRequest, res: NextApiResponse, _session: any) {
  try {
    const data = createProductSchema.parse(req.body);

    // Verificar se slug j√° existe
    const existing = await prisma.product.findUnique({
      where: { slug: data.slug },
    });

    if (existing) {
      return res.status(400).json({ error: 'Slug already exists' });
    }

    const product = await prisma.product.create({
      data,
      include: {
        category: true,
        images: { orderBy: { order: 'asc' } },
        variants: {
          include: {
            price: true,
            inventory: true,
          },
        },
      },
    });

    // Admin created product (log removed for ESLint)

    return res.status(201).json({ product });
  } catch (error) {
    if (error instanceof z.ZodError) {
      return res.status(400).json({ error: 'Validation error', details: error.issues });
    }
    console.error('Error creating product:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

export default withAdminAuth(handler);


          üìÑ [id].ts

============================================================
FILE: src\pages\api\admin\products\[id].ts
============================================================
// INSANYCK STEP 10 ‚Äî Admin Product Detail API
// src/pages/api/admin/products/[id].ts
import { NextApiRequest, NextApiResponse } from 'next';
import { prisma } from '@/lib/prisma';
import { withAdminAuth } from '@/lib/adminAuth';
import { z } from 'zod';

const updateProductSchema = z.object({
  title: z.string().min(1).optional(),
  slug: z.string().min(1).optional(),
  description: z.string().optional(),
  categoryId: z.string().optional(),
  status: z.enum(['draft', 'active', 'archived']).optional(),
  isFeatured: z.boolean().optional(),
  seoTitle: z.string().optional(),
  seoDescription: z.string().optional(),
});

async function handler(req: NextApiRequest, res: NextApiResponse, session: any) {
  const { id } = req.query;

  if (!id || typeof id !== 'string') {
    return res.status(400).json({ error: 'Product ID is required' });
  }

  switch (req.method) {
    case 'GET':
      return getProduct(req, res, id);
    case 'PUT':
      return updateProduct(req, res, id, session);
    case 'DELETE':
      return deleteProduct(req, res, id, session);
    default:
      res.setHeader('Allow', ['GET', 'PUT', 'DELETE']);
      return res.status(405).json({ error: 'Method not allowed' });
  }
}

async function getProduct(req: NextApiRequest, res: NextApiResponse, id: string) {
  try {
    const product = await prisma.product.findUnique({
      where: { id },
      include: {
        category: true,
        images: { orderBy: { order: 'asc' } },
        variants: {
          include: {
            price: true,
            inventory: true,
            options: {
              include: {
                optionValue: {
                  include: {
                    option: true,
                  },
                },
              },
            },
          },
        },
      },
    });

    if (!product) {
      return res.status(404).json({ error: 'Product not found' });
    }

    return res.status(200).json({ product });
  } catch (error) {
    console.error('Error fetching product:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

async function updateProduct(req: NextApiRequest, res: NextApiResponse, id: string, _session: any) {
  try {
    const data = updateProductSchema.parse(req.body);

    // Se slug est√° sendo alterado, verificar duplicatas
    if (data.slug) {
      const existing = await prisma.product.findFirst({
        where: {
          slug: data.slug,
          NOT: { id },
        },
      });

      if (existing) {
        return res.status(400).json({ error: 'Slug already exists' });
      }
    }

    const product = await prisma.product.update({
      where: { id },
      data,
      include: {
        category: true,
        images: { orderBy: { order: 'asc' } },
        variants: {
          include: {
            price: true,
            inventory: true,
          },
        },
      },
    });

    // Admin updated product (log removed for ESLint)

    return res.status(200).json({ product });
  } catch (error) {
    if (error instanceof z.ZodError) {
      return res.status(400).json({ error: 'Validation error', details: error.issues });
    }
    console.error('Error updating product:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

async function deleteProduct(req: NextApiRequest, res: NextApiResponse, id: string, _session: any) {
  try {
    // Verificar se produto existe
    const product = await prisma.product.findUnique({
      where: { id },
      select: { slug: true },
    });

    if (!product) {
      return res.status(404).json({ error: 'Product not found' });
    }

    // Deletar produto (cascade deletar√° variants, pre√ßos, inventory, etc.)
    await prisma.product.delete({
      where: { id },
    });

    // Admin deleted product (log removed for ESLint)

    res.status(204).end();
    return;
  } catch (error) {
    console.error('Error deleting product:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

export default withAdminAuth(handler);


        üìÅ variants/
          üìÑ index.ts

============================================================
FILE: src\pages\api\admin\variants\index.ts
============================================================
// INSANYCK STEP 10 ‚Äî Admin Variants API
// src/pages/api/admin/variants/index.ts
import { NextApiRequest, NextApiResponse } from 'next';
import { prisma } from '@/lib/prisma';
import { withAdminAuth } from '@/lib/adminAuth';
import { z } from 'zod';

const createVariantSchema = z.object({
  productId: z.string(),
  sku: z.string().min(1),
  title: z.string().optional(),
  status: z.enum(['active', 'inactive']).default('active'),
  optionValues: z.array(z.string()).min(1), // IDs dos OptionValues
  price: z.object({
    cents: z.number().min(0),
    currency: z.string().default('BRL'),
    compareAtCents: z.number().optional(),
  }),
  inventory: z.object({
    quantity: z.number().min(0).default(0),
    trackInventory: z.boolean().default(true),
    allowBackorder: z.boolean().default(false),
  }),
});

async function handler(req: NextApiRequest, res: NextApiResponse, session: any) {
  switch (req.method) {
    case 'POST':
      return createVariant(req, res, session);
    default:
      res.setHeader('Allow', ['POST']);
      return res.status(405).json({ error: 'Method not allowed' });
  }
}

async function createVariant(req: NextApiRequest, res: NextApiResponse, _session: any) {
  try {
    const data = createVariantSchema.parse(req.body);

    // Verificar se produto existe
    const product = await prisma.product.findUnique({
      where: { id: data.productId },
    });

    if (!product) {
      return res.status(400).json({ error: 'Product not found' });
    }

    // Verificar se SKU j√° existe
    const existingSku = await prisma.variant.findUnique({
      where: { sku: data.sku },
    });

    if (existingSku) {
      return res.status(400).json({ error: 'SKU already exists' });
    }

    // Verificar se OptionValues existem
    const optionValues = await prisma.optionValue.findMany({
      where: { id: { in: data.optionValues } },
    });

    if (optionValues.length !== data.optionValues.length) {
      return res.status(400).json({ error: 'Some option values not found' });
    }

    // Criar variant com pre√ßo e estoque em transa√ß√£o
    const variant = await prisma.$transaction(async (tx) => {
      // Criar variant
      const newVariant = await tx.variant.create({
        data: {
          productId: data.productId,
          sku: data.sku,
          title: data.title,
          status: data.status,
          options: {
            create: data.optionValues.map(optionValueId => ({
              optionValueId,
            })),
          },
        },
      });

      // Criar pre√ßo
      await tx.price.create({
        data: {
          variantId: newVariant.id,
          ...data.price,
        },
      });

      // Criar inventory
      await tx.inventory.create({
        data: {
          variantId: newVariant.id,
          ...data.inventory,
        },
      });

      return newVariant;
    });

    // Buscar variant completa para retorno
    const fullVariant = await prisma.variant.findUnique({
      where: { id: variant.id },
      include: {
        price: true,
        inventory: true,
        options: {
          include: {
            optionValue: {
              include: {
                option: true,
              },
            },
          },
        },
      },
    });

    // Admin created variant (log removed for ESLint)

    return res.status(201).json({ variant: fullVariant });
  } catch (error) {
    if (error instanceof z.ZodError) {
      return res.status(400).json({ error: 'Validation error', details: error.issues });
    }
    console.error('Error creating variant:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}

export default withAdminAuth(handler);


      üìÅ auth/
        üìÑ [...nextauth].ts

============================================================
FILE: src\pages\api\auth\[...nextauth].ts
============================================================
// pages/api/auth/[...nextauth].ts
// INSANYCK ‚Äî NextAuth lazy + guards (Pages Router)
import type { NextApiRequest, NextApiResponse } from "next";
import NextAuth, { type NextAuthOptions } from "next-auth";
import Credentials from "next-auth/providers/credentials";
import { backendDisabled, missingEnv } from "@/lib/backendGuard";

// 1) Lazy options (n√£o toca env/prisma no import-time)
export async function createAuthOptions(): Promise<NextAuthOptions> {
  if (backendDisabled) throw new Error("Backend disabled for preview/dev");

  const need = missingEnv("NEXTAUTH_SECRET", "DATABASE_URL");
  if (!need.ok) throw new Error(`Missing env: ${need.absent.join(", ")}`);

  const { PrismaAdapter } = await import("@next-auth/prisma-adapter");
  const { prisma } = await import("@/lib/prisma");
  const { env } = await import("@/lib/env.server");

  return {
    adapter: PrismaAdapter(prisma),
    session: { strategy: "jwt" },
    secret: env.NEXTAUTH_SECRET,
    pages: { signIn: "/conta/login", error: "/conta/login" },
    providers: [
      Credentials({
        name: "Email",
        credentials: { email: { label: "Email", type: "email" } },
        async authorize(creds) {
          const email = creds?.email?.toLowerCase().trim();
          if (!email) return null;
          const { prisma } = await import("@/lib/prisma");
          let user = await prisma.user.findUnique({ where: { email } });
          if (!user) {
            user = await prisma.user.create({ data: { email, name: email.split("@")[0] } });
          }
          return { id: user.id, name: user.name, email: user.email, image: user.image ?? null };
        },
      }),
    ],
    callbacks: {
      jwt({ token, user }) {
        if (user) (token as any).id = (user as any).id;
        return token;
      },
      session({ session, token }) {
        if (session.user && (token as any).id) (session.user as any).id = (token as any).id;
        return session;
      },
    },
  };
}

// 2) Handler din√¢mico (Pages Router)
export default async function auth(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method === "HEAD") return res.status(200).end();
    const options = await createAuthOptions();
    // NextAuth aceita (req, res, options) no Pages Router
    // @ts-ignore ‚Äì assinatura aceita em runtime
    return NextAuth(req, res, options);
  } catch (e: any) {
    return res.status(503).json({ error: "Auth unavailable", detail: e?.message });
  }
}



      üìÑ cart-sync.ts

============================================================
FILE: src\pages\api\cart-sync.ts
============================================================
import type { NextApiRequest, NextApiResponse } from "next";
import { backendDisabled, missingEnv } from "@/lib/backendGuard";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (backendDisabled) {
    return res.status(503).json({ error: "Backend disabled for preview/dev" });
  }

  const need = missingEnv("MONGODB_URI");
  if (!need.ok) {
    return res.status(503).json({ error: "Missing env", missing: need.absent });
  }

  // Lazy imports
  const { connectToDatabase } = await import("@/lib/mongo");
  const { default: Cart } = await import("@/lib/models/Cart");
  const { getServerSession } = await import("next-auth");
  const { createAuthOptions } = await import("./auth/[...nextauth]");

  // 1. Conex√£o universal
  await connectToDatabase();

  // 2. Pegue userId e/ou sessionId
  let userId: string | null = null;
  let sessionId: string | undefined = undefined;

  // Exemplo para NextAuth (usu√°rio logado)
  const authOptions = await createAuthOptions();
  const session = await getServerSession(req, res, authOptions).catch(() => null);
  if (session?.user?.id) {
    userId = session.user.id;
  } else {
    // Guest: pode pegar sessionId do cookie, header, ou gerar no front e mandar via query/body
    sessionId = (req.query.sessionId as string) || undefined;
    if (!sessionId) {
      return res.status(401).json({ error: "SessionId ausente para guest" });
    }
  }

  // 3. GET = buscar carrinho
  if (req.method === "GET") {
    const cart = await Cart.findByUserOrSession(userId, sessionId || "");
    return res.status(200).json({ cart: cart?.items || [] });
  }

  // 4. POST = atualizar carrinho
  if (req.method === "POST") {
    const { items } = req.body;
    if (!Array.isArray(items)) {
      return res.status(400).json({ error: "items deve ser um array" });
    }

    let cart;
    if (userId) {
      cart = await Cart.findOneAndUpdate(
        { userId },
        { items, updatedAt: new Date() },
        { upsert: true, new: true }
      );
    } else {
      cart = await Cart.findOneAndUpdate(
        { sessionId },
        { items, updatedAt: new Date() },
        { upsert: true, new: true }
      );
    }

    return res.status(200).json({ ok: true, cart: cart.items });
  }

  return res.status(405).json({ error: "M√©todo n√£o permitido" });
}



      üìÑ cart.ts

============================================================
FILE: src\pages\api\cart.ts
============================================================
// INSANYCK STEP 6
// src/pages/api/cart.ts
import type { NextApiRequest, NextApiResponse } from "next";

export default function handler(req: NextApiRequest, res: NextApiResponse) {
  // Apenas ecoa; √∫til para testar integra√ß√£o futura
  res.status(200).json({
    ok: true,
    method: req.method,
    body: req.body ?? null,
  });
}



      üìÑ checkout.ts

============================================================
FILE: src\pages\api\checkout.ts
============================================================
// INSANYCK STEP 11 ‚Äî API /api/checkout with Type-Safe Env
import { NextApiRequest, NextApiResponse } from "next";
import { backendDisabled, missingEnv } from "@/lib/backendGuard";
import { z } from "zod";

// Zod schema para valida√ß√£o
const CheckoutSchema = z.object({
  items: z.array(z.object({
    variantId: z.string().optional(),
    sku: z.string().optional(),
    qty: z.number().min(1),
  })).min(1),
  currency: z.literal("BRL"),
});

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (backendDisabled) {
    return res.status(503).json({ error: "Backend disabled for preview/dev" });
  }

  const need = missingEnv("STRIPE_SECRET_KEY", "NEXT_PUBLIC_URL");
  if (!need.ok) {
    return res.status(503).json({ error: "Missing env", missing: need.absent });
  }

  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  // Lazy imports
  const { stripe } = await import("@/lib/stripe");
  const { env, isServerEnvReady } = await import("@/lib/env.server");

  if (!isServerEnvReady()) {
    console.error('[INSANYCK][Checkout] Server environment not ready');
    return res.status(500).json({ 
      error: "Servi√ßo temporariamente indispon√≠vel",
      code: "ENV_NOT_READY" 
    });
  }

  try {
    // Validar entrada
    const { items, currency } = CheckoutSchema.parse(req.body);

    // TODO: Para cada item, ler pre√ßo do DB (variant.price.cents) e estoque
    // Mock tempor√°rio - implementar integra√ß√£o com DB real
    const line_items = await Promise.all(
      items.map(async (item) => {
        // MOCK: buscar dados reais do produto/variante
        const mockPrice = 9900; // R$ 99,00 em centavos
        const mockName = item.variantId ? `Produto ${item.variantId}` : `SKU ${item.sku}`;
        
        // Verificar estoque (mock)
        const stockAvailable = 100; // mock
        if (item.qty > stockAvailable) {
          throw new Error(`Estoque insuficiente para ${mockName}`);
        }

        return {
          price_data: {
            currency: currency.toLowerCase(),
            product_data: { 
              name: mockName,
              metadata: {
                variantId: item.variantId || "",
                sku: item.sku || "",
                productSlug: "mock-slug", // buscar do DB
              }
            },
            unit_amount: mockPrice,
          },
          quantity: item.qty,
        };
      })
    );

    // Metadata da sess√£o
    const cartHash = Math.random().toString(36).substring(7);
    const sessionMetadata = {
      cartHash,
      itemCount: items.length.toString(),
    };

    // Criar Stripe Checkout Session
    const session = await stripe.checkout.sessions.create({
      payment_method_types: ["card"],
      line_items,
      mode: "payment",
      metadata: sessionMetadata,
      success_url: `${env.NEXT_PUBLIC_URL}/checkout/success?session_id={CHECKOUT_SESSION_ID}`,
      cancel_url: `${env.NEXT_PUBLIC_URL}/checkout/cancel`,
    });

    res.status(200).json({ url: session.url });

  } catch (error) {
    if (error instanceof z.ZodError) {
      return res.status(400).json({ 
        error: "Dados inv√°lidos", 
        details: (error as any).errors 
      });
    }

    console.error("Checkout error:", error);
    res.status(500).json({ 
      error: "Erro interno do servidor",
      detail: env.NODE_ENV === "development" ? error : undefined
    });
  }
}



      üìÑ create-payment-intent.ts

============================================================
FILE: src\pages\api\create-payment-intent.ts
============================================================
// INSANYCK STEP 11 ‚Äî Payment Intent with Type-Safe Env
import type { NextApiRequest, NextApiResponse } from "next";
import { stripe } from "@/lib/stripe";
import { isServerEnvReady } from "@/lib/env.server";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // INSANYCK STEP 11 ‚Äî Runtime guards for environment
  if (!isServerEnvReady()) {
    console.error("[INSANYCK][PaymentIntent] Server environment not ready");
    return res.status(500).json({
      error: "Servi√ßo temporariamente indispon√≠vel",
      code: "ENV_NOT_READY",
    });
  }

  // ‚úÖ Seguran√ßa: s√≥ permite POST
  if (req.method !== "POST") {
    res.setHeader("Allow", ["POST"]);
    return res.status(405).json({ error: "M√©todo n√£o permitido" });
  }

  try {
    const { cart, email, fraudScore = 0 } = req.body;

    // ‚úÖ Valida√ß√£o forte
    if (!Array.isArray(cart) || typeof email !== "string" || !email.includes("@")) {
      return res.status(400).json({ error: "Dados inv√°lidos fornecidos" });
    }

    // ‚úÖ Antifraude b√°sica (pode evoluir com IA depois)
    if (fraudScore > 6) {
      return res.status(403).json({ error: "Atividade suspeita detectada. Pagamento bloqueado." });
    }

    // ‚úÖ Calcula o total (em centavos)
    const amount = cart.reduce((total: number, item: any) => {
      const preco = typeof item.preco === "number" ? item.preco : 0;
      return total + Math.round(preco * 100);
    }, 0);

    if (amount <= 0) {
      return res.status(400).json({ error: "Carrinho vazio ou valor inv√°lido" });
    }

    // ‚úÖ Cria√ß√£o do PaymentIntent
    const paymentIntent = await stripe.paymentIntents.create({
      amount,
      currency: "brl",
      receipt_email: email,
      automatic_payment_methods: { enabled: true },
      metadata: {
        origem: "checkout-insanyck",
        email,
        produtos: cart.length.toString(),
        fraudScore: fraudScore.toString(),
        timestamp: Date.now().toString(),
      },
    });

    return res.status(200).json({ clientSecret: paymentIntent.client_secret });
  } catch (error: any) {
    console.error("[STRIPE_ERROR]", error);

    // ‚úÖ Resposta segura para erro gen√©rico
    return res.status(500).json({
      error: "Falha ao processar pagamento. Tente novamente mais tarde.",
    });
  }
}



      üìÅ emails/
        üìÑ preview.ts

============================================================
FILE: src\pages\api\emails\preview.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Email templates preview API (secured)
import { NextApiRequest, NextApiResponse } from 'next';
import { render } from '@react-email/components';
import OrderConfirmation from '@/emails/OrderConfirmation';
import ShippingUpdate from '@/emails/ShippingUpdate';
import PasswordReset from '@/emails/PasswordReset';

type EmailType = 'order-confirmation' | 'shipping-update' | 'password-reset';

interface PreviewRequest extends NextApiRequest {
  query: {
    type: EmailType;
    token?: string;
    lang?: 'pt' | 'en';
  };
}

export default async function handler(req: PreviewRequest, res: NextApiResponse) {
  if (req.method !== 'GET') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  // Security: Only allow in development or with proper token
  const isProduction = process.env.NODE_ENV === 'production';
  const previewToken = process.env.EMAIL_PREVIEW_TOKEN;
  
  if (isProduction) {
    if (!previewToken) {
      return res.status(404).json({ error: 'Preview not available' });
    }
    
    if (req.query.token !== previewToken) {
      return res.status(401).json({ error: 'Unauthorized' });
    }
  }

  const { type, lang = 'pt' } = req.query;

  if (!type) {
    return res.status(400).json({ 
      error: 'Missing type parameter',
      availableTypes: ['order-confirmation', 'shipping-update', 'password-reset']
    });
  }

  try {
    let emailComponent;
    
    switch (type) {
      case 'order-confirmation':
        emailComponent = OrderConfirmation({
          customerName: 'Maria Silva',
          orderNumber: '#INS-2024-001',
          orderDate: new Date().toLocaleDateString(lang === 'pt' ? 'pt-BR' : 'en-US'),
          items: [
            {
              name: 'Oversized Classic Tee',
              variant: 'Preto ‚Ä¢ M',
              price: 12900,
              quantity: 1,
              image: '/products/oversized-classic/front.webp',
            },
            {
              name: 'Luxury Hoodie',
              variant: 'Cinza ‚Ä¢ L',
              price: 24900,
              quantity: 1,
              image: '/products/oversized-classic/front.webp',
            },
          ],
          subtotal: 37800,
          shipping: 0,
          total: 37800,
          shippingAddress: {
            name: 'Maria Silva',
            street: 'Rua Augusta, 456, Apt 12',
            city: 'S√£o Paulo',
            state: 'SP',
            postalCode: '01305-000',
            country: 'Brasil',
          },
          language: lang,
        });
        break;

      case 'shipping-update':
        emailComponent = ShippingUpdate({
          customerName: 'Jo√£o Santos',
          orderNumber: '#INS-2024-002',
          trackingNumber: 'BR987654321',
          carrier: 'Correios - SEDEX',
          estimatedDelivery: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toLocaleDateString(lang === 'pt' ? 'pt-BR' : 'en-US'),
          shippingAddress: {
            name: 'Jo√£o Santos',
            street: 'Av. Paulista, 1000',
            city: 'S√£o Paulo',
            state: 'SP',
            postalCode: '01310-100',
            country: 'Brasil',
          },
          items: [
            {
              name: 'Oversized Classic Tee',
              variant: 'Branco ‚Ä¢ G',
              quantity: 2,
              image: '/products/oversized-classic/front.webp',
            },
          ],
          language: lang,
        });
        break;

      case 'password-reset':
        emailComponent = PasswordReset({
          customerName: 'Ana Costa',
          resetUrl: `${process.env.NEXTAUTH_URL || 'http://localhost:3000'}/auth/reset-password?token=sample-reset-token`,
          ipAddress: '192.168.1.100',
          userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
          expiresIn: lang === 'pt' ? '1 hora' : '1 hour',
          language: lang,
        });
        break;

      default:
        return res.status(400).json({ 
          error: 'Invalid email type',
          availableTypes: ['order-confirmation', 'shipping-update', 'password-reset']
        });
    }

    const html = render(emailComponent);
    
    res.setHeader('Content-Type', 'text/html');
    res.status(200).send(html);
  } catch (error) {
    console.error('Email preview error:', error);
    res.status(500).json({ 
      error: 'Failed to render email template',
      details: error instanceof Error ? error.message : 'Unknown error'
    });
  }
}


      üìÅ og/
        üìÑ [...route].ts

============================================================
FILE: src\pages\api\og\[...route].ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Dynamic OG image generation
import { NextApiRequest, NextApiResponse } from 'next';
import { sanitizeHtml, truncateText } from '@/lib/utils';

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Simple SVG OG image generator (fallback without external deps)
function generateOGImageSVG({
  title,
  description,
  type = 'website'
}: {
  title: string;
  description?: string;
  type?: string;
}) {
  const cleanTitle = sanitizeHtml(truncateText(title, 60));
  const cleanDescription = description ? sanitizeHtml(truncateText(description, 110)) : '';
  
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî SVG with INSANYCK branding
  return `
<svg width="1200" height="630" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="bg" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#000000;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#1a1a1a;stop-opacity:1" />
    </linearGradient>
    <filter id="glow">
      <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
      <feMerge> 
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
  </defs>
  
  <!-- Background -->
  <rect width="1200" height="630" fill="url(#bg)"/>
  
  <!-- Subtle pattern -->
  <g opacity="0.05">
    <circle cx="200" cy="150" r="100" fill="white"/>
    <circle cx="1000" cy="480" r="80" fill="white"/>
  </g>
  
  <!-- INSANYCK Logo/Brand -->
  <text x="100" y="120" font-family="system-ui, -apple-system, sans-serif" font-size="28" font-weight="700" fill="white" opacity="0.9">
    INSANYCK
  </text>
  
  <!-- Main Title -->
  <text x="100" y="280" font-family="system-ui, -apple-system, sans-serif" font-size="52" font-weight="800" fill="white" filter="url(#glow)">
    ${cleanTitle.length > 40 ? `${cleanTitle.substring(0, 40)}...` : cleanTitle}
  </text>
  
  ${cleanDescription ? `
  <!-- Description -->
  <text x="100" y="350" font-family="system-ui, -apple-system, sans-serif" font-size="24" font-weight="400" fill="white" opacity="0.8">
    ${cleanDescription.length > 80 ? `${cleanDescription.substring(0, 80)}...` : cleanDescription}
  </text>
  ` : ''}
  
  <!-- Type indicator -->
  <rect x="100" y="450" width="120" height="40" rx="20" fill="white" opacity="0.1"/>
  <text x="160" y="475" font-family="system-ui, -apple-system, sans-serif" font-size="16" font-weight="600" fill="white" opacity="0.7" text-anchor="middle">
    ${type.toUpperCase()}
  </text>
  
  <!-- Subtle border -->
  <rect x="2" y="2" width="1196" height="626" fill="none" stroke="white" stroke-width="2" opacity="0.1" rx="8"/>
</svg>`;
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    const { route } = req.query;
    const routePath = Array.isArray(route) ? route.join('/') : route || '';
    
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Extract parameters from query or route
    const {
      title = 'INSANYCK',
      description,
      type = 'website'
    } = req.query;
    
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Generate dynamic content based on route
    let ogTitle = title as string;
    let ogDescription = description as string;
    let ogType = type as string;
    
    // Route-specific content
    if (routePath.includes('produto')) {
      ogType = 'product';
      if (!ogDescription) {
        ogDescription = 'Descubra pe√ßas exclusivas que definem seu estilo √∫nico';
      }
    } else if (routePath.includes('loja')) {
      ogTitle = ogTitle === 'INSANYCK' ? 'Cole√ß√£o INSANYCK' : ogTitle;
      ogDescription = ogDescription || 'Explore nossa cole√ß√£o de luxo essencial';
    } else if (routePath === '' || routePath === 'home') {
      ogTitle = 'INSANYCK ‚Äî Luxo essencial em movimento';
      ogDescription = 'Pe√ßas premium com design preciso e presen√ßa magn√©tica';
    }
    
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Generate SVG
    const svg = generateOGImageSVG({
      title: ogTitle,
      description: ogDescription,
      type: ogType
    });
    
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Return SVG as response
    res.setHeader('Content-Type', 'image/svg+xml');
    res.setHeader('Cache-Control', 'public, s-maxage=31536000, immutable');
    res.status(200).send(svg);
    
  } catch (error) {
    console.error('OG Image generation error:', error);
    
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Fallback SVG on error
    const fallbackSvg = `
<svg width="1200" height="630" xmlns="http://www.w3.org/2000/svg">
  <rect width="1200" height="630" fill="#000"/>
  <text x="600" y="315" font-family="system-ui" font-size="48" font-weight="800" fill="white" text-anchor="middle">
    INSANYCK
  </text>
</svg>`;
    
    res.setHeader('Content-Type', 'image/svg+xml');
    res.status(200).send(fallbackSvg);
  }
}


      üìÅ products/
        üìÑ index.ts

============================================================
FILE: src\pages\api\products\index.ts
============================================================
// INSANYCK STEP 10 ‚Äî Public Products API
// src/pages/api/products/index.ts
import { NextApiRequest, NextApiResponse } from "next";
import { getAllProducts } from "@/lib/catalog";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "GET") {
    res.setHeader("Allow", ["GET"]);
    return res.status(405).json({ error: "Method not allowed" });
  }

  try {
    const { category, sortBy, limit, offset } = req.query;
    const products = await getAllProducts({
      categorySlug: typeof category === "string" ? category : undefined,
      sortBy: typeof sortBy === "string" ? (sortBy as any) : "newest",
      limit: limit ? Number(limit) : 20,
      offset: offset ? Number(offset) : 0,
    });
    res.status(200).json({ products });
  } catch {
    res.status(200).json({ products: [] });
  }
}



        üìÑ [slug].ts

============================================================
FILE: src\pages\api\products\[slug].ts
============================================================
// INSANYCK STEP 10 ‚Äî Public Product Detail API (fix Map.values misuse)
// src/pages/api/products/[slug].ts

import type { NextApiRequest, NextApiResponse } from "next";
import { prisma } from "@/lib/prisma";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "GET") {
    res.setHeader("Allow", ["GET"]);
    return res.status(405).json({ error: "Method not allowed" });
  }

  const slug = String(req.query.slug || "");
  if (!slug) return res.status(400).json({ error: "Missing slug" });

  try {
    const product = await prisma.product.findUnique({
      where: { slug },
      include: {
        images: { orderBy: { order: "asc" } },
        variants: {
          include: {
            price: true,
            inventory: true,
            options: {
              include: {
                optionValue: { include: { option: true } },
              },
            },
          },
        },
      },
    });

    if (!product || product.status !== "active") {
      return res.status(404).json({ error: "Product not found" });
    }

    // ====== Montagem das op√ß√µes (Size, Color...) a partir das variantes ======
    // (Corrige bug: N√ÉO usar Map.values como array. Colecionamos e depois
    // transformamos para array com Array.from(optionsMap.values()))
    type OptionDTO = {
      slug: string;
      name: string;
      values: { slug: string; name: string; value: string }[];
    };

    const optionsMap = new Map<string, OptionDTO>();

    for (const v of product.variants) {
      for (const vo of v.options) {
        const opt = vo.optionValue.option; // ex.: { slug: 'size', name: 'Tamanho' }
        const val = vo.optionValue;        // ex.: { slug: 'm', name: 'M', value: 'M' }

        let entry = optionsMap.get(opt.slug);
        if (!entry) {
          entry = { slug: opt.slug, name: opt.name, values: [] };
          optionsMap.set(opt.slug, entry);
        }

        // evitar duplicados
        if (!entry.values.some((x) => x.slug === val.slug)) {
          entry.values.push({ slug: val.slug, name: val.name, value: val.value });
        }
      }
    }

    // DTO final (retrocompat√≠vel com seu frontend atual)
    const dto = {
      id: product.id,
      title: product.title,
      slug: product.slug,
      description: product.description,
      images: product.images,
      variants: product.variants.map((v) => ({
        id: v.id,
        sku: v.sku,
        title: v.title ?? undefined,
        priceCents: v.price?.cents ?? 0,
        currency: v.price?.currency ?? "BRL",
        inventory: {
          quantity: v.inventory?.quantity ?? 0,
          reserved: v.inventory?.reserved ?? 0,
          available:
            (v.inventory?.quantity ?? 0) - (v.inventory?.reserved ?? 0),
        },
        options: v.options.map((vo) => ({
          option: vo.optionValue.option.slug, // "size" | "color"...
          value: vo.optionValue.slug,         // "m" | "preto"...
        })),
      })),
      options: Array.from(optionsMap.values()),
    };

    return res.status(200).json(dto);
  } catch (e: any) {
    console.error("[api/products/[slug]]", e);
    return res.status(500).json({ error: e?.message ?? "Server error" });
  }
}



      üìÑ robots.txt.ts

============================================================
FILE: src\pages\api\robots.txt.ts
============================================================
// INSANYCK STEP 11 ‚Äî Robots.txt with Type-Safe Env
import { NextApiRequest, NextApiResponse } from 'next';
import { env, isServerEnvReady } from '@/lib/env.server';

export default function handler(req: NextApiRequest, res: NextApiResponse) {
  if (!isServerEnvReady()) {
    console.error('[INSANYCK][Robots] Server environment not ready');
    return res.status(500).json({ error: 'Service unavailable' });
  }

  if (req.method !== 'GET' && req.method !== 'HEAD') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  const rawBase = (() => {
    try {
      return isServerEnvReady() ? (env.NEXT_PUBLIC_URL || "").trim().replace(/\/$/, "") : "";
    } catch { return ""; }
  })();
  const derivedBase = (() => {
    const host = req.headers.host || "localhost:3000";
    const proto = (req.headers["x-forwarded-proto"] as string) || (host.includes("localhost") ? "http" : "https");
    return `${proto}://${host}`;
  })();
  const baseUrl = rawBase || derivedBase;
  if (!rawBase && process.env.NODE_ENV !== "production") {
    console.warn("[INSANYCK][Robots] NEXT_PUBLIC_URL ausente; usando base derivada:", baseUrl);
  }

  const robots = `User-agent: *
Allow: /

Sitemap: ${baseUrl}/api/sitemap.xml
`;

  res.setHeader('Content-Type', 'text/plain; charset=utf-8');
  res.setHeader('Cache-Control', 'public, s-maxage=86400, stale-while-revalidate=604800');
  res.status(200).send(robots);
}


      üìÑ search.ts

============================================================
FILE: src\pages\api\search.ts
============================================================
// src/pages/api/search.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { searchProducts } from "@/lib/catalog";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "GET") {
    res.setHeader("Allow", ["GET"]);
    return res.status(405).json({ error: "Method not allowed" });
  }

  const q = typeof req.query.q === "string" ? req.query.q : "";
  const limit = req.query.limit ? Number(req.query.limit) : 8;

  try {
    const results = await searchProducts(q, limit);
    return res.status(200).json({ results });
  } catch {
    // fallback final sem 500
    return res.status(200).json({ results: [] });
  }
}


      üìÑ sitemap.xml.ts

============================================================
FILE: src\pages\api\sitemap.xml.ts
============================================================
// INSANYCK STEP 11 ‚Äî Sitemap with Type-Safe Env and Prisma
import { NextApiRequest, NextApiResponse } from 'next';
import { prisma } from '@/lib/prisma';
import { env, isServerEnvReady } from '@/lib/env.server';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    // 1) Base URL: usa env se existir; sen√£o, deriva do request (robusto para qualquer porta/preview)
    const rawBase = (() => {
      try {
        return isServerEnvReady() ? (env.NEXT_PUBLIC_URL || "").trim().replace(/\/$/, "") : "";
      } catch {
        return "";
      }
    })();
    const derivedBase = (() => {
      const host = req.headers.host || "localhost:3000";
      const proto = (req.headers["x-forwarded-proto"] as string) || (host.includes("localhost") ? "http" : "https");
      return `${proto}://${host}`;
    })();
    const baseUrl = rawBase || derivedBase;
    if (!rawBase && process.env.NODE_ENV !== "production") {
      console.warn("[INSANYCK][Sitemap] NEXT_PUBLIC_URL ausente; usando base derivada:", baseUrl);
    }

    // 2) Permitir GET e HEAD
    if (req.method !== "GET" && req.method !== "HEAD") {
      return res.status(405).json({ error: "Method not allowed" });
    }

    const [products, categories] = await Promise.all([
      prisma.product.findMany({ select: { slug: true, updatedAt: true }, where: { status: "active" } }),
      prisma.category.findMany({ select: { slug: true, updatedAt: true } }),
    ]);

    const now = new Date();
    const staticUrls = [
      { loc: "/", lastmod: now, priority: "1.0" },
      { loc: "/loja", lastmod: now, priority: "0.8" }
    ];

    const categoryUrls = (categories ?? []).map(c => ({
      loc: `/loja?category=${encodeURIComponent(c.slug)}`,
      lastmod: c.updatedAt ?? now,
      priority: "0.7"
    }));

    const productUrls = (products ?? []).map(p => ({
      loc: `/produto/${encodeURIComponent(p.slug)}`,
      lastmod: p.updatedAt ?? now,
      priority: "0.6"
    }));

    const allUrls = [...staticUrls, ...categoryUrls, ...productUrls];
    
    const sitemap = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${allUrls.map(url => `  <url>
    <loc>${baseUrl}${url.loc.startsWith("/") ? url.loc : "/" + url.loc}</loc>
    <lastmod>${url.lastmod.toISOString()}</lastmod>
    <changefreq>daily</changefreq>
    <priority>${url.priority}</priority>
  </url>`).join("\n")}
</urlset>`;

    res.setHeader("Content-Type", "application/xml; charset=utf-8");
    res.setHeader("Cache-Control", "public, s-maxage=86400, stale-while-revalidate=604800");
    res.status(200).send(sitemap);
  } catch (e) {
    console.error("[INSANYCK][Sitemap] Fallback mode:", e);
    const host = req.headers.host || "localhost:3000";
    const proto = (req.headers["x-forwarded-proto"] as string) || (host.includes("localhost") ? "http" : "https");
    const fallbackBase = `${proto}://${host}`;
    const now = new Date().toISOString();
    const xml = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url><loc>${fallbackBase}/</loc><lastmod>${now}</lastmod><changefreq>daily</changefreq><priority>1.0</priority></url>
  <url><loc>${fallbackBase}/loja</loc><lastmod>${now}</lastmod><changefreq>daily</changefreq><priority>0.8</priority></url>
</urlset>`;
    res.setHeader("Content-Type", "application/xml; charset=utf-8");
    res.setHeader("Cache-Control", "public, s-maxage=86400, stale-while-revalidate=604800");
    res.status(200).send(xml);
  }
}


      üìÅ stripe/
        üìÑ checkout.ts

============================================================
FILE: src\pages\api\stripe\checkout.ts
============================================================
// INSANYCK STEP 11 ‚Äî Stripe Checkout (Session) with Type-Safe Env
import type { NextApiRequest, NextApiResponse } from "next";
import type Stripe from "stripe";
import { stripe } from "@/lib/stripe";
import { isServerEnvReady } from "@/lib/env.server";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // INSANYCK STEP 11 ‚Äî Runtime guards for environment
  if (!isServerEnvReady()) {
    console.error("[INSANYCK][Stripe Checkout] Server environment not ready");
    return res.status(500).json({
      error: "Service temporarily unavailable",
      code: "ENV_NOT_READY",
    });
  }

  if (req.method !== "POST") return res.status(405).json({ error: "Method Not Allowed" });
  try {
    const { items, shippingCents = 0, locale = "pt", email } = req.body || {};
    const currency = locale === "en" ? "usd" : "brl";

    const origin =
      (req.headers["x-forwarded-proto"] ? `${req.headers["x-forwarded-proto"]}://` : "https://") +
      (req.headers["x-forwarded-host"] || req.headers.host);

    const line_items: Stripe.Checkout.SessionCreateParams.LineItem[] = [
      ...(Array.isArray(items)
        ? items.map((it: any) => ({
            quantity: Math.max(1, Number(it.qty) || 1),
            price_data: {
              currency,
              unit_amount: Number(it.priceCents) || 0,
              product_data: {
                name: it.title || "Produto",
                images: it.image ? [it.image] : undefined,
                metadata: {
                  slug: it.slug || "",
                  variant: it.variant || "",
                  // INSANYCK STEP 10 ‚Äî Metadados para o webhook decrementar estoque
                  variantId: it.variantId || "",
                  sku: it.sku || "",
                  title: it.title || "",
                },
              },
            },
          }))
        : []),
      ...(shippingCents > 0
        ? [
            {
              quantity: 1,
              price_data: {
                currency,
                unit_amount: Number(shippingCents) || 0,
                product_data: { name: "Frete" },
              },
            },
          ]
        : []),
    ];

    const session = await stripe.checkout.sessions.create({
      mode: "payment",
      customer_email: email || undefined,
      locale: locale === "en" ? "en" : "pt-BR",
      line_items,
      allow_promotion_codes: true,
      success_url: `${origin}/pedido/{CHECKOUT_SESSION_ID}`, // usa a rota existente /pedido/[id]
      cancel_url: `${origin}/sacola`,
      metadata: { locale },
    });

    // Compat√≠vel com seu front atual: redirecione usando `url` OU `sessionId`
    return res.status(200).json({ sessionId: session.id, url: session.url });
  } catch (err: any) {
    // eslint-disable-next-line no-console
    console.error("[stripe/checkout]", err);
    return res.status(500).json({ error: err?.message || "Checkout error" });
  }
}



        üìÑ webhook.ts

============================================================
FILE: src\pages\api\stripe\webhook.ts
============================================================
// INSANYCK STEP 11 ‚Äî Webhook Stripe with Type-Safe Env
import type { NextApiRequest, NextApiResponse } from "next";
import { backendDisabled, missingEnv } from "@/lib/backendGuard";
import { prisma } from "@/lib/prisma";
import { stripe } from "@/lib/stripe";
import { env, isServerEnvReady } from "@/lib/env.server";

// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Idempot√™ncia em mem√≥ria (com TTL)
const __seenStripeEvents = new Map<string, number>();
const __SEEN_TTL_MS = 24 * 60 * 60 * 1000; // 24h

function __rememberStripe(id: string) {
  const now = Date.now();
  __seenStripeEvents.set(id, now);
  if (__seenStripeEvents.size % 50 === 0) {
    const cutoff = now - __SEEN_TTL_MS;
    for (const [k, t] of __seenStripeEvents) if (t < cutoff) __seenStripeEvents.delete(k);
  }
}

function __alreadyProcessedStripe(id: string) {
  const t = __seenStripeEvents.get(id);
  return !!t && Date.now() - t < __SEEN_TTL_MS;
}

export const config = { api: { bodyParser: false } };

function readBuffer(readable: any) {
  return new Promise<Buffer>((resolve, reject) => {
    const chunks: Uint8Array[] = [];
    readable.on("data", (c: Uint8Array) => chunks.push(Buffer.from(c)));
    readable.on("end", () => resolve(Buffer.concat(chunks)));
    readable.on("error", reject);
  });
}

export default async function handler(req: NextApiRequest, res: NextApiResponse): Promise<void> {
  // Guards de runtime (n√£o derrubam preview/dev)
  if (backendDisabled) {
    res.status(503).json({ error: "Backend disabled for preview/dev" });
    return;
  }
  if (!isServerEnvReady()) {
    console.error("[INSANYCK][Webhook] Server environment not ready");
    res.status(500).json({ error: "Server configuration error" });
    return;
  }
  const need = missingEnv("STRIPE_WEBHOOK_SECRET");
  if (!need.ok) {
    res.status(503).json({ error: "Missing env", missing: need.absent });
    return;
  }

  // Permitir HEAD para health checks
  if (req.method === "HEAD") {
    res.status(200).end();
    return;
  }
  if (req.method !== "POST") {
    res.status(405).json({ error: "Method Not Allowed" });
    return;
  }

  const sig = req.headers["stripe-signature"];
  if (!sig) {
    res.status(400).json({ error: "Missing stripe-signature" });
    return;
  }

  const buf = await readBuffer(req);
  let event;
  try {
    event = stripe.webhooks.constructEvent(buf, String(sig), env.STRIPE_WEBHOOK_SECRET);
  } catch (err: any) {
    res.status(400).send(`Webhook Error: ${err.message}`);
    return;
  }

  // INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Short-circuit se evento j√° processado
  if (__alreadyProcessedStripe(event.id)) {
    return res.status(200).json({ ok: true, skipped: "duplicate" });
  }

  try {
    if (event.type === "checkout.session.completed") {
      const session = event.data.object as any;

      // Idempot√™ncia
      const exists = await prisma.order.findFirst({ where: { stripeSessionId: session.id } });
      if (exists) {
        res.status(200).json({ ok: true, skipped: "duplicate" });
        return;
      }

      const lineItems = await stripe.checkout.sessions.listLineItems(session.id, {
        expand: ["data.price.product"],
      });

      const email = session.customer_details?.email ?? "";
      const currency = (session.currency || "brl").toUpperCase();
      const amountTotal = session.amount_total ?? 0;
      const user = email ? await prisma.user.findFirst({ where: { email } }) : null;

      // Criar pedido e decrementar estoque em transa√ß√£o
      const order = await prisma.$transaction(async (tx) => {
        const newOrder = await tx.order.create({
          data: {
            userId: user?.id ?? null,
            email,
            stripeSessionId: session.id,
            status: "paid",
            currency,
            amountTotal,
            items: {
              create: (lineItems.data || []).map((li: any) => {
                const qty = li.quantity ?? 1;
                const title = (li.description ?? "Produto").toString();
                const unit = Math.max(0, Math.floor((li.amount_total ?? 0) / qty));
                const product = (li.price?.product as any) || {};
                const slug =
                  product?.metadata?.slug ||
                  title
                    .toLowerCase()
                    .replace(/[^\w]+/g, "-")
                    .replace(/(^-|-$)/g, "");
                const image = Array.isArray(product?.images) ? product.images[0] : undefined;

                const variantId = product?.metadata?.variantId;
                const sku = product?.metadata?.sku;

                return {
                  slug,
                  title,
                  priceCents: unit,
                  qty,
                  image,
                  variant: product?.metadata?.variant || undefined,
                  variantId,
                  sku,
                };
              }),
            },
          },
        });

        // Decrementar estoque por variantId (quando houver)
        for (const li of lineItems.data || []) {
          const product = (li.price?.product as any) || {};
          const variantId = product?.metadata?.variantId;
          const qty = li.quantity ?? 1;

          if (variantId) {
            try {
              await tx.inventory.updateMany({
                where: { variantId, quantity: { gte: qty } },
                data: { quantity: { decrement: qty } },
              });
              // Estoque decrementado (log removed for ESLint)
            } catch (error) {
              console.warn(`Erro ao decrementar estoque para variantId ${variantId}:`, error);
              // N√£o falha a transa√ß√£o
            }
          }
        }

        return newOrder;
      });

      __rememberStripe(event.id);
      res.status(200).json({ ok: true, orderId: order.id });
      return;
    }
    if (event.type === "payment_intent.payment_failed") {
      const paymentIntent = event.data.object as any;
      console.warn(`Payment failed for intent: ${paymentIntent.id}`, {
        amount: paymentIntent.amount,
        currency: paymentIntent.currency,
        lastPaymentError: paymentIntent.last_payment_error,
      });
      __rememberStripe(event.id);
      res.status(200).json({ ok: true, logged: "payment_failed" });
      return;
    }

    // INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Eventos adicionais (logs leves)
    if (event.type === "payment_intent.succeeded") {
      const _pi = event.data.object as any;
      // Payment intent succeeded (log removed for ESLint)
      __rememberStripe(event.id);
      return res.status(200).json({ ok: true, logged: "payment_intent.succeeded" });
    }

    if (event.type === "charge.refunded") {
      const _charge = event.data.object as any;
      // Charge refunded (log removed for ESLint)
      __rememberStripe(event.id);
      return res.status(200).json({ ok: true, logged: "charge.refunded" });
    }

    __rememberStripe(event.id);
    res.status(200).json({ received: true });
    return;
  } catch (err: any) {
    // eslint-disable-next-line no-console
    console.error("[stripe/webhook]", err);
    __rememberStripe(event.id);
    res.status(500).json({ error: err?.message || "Webhook handler error" });
    return;
  }
}



      üìÑ testemongo.ts

============================================================
FILE: src\pages\api\testemongo.ts
============================================================
// src/pages/api/testemongo.ts

import type { NextApiRequest, NextApiResponse } from "next/types";
import clientPromise from "@/lib/mongodb";
import { z } from "zod";
import type { Db } from "mongodb";
// import { getServerSession } from "next-auth/next"; // Descomente se usar next-auth
// import { authOptions } from "./auth/[...nextauth]"; // Caminho pode mudar
import pino from "pino";

// Logger profissional (salva logs apenas em prod)
const logger = pino({ level: process.env.NODE_ENV === "production" ? "info" : "debug" });

// Esquema de valida√ß√£o com Zod
const UserSchema = z.object({
  nome: z.string().min(2, "Nome muito curto").max(50, "Nome muito longo").transform(s => sanitize(s)),
  idade: z.number().int().positive("Idade deve ser positiva").min(13, "Idade m√≠nima 13").max(120, "Idade inv√°lida"),
});
type UserData = z.infer<typeof UserSchema>;

// (Opcional) Sanitiza√ß√£o adicional
function sanitize(str: string) {
  return str.replace(/[\$<>]/g, ""); // Remove poss√≠veis inje√ß√µes simples
}

// Handler principal
export default async function handler(req: NextApiRequest, res: NextApiResponse): Promise<void> {
  const startedAt = Date.now();

  // CORS: s√≥ libera tudo no dev, e dom√≠nio seguro em prod
  if (process.env.NODE_ENV === "development") {
    res.setHeader('Access-Control-Allow-Origin', '*');
  } else {
    res.setHeader('Access-Control-Allow-Origin', 'https://insanyck.com.br');
  }
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');

  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  try {
    // (Opcional) Auth: Descomente se for privar o endpoint
    // const session = await getServerSession(req, res, authOptions);
    // if (!session) return res.status(401).json({ error: "N√£o autenticado" });

    const client = await clientPromise;
    const db: Db = client.db("insanyck");

    switch (req.method) {
      case "GET":
        await handleGetRequest(db, req, res, startedAt);
        return;
      case "POST":
        await handlePostRequest(db, req, res, startedAt);
        return;
      default:
        res.setHeader('Allow', ['GET', 'POST']);
        res.status(405).json({ error: `M√©todo ${req.method} n√£o permitido` });
        return;
    }
  } catch (error) {
    handleServerError(error, res);
  }
}

// Handler GET com pagina√ß√£o
async function handleGetRequest(
  db: Db,
  req: NextApiRequest,
  res: NextApiResponse,
  startedAt: number
) {
  try {
    // Pagina√ß√£o real
    const limit = Math.min(Number(req.query.limit) || 100, 200);
    const skip = Math.max(Number(req.query.skip) || 0, 0);

    const data = await db
      .collection("teste")
      .find({})
      .project({ _id: 0 }) // oculta o ObjectId
      .sort({ createdAt: -1 })
      .skip(skip)
      .limit(limit)
      .toArray();

    const elapsed = Date.now() - startedAt;
    logger.info({ endpoint: "GET /api/testemongo", count: data.length, elapsed });

    res.status(200).json({
      success: true,
      count: data.length,
      limit,
      skip,
      elapsedMs: elapsed,
      data,
    });
  } catch (error) {
    handleDatabaseError(error, res);
  }
}

// Handler POST robusto
async function handlePostRequest(
  db: Db,
  req: NextApiRequest,
  res: NextApiResponse,
  startedAt: number
) {
  try {
    const validation = UserSchema.safeParse(req.body);
    if (!validation.success) {
      logger.warn({ endpoint: "POST /api/testemongo", error: validation.error});
      res.status(400).json({
        error: "Dados inv√°lidos",
        details: validation.error.issues,
      });
      return;
    }

    const userData: UserData = validation.data;
    const now = new Date();

    // Insere documento
    const result = await db.collection("teste").insertOne({
      ...userData,
      createdAt: now,
      updatedAt: now,
    });

    const elapsed = Date.now() - startedAt;
    logger.info({ endpoint: "POST /api/testemongo", insertedId: result.insertedId, elapsed });

    res.status(201).json({
      success: true,
      message: "Usu√°rio criado com sucesso",
      insertedId: result.insertedId.toString(),
      createdAt: now.toISOString(),
      elapsedMs: elapsed,
    });
  } catch (error) {
    handleDatabaseError(error, res);
  }
}

// Handler para erros de banco
function handleDatabaseError(error: any, res: NextApiResponse) {
  logger.error({ msg: "Database error", error });
  if (error.code === 11000) {
    res.status(409).json({
      error: "Conflito de dados",
      message: "Registro duplicado detectado"
    });
    return;
  }
  res.status(500).json({
    error: "Erro no banco de dados",
    message: process.env.NODE_ENV === 'development'
      ? error.message
      : "Erro interno do servidor"
  });
}

// Handler para erros gen√©ricos
function handleServerError(error: any, res: NextApiResponse) {
  logger.error({ msg: "Server error", error });
  res.status(500).json({
    error: "Erro interno do servidor",
    message: process.env.NODE_ENV === 'development'
      ? error.message
      : "Por favor, tente novamente mais tarde"
  });
}



      üìÑ webhook.ts

============================================================
FILE: src\pages\api\webhook.ts
============================================================
// INSANYCK STEP 11 ‚Äî Webhook with Type-Safe Env and Runtime Guards
import { buffer } from "micro";
import type { NextApiRequest, NextApiResponse } from "next";
import Stripe from "stripe";
import { stripe } from "@/lib/stripe";
import { env, isServerEnvReady } from "@/lib/env.server";

export const config = { api: { bodyParser: false } };

export default async function handler(req: NextApiRequest, res: NextApiResponse): Promise<void> {
  // INSANYCK STEP 11 ‚Äî Runtime guards for environment
  if (!isServerEnvReady()) {
    console.error('[INSANYCK][Webhook] Server environment not ready');
    res.status(500).json({ 
      error: "Service temporarily unavailable",
      code: "ENV_NOT_READY" 
    });
    return;
  }

  if (req.method !== "POST") {
    res.status(405).end();
    return;
  }

  const sig = req.headers["stripe-signature"] as string;
  const buf = await buffer(req);

  let event;
  try {
    event = stripe.webhooks.constructEvent(buf, sig, env.STRIPE_WEBHOOK_SECRET);
  } catch (err) {
    console.error('[INSANYCK][Webhook] Signature verification failed:', err);
    res.status(400).send(`Webhook Error: ${(err as Error).message}`);
    return;
  }

  // Exemplo: a√ß√£o quando pagamento √© completado
  if (event.type === "checkout.session.completed") {
    const _session = event.data.object as Stripe.Checkout.Session;
    // Salve no banco de dados, dispare e-mail, etc.
  }

  res.status(200).json({ received: true });
}



    üìÑ buscar.tsx

============================================================
FILE: src\pages\buscar.tsx
============================================================
// INSANYCK STEP 11 ‚Äî Search Page with DB Integration
import Head from "next/head";
import { GetServerSideProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { useTranslation } from "next-i18next";
import ProductGrid from "@/components/ProductGrid";
import { ProductCardData } from "@/types/product";
import { seoSearch } from "@/lib/seo";

export default function BuscarPage() {
  const { t } = useTranslation(["search", "ui"]);
  const router = useRouter();
  const q = typeof router.query.q === "string" ? router.query.q.trim() : "";

  const [hydrated, setHydrated] = useState(false);
  const [results, setResults] = useState<ProductCardData[]>([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => setHydrated(true), []);

  // INSANYCK STEP 11 ‚Äî Search products via API
  useEffect(() => {
    if (!hydrated) return;
    
    const performSearch = async () => {
      if (!q) {
        setResults([]);
        return;
      }
      
      setLoading(true);
      try {
        const response = await fetch(`/api/search?q=${encodeURIComponent(q)}`);
        if (!response.ok) throw new Error('Search failed');
        
        const data = await response.json();
        setResults(data.results || []);
      } catch (error) {
        console.error('[Search] Error:', error);
        setResults([]);
      } finally {
        setLoading(false);
      }
    };

    performSearch();
  }, [q, hydrated]);

  const jsonLd = {
    "@context": "https://schema.org",
    "@type": "ItemList",
    itemListElement: results.map((p, idx) => ({
      "@type": "ListItem",
      position: idx + 1,
      url: `/produto/${p.slug}`,
      name: p.title,
      image: p.images?.front || "",
    })),
  };

  const seo = seoSearch(router.locale, q);

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, i) => (
          <meta key={i} {...tag} />
        ))}
        {seo.link.map((l, i) => (
          <link key={i} {...l} />
        ))}
        <script
          type="application/ld+json"
          // eslint-disable-next-line react/no-danger
          dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
        />
      </Head>

      <main className="pt-[120px] insanyck-bloom insanyck-bloom--soft">
        <div className="mx-auto max-w-[1280px] px-6">
          <h1 className="text-white/90 text-2xl font-semibold">
            {t("search:title", "Buscar")}
          </h1>
          {q ? (
            <p className="text-white/60 mt-2">
              {t("search:showing", "Exibindo resultados para")} ‚Äú{q}‚Äù
            </p>
          ) : null}

          <div className="mt-8">
            {/* INSANYCK STEP 11 ‚Äî DB-powered search with premium skeleton fallback */}
            <ProductGrid 
              items={results} 
              showSkeleton={!hydrated || loading}
              skeletonCount={8}
            />
          </div>
          
          {hydrated && !loading && results.length === 0 && q && (
            <div className="mt-8 text-center py-12">
              <p className="text-white/70">{t("search:noResults", "Nenhum resultado encontrado")}</p>
            </div>
          )}
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ locale }) => {
  return {
    props: {
      ...(await serverSideTranslations(locale ?? "pt", ["common", "nav", "plp", "search", "ui"])),
    },
  };
};



    üìÅ checkout/
      üìÑ cancel.tsx

============================================================
FILE: src\pages\checkout\cancel.tsx
============================================================
// INSANYCK ETAPA 11B ‚Äî P√°gina Cancel com visual INSANYCK
import { GetServerSideProps } from "next";
import Head from "next/head";
import Link from "next/link";
import { XCircle, ArrowLeft } from "lucide-react";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";

export default function CheckoutCancelPage() {
  const { t } = useTranslation(["checkout", "common"]);

  return (
    <>
      <Head>
        <title>{t("checkout:cancel.title", "Checkout Cancelado")} ‚Äî INSANYCK</title>
        <meta name="description" content={t("checkout:cancel.description", "O processo de checkout foi cancelado")} />
        <meta name="robots" content="noindex,nofollow" />
      </Head>

      <main className="min-h-screen pt-[120px] insanyck-bloom insanyck-bloom--soft">
        <div className="mx-auto max-w-[600px] px-6">
          {/* Glass card com halo sutil */}
          <div className="relative">
            <div
              aria-hidden
              className="pointer-events-none absolute inset-x-0 -top-8 h-24"
              style={{
                background: "radial-gradient(70% 100% at 50% 0%, rgba(239,68,68,0.15) 0%, rgba(239,68,68,0.08) 40%, rgba(239,68,68,0.0) 80%)",
              }}
            />
            
            <div className="rounded-3xl border border-white/12 bg-black/40 backdrop-blur-md p-8 text-center">
              {/* √çcone de cancelamento */}
              <div className="mx-auto w-20 h-20 rounded-full bg-red-500/20 border border-red-500/30 flex items-center justify-center mb-6">
                <XCircle className="w-10 h-10 text-red-400" />
              </div>

              {/* T√≠tulo */}
              <h1 className="text-white text-3xl font-semibold mb-4">
                {t("checkout:cancel.title", "Checkout Cancelado")}
              </h1>

              {/* Descri√ß√£o */}
              <div className="text-white/70 mb-8 space-y-3">
                <p>
                  {t("checkout:cancel.message", "N√£o se preocupe, nenhuma cobran√ßa foi realizada.")}
                </p>
                <p className="text-sm">
                  {t("checkout:cancel.itemsSaved", "Seus itens continuam salvos na sacola.")}
                </p>
              </div>

              {/* CTAs */}
              <div className="flex flex-col sm:flex-row gap-4">
                <Link
                  href="/sacola"
                  className="flex-1 rounded-xl px-6 py-3 font-semibold bg-white text-black hover:brightness-95 transition-transform hover:scale-[1.02] flex items-center justify-center gap-2"
                >
                  <ArrowLeft className="w-4 h-4" />
                  {t("checkout:cancel.backToBag", "Voltar para sacola")}
                </Link>
                <Link
                  href="/loja"
                  className="flex-1 rounded-xl px-6 py-3 font-semibold border border-white/20 text-white hover:bg-white/10 transition-colors"
                >
                  {t("checkout:cancel.continueShopping", "Continuar comprando")}
                </Link>
              </div>
            </div>
          </div>

          {/* Info de suporte */}
          <div className="mt-8 text-center text-white/60 text-sm">
            <p>
              {t("checkout:cancel.needHelp", "Precisa de ajuda?")} {" "}
              <Link href="/contato" className="text-white hover:underline">
                {t("common:contact", "Entre em contato")}
              </Link>
            </p>
          </div>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ locale }) => {
  // Cache-Control leve para SEO
  return {
    props: {
      ...(await serverSideTranslations(locale ?? "pt", [
        "common",
        "checkout",
      ])),
    },
  };
};


      üìÑ success.tsx

============================================================
FILE: src\pages\checkout\success.tsx
============================================================
// INSANYCK ETAPA 11B ‚Äî P√°gina Success com visual INSANYCK
import { GetServerSideProps } from "next";
import Head from "next/head";
import Link from "next/link";
import { CheckCircle } from "lucide-react";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";

interface SuccessPageProps {
  sessionId?: string;
}

export default function CheckoutSuccessPage({ sessionId }: SuccessPageProps) {
  const { t } = useTranslation(["checkout", "common"]);

  return (
    <>
      <Head>
        <title>{t("checkout:success.title", "Pedido Confirmado")} ‚Äî INSANYCK</title>
        <meta name="description" content={t("checkout:success.description", "Seu pedido foi processado com sucesso")} />
        <meta name="robots" content="noindex,nofollow" />
      </Head>

      <main className="min-h-screen pt-[120px] insanyck-bloom insanyck-bloom--soft">
        <div className="mx-auto max-w-[600px] px-6">
          {/* Glass card com halo premium */}
          <div className="relative">
            <div
              aria-hidden
              className="pointer-events-none absolute inset-x-0 -top-8 h-24"
              style={{
                background: "radial-gradient(70% 100% at 50% 0%, rgba(34,197,94,0.15) 0%, rgba(34,197,94,0.08) 40%, rgba(34,197,94,0.0) 80%)",
              }}
            />
            
            <div className="rounded-3xl border border-white/12 bg-black/40 backdrop-blur-md p-8 text-center">
              {/* √çcone de sucesso */}
              <div className="mx-auto w-20 h-20 rounded-full bg-green-500/20 border border-green-500/30 flex items-center justify-center mb-6">
                <CheckCircle className="w-10 h-10 text-green-400" />
              </div>

              {/* T√≠tulo */}
              <h1 className="text-white text-3xl font-semibold mb-4">
                {t("checkout:success.title", "Pedido Confirmado!")}
              </h1>

              {/* Descri√ß√£o */}
              <div className="text-white/70 mb-8 space-y-3">
                <p>
                  {t("checkout:success.message", "Seu pedido foi processado com sucesso.")}
                </p>
                {sessionId && (
                  <p className="text-sm">
                    {t("checkout:success.sessionId", "ID da sess√£o:")} 
                    <span className="text-white/90 font-mono ml-2">{sessionId}</span>
                  </p>
                )}
                <p className="text-sm">
                  {t("checkout:success.emailSent", "Em breve voc√™ receber√° um email com os detalhes do pedido.")}
                </p>
              </div>

              {/* CTAs */}
              <div className="flex flex-col sm:flex-row gap-4">
                <Link
                  href="/loja"
                  className="flex-1 rounded-xl px-6 py-3 font-semibold border border-white/20 text-white hover:bg-white/10 transition-colors"
                >
                  {t("checkout:success.continueShopping", "Continuar comprando")}
                </Link>
                <Link
                  href="/account/orders"
                  className="flex-1 rounded-xl px-6 py-3 font-semibold bg-white text-black hover:brightness-95 transition-transform hover:scale-[1.02]"
                >
                  {t("checkout:success.viewOrders", "Meus pedidos")}
                </Link>
              </div>
            </div>
          </div>

          {/* Info adicional */}
          <div className="mt-8 text-center text-white/60 text-sm">
            <p>
              {t("checkout:success.support", "D√∫vidas? Entre em contato conosco atrav√©s do")} {" "}
              <Link href="/contato" className="text-white hover:underline">
                {t("common:support", "suporte")}
              </Link>
            </p>
          </div>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ query, locale }) => {
  // Cache-Control leve para SEO
  return {
    props: {
      ...(await serverSideTranslations(locale ?? "pt", [
        "common",
        "checkout",
      ])),
      sessionId: query.session_id || null,
    },
  };
};


    üìÑ checkout.tsx

============================================================
FILE: src\pages\checkout.tsx
============================================================
// INSANYCK STEP 7 ‚Äî Checkout SPA (Checkout Sessions)
// src/pages/checkout.tsx

import React, { useState } from "react";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";

import dynamic from "next/dynamic";
import { AddressFields } from "@/components/AddressForm";
import { useCartStore, useCartSubtotal } from "@/store/cart";

const AddressForm = dynamic(() => import("@/components/AddressForm"), {
  ssr: false,
  loading: () => <div className="h-[300px] w-full animate-pulse bg-white/5 rounded-xl" />,
});

const ShippingSelector = dynamic(() => import("@/components/ShippingSelector"), {
  ssr: false,
  loading: () => <div className="h-[100px] w-full animate-pulse bg-white/5 rounded-xl" />,
});

const OrderSummary = dynamic(() => import("@/components/OrderSummary"), {
  ssr: false,
  loading: () => <div className="h-[200px] w-full animate-pulse bg-white/5 rounded-xl" />,
});
import { seoCheckout } from "@/lib/seo";

export default function CheckoutPage() {
  const { t, i18n } = useTranslation(["checkout", "bag"]);
  const locale = i18n.language?.startsWith("en") ? "en" : "pt";

  const items = useCartStore((s) => s.items);
  const _clear = useCartStore((s) => s.clear);
  const subtotalCents = useCartSubtotal();

  const [shipping, setShipping] = useState<"standard" | "express">("standard");
  const shippingCents = shipping === "express" ? 2490 : 0;

  const [_address, _setAddress] = useState<Partial<AddressFields>>({
    country: locale === "en" ? "USA" : "Brasil",
    state: locale === "en" ? "CA" : "SP",
  });
  const [loading, setLoading] = useState(false);

  const canPay = items.length > 0 && subtotalCents >= 0;

  async function handlePay() {
    if (!canPay) return;
    setLoading(true);
    try {
      // ETAPA 11D ‚Äî Adaptar para nova API /api/checkout com variantId/sku/qty do cart v2
      const checkoutItems = items.map((item) => ({
        variantId: item.variantId,
        sku: item.sku,
        qty: item.qty,
      }));

      const res = await fetch("/api/checkout", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          items: checkoutItems,
          currency: "BRL",
        }),
      });
      if (!res.ok) throw new Error("Checkout API error");
      const { url } = await res.json();
      if (!url) throw new Error("No session url");
      // Stripe redireciona; se voltar cancelado, usu√°rio volta pra /sacola.
      window.location.href = url;
    } catch (e) {
      console.error(e);
      alert(t("checkout:error", "N√£o foi poss√≠vel iniciar o pagamento."));
    } finally {
      setLoading(false);
    }
  }

  const seo = seoCheckout(locale);

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, i) => (
          <meta key={i} {...tag} />
        ))}
        {seo.link.map((l, i) => (
          <link key={i} {...l} />
        ))}
      </Head>

      <main className="mx-auto max-w-[1200px] px-6 pt-[120px] pb-20">
        <h1 className="text-white/90 text-3xl font-semibold">{t("checkout:title", "Checkout")}</h1>

        {items.length === 0 ? (
          <div className="mt-10 rounded-2xl border border-white/10 bg-black/40 p-8 text-white/70">
            <p>{t("bag:empty", "Sua sacola est√° vazia.")}</p>
            <Link
              href="/loja"
              className="mt-4 inline-block underline underline-offset-4 hover:text-white"
            >
              {t("bag:goShop", "Ir para a loja")}
            </Link>
          </div>
        ) : (
          <div className="mt-8 grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* Coluna esquerda */}
            <section className="lg:col-span-2 space-y-6">
              <div className="rounded-2xl border border-white/10 bg-black/40 p-5">
                <h2 className="text-white/90 font-medium mb-4">
                  {t("checkout:sections.customer", "Seus dados")}
                </h2>
                <AddressForm
                  register={(/* compat mock */) => ({ name: "", onChange: () => {} }) as any}
                  errors={{} as any}
                />
                <h2 className="text-white/90 font-medium mt-6 mb-3">
                  {t("checkout:sections.shipping", "Entrega")}
                </h2>
                <ShippingSelector value={shipping} onChange={setShipping} locale={locale as any} />
              </div>

              <div className="rounded-2xl border border-white/10 bg-black/40 p-5">
                <h2 className="text-white/90 font-medium mb-3">
                  {t("checkout:sections.payment", "Pagamento")}
                </h2>
                <p className="text-white/60 text-sm">
                  {t("checkout:payment.fake", "Pagamento via Stripe Checkout (seguro).")}
                </p>
                <button
                  onClick={handlePay}
                  disabled={loading || !canPay}
                  className="mt-4 rounded-xl px-4 py-3 font-semibold bg-white text-black hover:brightness-95 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 transition disabled:opacity-60"
                >
                  {loading
                    ? t("checkout:processing", "Processando...")
                    : t("checkout:placeOrder", "Finalizar pedido")}
                </button>
              </div>
            </section>

            {/* Resumo */}
            <aside className="lg:col-span-1 space-y-4">
              <div className="rounded-2xl border border-white/10 bg-black/40 p-4">
                <h3 className="text-white/80 font-medium mb-3">{t("bag:items", "Itens")}</h3>
                <ul className="space-y-3">
                  {items.map((it) => (
                    <li key={it.id} className="flex items-center gap-3">
                      <Image
                        src={it.image || "/products/placeholder/front.webp"}
                        alt={it.title}
                        width={56}
                        height={56}
                        sizes="56px"
                        className="rounded-lg object-cover border border-white/10"
                        loading="lazy"
                      />
                      <div className="flex-1">
                        <div className="text-white/80 text-sm">{it.title}</div>
                        {it.options?.variant ? (
                          <div className="text-white/50 text-xs">{it.options.variant}</div>
                        ) : null}
                      </div>
                      <div className="text-white/70 text-sm">
                        {new Intl.NumberFormat(locale === "en" ? "en-US" : "pt-BR", {
                          style: "currency",
                          currency: locale === "en" ? "USD" : "BRL",
                        }).format((it.priceCents * it.qty) / 100)}
                      </div>
                    </li>
                  ))}
                </ul>
              </div>

              <OrderSummary
                subtotalCents={subtotalCents}
                shippingCents={shippingCents}
                discountCents={0}
                locale={locale as any}
              />
            </aside>
          </div>
        )}
      </main>
    </>
  );
}

export async function getServerSideProps({ locale }: { locale: string }) {
  return {
    props: {
      ...(await serverSideTranslations(locale ?? "pt", ["common", "nav", "bag", "checkout"])),
    },
  };
}



    üìÑ colecao.tsx

============================================================
FILE: src\pages\colecao.tsx
============================================================
// INSANYCK STEP 11 ‚Äî Collection Page with Real Prisma Integration  
import useSWR from "swr";
import ProductGrid from "@/components/ProductGrid";
import { ProductCardData } from "@/types/product";

const fetcher = (url: string) => fetch(url).then(r => r.json());

ColecaoPage.getInitialProps = async () => {
  return {};
};

export default function ColecaoPage() {
  const { data: produtos, error } = useSWR("/api/products", fetcher);

  if (error) return <div className="p-8 text-white">Falha ao carregar produtos</div>;
  if (!produtos) return <div className="p-8 text-white">Carregando...</div>;

  return (
    <section className="p-8">
      <h1 className="text-3xl font-bold text-white mb-8">Cole√ß√£o</h1>
      <ProductGrid items={produtos as ProductCardData[]} />
    </section>
  );
}



    üìÅ conta/
      üìÑ cadastro.tsx

============================================================
FILE: src\pages\conta\cadastro.tsx
============================================================
// INSANYCK STEP 8
import { GetServerSideProps } from "next";
import Head from "next/head";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../api/auth/[...nextauth]";
import { useTranslation } from "next-i18next";
import { useRouter } from "next/router";
import { seoAccountSignup } from "@/lib/seo";

export default function SignupPage() {
  const { t } = useTranslation(["account"]);
  const router = useRouter();

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    // Mock: em produ√ß√£o, chamaria API de cadastro ou NextAuth Email
    alert(t("account:signup.mock", "Cadastro mock ‚Äî configure no NextAuth"));
  };

  const seo = seoAccountSignup(router.locale);

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, i) => (
          <meta key={i} {...tag} />
        ))}
        {seo.link.map((l, i) => (
          <link key={i} {...l} />
        ))}
      </Head>
      <section className="pt-[120px] pb-16">
        <div className="mx-auto max-w-[480px] px-6">
          <div className="rounded-2xl border border-white/10 bg-black/40 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] p-6">
            <h1 className="text-2xl font-semibold text-white/90">{t("account:signup.title", "Criar conta")}</h1>
            <p className="mt-2 text-white/70">{t("account:signup.subtitle", "Junte-se √† INSANYCK")}</p>

            <form className="mt-6 space-y-4" onSubmit={onSubmit}>
              <label className="block">
                <span className="text-white/70 text-sm">{t("account:signup.name", "Nome completo")}</span>
                <input className="mt-1 w-full bg-transparent border border-white/15 rounded-lg px-3 py-2 outline-none text-white placeholder:text-white/40 focus:border-white/30" required />
              </label>
              <label className="block">
                <span className="text-white/70 text-sm">{t("account:signup.email", "E-mail")}</span>
                <input type="email" className="mt-1 w-full bg-transparent border border-white/15 rounded-lg px-3 py-2 outline-none text-white placeholder:text-white/40 focus:border-white/30" required />
              </label>
              <label className="block">
                <span className="text-white/70 text-sm">{t("account:signup.password", "Senha")}</span>
                <input type="password" className="mt-1 w-full bg-transparent border border-white/15 rounded-lg px-3 py-2 outline-none text-white placeholder:text-white/40 focus:border-white/30" required />
              </label>
              <button className="w-full px-3 py-2 rounded-lg border border-white/15 text-white/90 hover:text-black hover:bg-white transition">
                {t("account:signup.submit", "Criar conta")}
              </button>
            </form>
          </div>
        </div>
      </section>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(ctx.req, ctx.res, authOptions);
  if (session?.user?.id) {
    return { redirect: { destination: "/conta", permanent: false }, props: {} as any };
  }
  return {
    props: await serverSideTranslations(ctx.locale ?? "pt", ["common", "nav", "account"]),
  };
};



      üìÑ enderecos.tsx

============================================================
FILE: src\pages\conta\enderecos.tsx
============================================================
// INSANYCK STEP 8
import { GetServerSideProps } from "next";
import Head from "next/head";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../api/auth/[...nextauth]";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import AccountLayout from "@/components/AccountLayout";
import { useTranslation } from "next-i18next";
import { useEffect, useState } from "react";

type Address = {
  id: string;
  name: string;
  phone: string;
  cep: string;
  street: string;
  number: string;
  complement?: string;
  district: string;
  city: string;
  state: string;
  country: string;
  isDefault: boolean;
};

export default function AddressesPage() {
  const { t } = useTranslation(["account"]);
  const [items, setItems] = useState<Address[]>([]);
  const [busy, setBusy] = useState(false);

  async function load() {
    const res = await fetch("/api/account/addresses");
    if (res.ok) {
      const data = await res.json();
      setItems(data.addresses ?? []);
    }
  }
  useEffect(() => {
    load();
  }, []);

  async function onCreate() {
    setBusy(true);
    try {
      const body: Partial<Address> = {
        name: "Endere√ßo Principal",
        phone: "(11) 99999-9999",
        cep: "00000-000",
        street: "Rua Exemplo",
        number: "123",
        district: "Centro",
        city: "S√£o Paulo",
        state: "SP",
        country: "BR",
        isDefault: items.length === 0,
      };
      const res = await fetch("/api/account/addresses", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });
      if (res.ok) await load();
    } finally {
      setBusy(false);
    }
  }

  async function onSetDefault(id: string) {
    await fetch(`/api/account/addresses/${id}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isDefault: true }),
    });
    await load();
  }

  async function onDelete(id: string) {
    await fetch(`/api/account/addresses/${id}`, { method: "DELETE" });
    await load();
  }

  return (
    <>
      <Head>
        <title>{t("account:addresses.title", "Endere√ßos")} ‚Äî INSANYCK</title>
      </Head>
      <AccountLayout titleKey="account:addresses.title">
        <div className="flex items-center justify-between">
          <p className="text-white/70">{t("account:addresses.subtitle", "Gerencie seus endere√ßos de entrega.")}</p>
          <button
            className="px-3 py-2 rounded-lg border border-white/15 text-white/80 hover:text-white hover:bg-white/5"
            onClick={onCreate}
            disabled={busy}
          >
            {t("account:addresses.add", "Adicionar endere√ßo")}
          </button>
        </div>

        <div className="mt-6 grid gap-4">
          {items.length === 0 ? (
            <p className="text-white/60">{t("account:addresses.empty", "Voc√™ ainda n√£o adicionou endere√ßos.")}</p>
          ) : (
            items.map((a) => (
              <div key={a.id} className="rounded-xl border border-white/10 p-4 flex items-center justify-between">
                <div className="text-white/80">
                  <div className="font-medium">{a.name}</div>
                  <div className="text-white/60 text-sm">
                    {a.street}, {a.number} ‚Äî {a.district} ‚Äî {a.city}/{a.state} ‚Äî {a.cep}
                  </div>
                  {a.isDefault && (
                    <span className="inline-block mt-2 text-xs rounded-full px-2 py-1 bg-white/10 text-white/80">
                      {t("account:addresses.default", "Padr√£o")}
                    </span>
                  )}
                </div>
                <div className="flex items-center gap-2">
                  {!a.isDefault && (
                    <button
                      className="px-3 py-2 rounded-lg border border-white/15 text-white/80 hover:text-white hover:bg-white/5"
                      onClick={() => onSetDefault(a.id)}
                    >
                      {t("account:addresses.setDefault", "Tornar padr√£o")}
                    </button>
                  )}
                  <button
                    className="px-3 py-2 rounded-lg border border-white/15 text-white/80 hover:text-white hover:bg-white/5"
                    onClick={() => onDelete(a.id)}
                  >
                    {t("account:addresses.remove", "Remover")}
                  </button>
                </div>
              </div>
            ))
          )}
        </div>
      </AccountLayout>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(ctx.req, ctx.res, authOptions);
  if (!session?.user?.id) {
    return { redirect: { destination: "/conta/login", permanent: false }, props: {} as any };
  }
  return {
    props: await serverSideTranslations(ctx.locale ?? "pt", ["common", "nav", "account"]),
  };
};



      üìÑ index.tsx

============================================================
FILE: src\pages\conta\index.tsx
============================================================
// INSANYCK STEP 8
// + INSANYCK STEP 9 (bloom sutil no wrapper interno; resto intacto)
import { GetServerSideProps } from "next";
import Head from "next/head";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../api/auth/[...nextauth]";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import AccountLayout from "@/components/AccountLayout";
import Link from "next/link";
import { prisma } from "@/lib/prisma";
import { useTranslation } from "next-i18next";
import { useRouter } from "next/router";
import { seoAccount } from "@/lib/seo";

type Props = {
  user: { name: string | null; email: string | null };
  lastOrders: { id: string; amountTotal: number }[];
};

export default function AccountHome({ user, lastOrders }: Props) {
  const { t } = useTranslation(["account"]);
  const router = useRouter();
  const seo = seoAccount(router.locale);

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, i) => (
          <meta key={i} {...tag} />
        ))}
        {seo.link.map((l, i) => (
          <link key={i} {...l} />
        ))}
      </Head>
      <AccountLayout titleKey="account:dashboard.title">
        {/* INSANYCK STEP 9 ‚Äî bloom sutil, sem alterar grid/tipografia */}
        <div className="insanyck-bloom insanyck-bloom--edge">
          <div className="space-y-6">
            <p className="text-white/80">
              {t("account:dashboard.hello", "Ol√°")},{" "}
              <span className="text-white font-medium">
                {user.name ?? user.email ?? ""}
              </span>
            </p>

            <div className="grid sm:grid-cols-2 gap-4">
              <div className="rounded-xl border border-white/10 p-4">
                <div className="text-white/70 text-sm">
                  {t("account:dashboard.lastOrders", "√öltimos pedidos")}
                </div>
                {lastOrders.length === 0 ? (
                  <div className="mt-2 text-white/60 text-sm">
                    {t(
                      "account:dashboard.noOrders",
                      "Voc√™ ainda n√£o tem pedidos."
                    )}
                  </div>
                ) : (
                  <ul className="mt-2 text-white/80 text-sm">
                    {lastOrders.map((o) => (
                      <li
                        key={o.id}
                        className="flex items-center justify-between py-1"
                      >
                        <span>#{o.id.slice(0, 8).toUpperCase()}</span>
                        <span>
                          {new Intl.NumberFormat("pt-BR", {
                            style: "currency",
                            currency: "BRL",
                          }).format(o.amountTotal / 100)}
                        </span>
                      </li>
                    ))}
                  </ul>
                )}
                <Link
                  href="/conta/pedidos"
                  className="inline-block mt-3 text-white underline underline-offset-4"
                >
                  {t("account:dashboard.viewAll", "Ver todos")}
                </Link>
              </div>

              <div className="rounded-xl border border-white/10 p-4">
                <div className="text-white/70 text-sm">
                  {t("account:dashboard.quick", "Acessos r√°pidos")}
                </div>
                <div className="mt-2 flex flex-wrap gap-2">
                  <Link
                    href="/conta/enderecos"
                    className="px-3 py-2 rounded-lg border border-white/15 text-white/80 hover:text-white hover:bg-white/5"
                  >
                    {t("account:nav.addresses", "Endere√ßos")}
                  </Link>
                  <Link
                    href="/favoritos"
                    className="px-3 py-2 rounded-lg border border-white/15 text-white/80 hover:text-white hover:bg-white/5"
                  >
                    {t("account:nav.wishlist", "Favoritos")}
                  </Link>
                </div>
              </div>
            </div>
          </div>
        </div>
        {/* FIM INSANYCK STEP 9 */}
      </AccountLayout>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<Props> = async (ctx) => {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(ctx.req, ctx.res, authOptions);
  if (!session?.user?.id) {
    return {
      redirect: { destination: "/conta/login", permanent: false },
      props: {} as any,
    };
  }
  const lastOrders = await prisma.order.findMany({
    where: { userId: (session.user as any).id },
    orderBy: { createdAt: "desc" },
    take: 3,
    select: { id: true, amountTotal: true },
  });

  return {
    props: {
      ...(await serverSideTranslations(ctx.locale ?? "pt", [
        "common",
        "nav",
        "account",
      ])),
      user: {
        name: session.user.name ?? null,
        email: session.user.email ?? null,
      },
      lastOrders,
    },
  };
};



      üìÑ login.tsx

============================================================
FILE: src\pages\conta\login.tsx
============================================================
// INSANYCK STEP 8
import { GetServerSideProps } from "next";
import Head from "next/head";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../api/auth/[...nextauth]";
import { signIn } from "next-auth/react";
import { useTranslation } from "next-i18next";
import { useRouter } from "next/router";
import { seoAccountLogin } from "@/lib/seo";

export default function LoginPage() {
  const { t } = useTranslation(["account"]);
  const router = useRouter();

  const onLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    // Exemplo: credentials fake (ajuste conforme seu [...nextauth])
    await signIn("credentials", { redirect: true, callbackUrl: "/conta" });
  };

  const seo = seoAccountLogin(router.locale);

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, i) => (
          <meta key={i} {...tag} />
        ))}
        {seo.link.map((l, i) => (
          <link key={i} {...l} />
        ))}
      </Head>
      <section className="pt-[120px] pb-16">
        <div className="mx-auto max-w-[480px] px-6">
          <div className="rounded-2xl border border-white/10 bg-black/40 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] p-6">
            <h1 className="text-2xl font-semibold text-white/90">{t("account:login.title", "Entrar")}</h1>
            <p className="mt-2 text-white/70">{t("account:login.subtitle", "Acesse sua conta INSANYCK")}</p>

            <form className="mt-6 space-y-4" onSubmit={onLogin}>
              <label className="block">
                <span className="text-white/70 text-sm">{t("account:login.email", "E-mail")}</span>
                <input className="mt-1 w-full bg-transparent border border-white/15 rounded-lg px-3 py-2 outline-none text-white placeholder:text-white/40 focus:border-white/30" type="email" required />
              </label>
              <label className="block">
                <span className="text-white/70 text-sm">{t("account:login.password", "Senha")}</span>
                <input className="mt-1 w-full bg-transparent border border-white/15 rounded-lg px-3 py-2 outline-none text-white placeholder:text-white/40 focus:border-white/30" type="password" required />
              </label>
              <button className="w-full px-3 py-2 rounded-lg border border-white/15 text-white/90 hover:text-black hover:bg-white transition">
                {t("account:login.submit", "Entrar")}
              </button>
            </form>
          </div>
        </div>
      </section>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(ctx.req, ctx.res, authOptions);
  if (session?.user?.id) {
    return { redirect: { destination: "/conta", permanent: false }, props: {} as any };
  }
  return {
    props: await serverSideTranslations(ctx.locale ?? "pt", ["common", "nav", "account"]),
  };
};



      üìÑ pedidos.tsx

============================================================
FILE: src\pages\conta\pedidos.tsx
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Enhanced orders page with table and states
import { GetServerSideProps } from "next";
import Head from "next/head";
import { getServerSession } from "next-auth/next";
import { createAuthOptions } from "../api/auth/[...nextauth]";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import { motion } from "framer-motion";
import { Package, Truck, CheckCircle, Clock, Eye } from "lucide-react";
import Link from "next/link";

import AccountLayout from "@/components/AccountLayout";
import OrdersEmpty from "@/components/EmptyStates/OrdersEmpty";
import { Button } from "@/components/ui/Button";
import useSWR from "swr";

type Order = {
  id: string;
  status: string;
  amountTotal: number;
  createdAt: string;
  items: { id: string; title: string; qty: number; priceCents: number }[];
};

const fetcher = (url: string) => fetch(url).then((r) => r.json());

export default function OrdersPage() {
  const { t } = useTranslation(["account", "common"]);
  const { data, isLoading } = useSWR<{ orders: Order[] }>("/api/account/orders", fetcher);
  const orders = data?.orders ?? [];

  const getStatusFromOrder = (order: Order): 'preparing' | 'shipped' | 'delivered' => {
    // Map order status to our predefined statuses
    const status = order.status.toLowerCase();
    if (status.includes('delivered') || status.includes('completed')) return 'delivered';
    if (status.includes('shipped') || status.includes('transit')) return 'shipped';
    return 'preparing';
  };

  const getStatusIcon = (status: 'preparing' | 'shipped' | 'delivered') => {
    switch (status) {
      case 'preparing':
        return <Clock className="h-4 w-4" />;
      case 'shipped':
        return <Truck className="h-4 w-4" />;
      case 'delivered':
        return <CheckCircle className="h-4 w-4" />;
      default:
        return <Package className="h-4 w-4" />;
    }
  };

  const getStatusText = (status: 'preparing' | 'shipped' | 'delivered') => {
    switch (status) {
      case 'preparing':
        return t('account:orders.status.preparing', 'Em preparo');
      case 'shipped':
        return t('account:orders.status.shipped', 'Enviado');
      case 'delivered':
        return t('account:orders.status.delivered', 'Entregue');
      default:
        return status;
    }
  };

  const getStatusColor = (status: 'preparing' | 'shipped' | 'delivered') => {
    switch (status) {
      case 'preparing':
        return 'text-yellow-400 bg-yellow-400/10 border-yellow-400/20';
      case 'shipped':
        return 'text-blue-400 bg-blue-400/10 border-blue-400/20';
      case 'delivered':
        return 'text-green-400 bg-green-400/10 border-green-400/20';
      default:
        return 'text-gray-400 bg-gray-400/10 border-gray-400/20';
    }
  };

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('pt-BR', {
      style: 'currency',
      currency: 'BRL',
    }).format(price / 100);
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('pt-BR', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
    });
  };

  if (orders.length === 0 && !isLoading) {
    return (
      <>
        <Head>
          <title>{t('account:orders.title', 'Meus Pedidos')} ‚Äî INSANYCK</title>
        </Head>
        <AccountLayout titleKey="account:orders.title">
          <OrdersEmpty />
        </AccountLayout>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>{t('account:orders.title', 'Meus Pedidos')} ‚Äî INSANYCK</title>
      </Head>
      
      <AccountLayout titleKey="account:orders.title">
        <div className="space-y-6">
          {/* Header */}
          <div className="flex items-center justify-between">
            <p className="text-white/60">
              {t('account:orders.subtitle', 'Acompanhe seus pedidos e hist√≥rico de compras')}
            </p>
            {!isLoading && (
              <span className="text-sm text-white/40">
                {orders.length} {orders.length === 1 ? 'pedido' : 'pedidos'}
              </span>
            )}
          </div>

          {/* Loading State */}
          {isLoading && (
            <div className="flex items-center justify-center py-8">
              <div className="animate-spin h-6 w-6 border-2 border-white/20 border-t-white rounded-full" />
            </div>
          )}

          {!isLoading && orders.length > 0 && (
            <>
              {/* Desktop Table */}
              <div className="hidden md:block overflow-hidden">
                <table className="w-full">
                  <caption className="sr-only">
                    {t('account:orders.tableCaption', 'Lista de pedidos realizados')}
                  </caption>
                  <thead>
                    <tr className="border-b border-white/10">
                      <th scope="col" className="text-left py-3 px-4 text-sm font-medium text-white/60">
                        {t('account:orders.table.order', 'Pedido')}
                      </th>
                      <th scope="col" className="text-left py-3 px-4 text-sm font-medium text-white/60">
                        {t('account:orders.table.date', 'Data')}
                      </th>
                      <th scope="col" className="text-left py-3 px-4 text-sm font-medium text-white/60">
                        {t('account:orders.table.status', 'Status')}
                      </th>
                      <th scope="col" className="text-left py-3 px-4 text-sm font-medium text-white/60">
                        {t('account:orders.table.total', 'Total')}
                      </th>
                      <th scope="col" className="text-right py-3 px-4 text-sm font-medium text-white/60">
                        {t('account:orders.table.actions', 'A√ß√µes')}
                      </th>
                    </tr>
                  </thead>
                  <tbody className="divide-y divide-white/10">
                    {orders.map((order, index) => {
                      const status = getStatusFromOrder(order);
                      return (
                        <motion.tr
                          key={order.id}
                          initial={{ opacity: 0, y: 20 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: index * 0.1 }}
                          className="hover:bg-white/5 transition-colors"
                        >
                          <td className="py-4 px-4">
                            <div>
                              <div className="font-medium text-white">
                                #{order.id.slice(0, 8).toUpperCase()}
                              </div>
                              <div className="text-sm text-white/60">
                                {order.items.length} {order.items.length === 1 ? 'item' : 'itens'}
                              </div>
                            </div>
                          </td>
                          <td className="py-4 px-4 text-white/80">
                            {formatDate(order.createdAt)}
                          </td>
                          <td className="py-4 px-4">
                            <span className={`inline-flex items-center gap-2 px-3 py-1 rounded-full text-xs font-medium border ${getStatusColor(status)}`}>
                              {getStatusIcon(status)}
                              {getStatusText(status)}
                            </span>
                          </td>
                          <td className="py-4 px-4 font-medium text-white">
                            {formatPrice(order.amountTotal)}
                          </td>
                          <td className="py-4 px-4 text-right">
                            <Link 
                              href={`/pedido/${order.id}`}
                              className="inline-flex items-center gap-2 text-sm text-white/70 hover:text-white transition-colors"
                            >
                              <Eye className="h-4 w-4" />
                              {t('account:orders.viewOrder', 'Ver detalhes')}
                            </Link>
                          </td>
                        </motion.tr>
                      );
                    })}
                  </tbody>
                </table>
              </div>

              {/* Mobile Cards */}
              <div className="md:hidden space-y-4">
                {orders.map((order, index) => {
                  const status = getStatusFromOrder(order);
                  return (
                    <motion.div
                      key={order.id}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      className="bg-black/20 border border-white/10 rounded-2xl p-4 hover:bg-black/30 transition-colors"
                    >
                      <div className="flex items-start justify-between mb-3">
                        <div>
                          <h3 className="font-medium text-white">
                            #{order.id.slice(0, 8).toUpperCase()}
                          </h3>
                          <p className="text-sm text-white/60">
                            {formatDate(order.createdAt)}
                          </p>
                        </div>
                        <span className={`inline-flex items-center gap-2 px-3 py-1 rounded-full text-xs font-medium border ${getStatusColor(status)}`}>
                          {getStatusIcon(status)}
                          {getStatusText(status)}
                        </span>
                      </div>

                      <div className="flex items-center justify-between">
                        <div>
                          <p className="text-sm text-white/60">
                            {order.items.length} {order.items.length === 1 ? 'item' : 'itens'}
                          </p>
                          <p className="font-medium text-white">
                            {formatPrice(order.amountTotal)}
                          </p>
                        </div>
                        <Link href={`/pedido/${order.id}`}>
                          <Button variant="ghost" size="sm">
                            <Eye className="h-4 w-4 mr-2" />
                            {t('account:orders.viewOrder', 'Ver')}
                          </Button>
                        </Link>
                      </div>
                    </motion.div>
                  );
                })}
              </div>
            </>
          )}
        </div>
      </AccountLayout>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const authOptions = await createAuthOptions();
  const session = await getServerSession(ctx.req, ctx.res, authOptions);
  if (!session?.user?.id) {
    return { redirect: { destination: "/conta/login", permanent: false }, props: {} as any };
  }
  return {
    props: await serverSideTranslations(ctx.locale ?? "pt", ["common", "nav", "account"]),
  };
};



    üìÑ favoritos.tsx

============================================================
FILE: src\pages\favoritos.tsx
============================================================
// INSANYCK STEP 9 ‚Äî Favoritos com bloom + skeleton e mapeamento correto pro ProductGrid
import Head from "next/head";
import { GetStaticProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import React, { useEffect, useState } from "react";
import { useTranslation } from "next-i18next";
import ProductGrid from "@/components/ProductGrid";
import Skeleton from "@/components/Skeleton";
import { useWishlist } from "@/store/wishlist";
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Import WishlistEmpty para teste est√°vel
import WishlistEmpty from "@/components/EmptyStates/WishlistEmpty";
import { seoWishlist } from "@/lib/seo";
import { useRouter } from "next/router";

export default function FavoritosPage() {
  const { t } = useTranslation(["wishlist", "plp"]);
  const router = useRouter();
  const [hydrated, setHydrated] = useState(false);
  const items = useWishlist((s) => s.items);

  useEffect(() => setHydrated(true), []);

  // Adapta ao ProductCard/Grid (mesmo shape dos mocks)
  const products = items.map((it) => ({
    slug: it.slug,
    title: it.title,
    price: new Intl.NumberFormat("pt-BR", { style: "currency", currency: "BRL" }).format(
      (it.priceCents || 0) / 100
    ),
    images: { front: it.image },
    thumbs: { front: it.image },
    status: "normal" as const,
  }));

  const seo = seoWishlist(router.locale);

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, i) => (
          <meta key={i} {...tag} />
        ))}
        {seo.link.map((l, i) => (
          <link key={i} {...l} />
        ))}
        <script
          type="application/ld+json"
          // eslint-disable-next-line react/no-danger
          dangerouslySetInnerHTML={{
            __html: JSON.stringify({
              "@context": "https://schema.org",
              "@type": "ItemList",
              itemListElement: items.map((p, idx) => ({
                "@type": "ListItem",
                position: idx + 1,
                url: `/produto/${p.slug}`,
                name: p.title,
                image: p.image || "",
              })),
            }),
          }}
        />
      </Head>

      <main className="pt-[120px] insanyck-bloom insanyck-bloom--soft">
        <div className="mx-auto max-w-[1280px] px-6">
          <h1 className="text-white/90 text-2xl font-semibold">
            {t("wishlist:title", "Favoritos")}{" "}
            {hydrated ? <span className="text-white/50">({items.length})</span> : null}
          </h1>

          {!hydrated ? (
            <div className="mt-8 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
              {Array.from({ length: 8 }).map((_, i) => (
                <article key={i} className="rounded-2xl border border-white/10 bg-black/30 p-3">
                  <Skeleton.Thumb />
                  <div className="mt-3 space-y-2">
                    <Skeleton.TextLg className="w-4/5" />
                    <Skeleton.Text className="w-2/5" />
                  </div>
                </article>
              ))}
            </div>
          ) : products.length === 0 ? (
            <div data-testid="empty-wishlist" className="mt-8">
              <WishlistEmpty />
            </div>
          ) : (
            <div data-testid="wishlist-items" className="mt-8">
              <ProductGrid items={products as any} />
            </div>
          )}
        </div>
      </main>
    </>
  );
}

export const getStaticProps: GetStaticProps = async ({ locale }) => {
  return {
    props: {
      ...(await serverSideTranslations(locale ?? "pt", ["common", "nav", "plp", "wishlist", "ui"])),
      revalidate: 60,
    },
  };
};



    üìÑ index.tsx

============================================================
FILE: src\pages\index.tsx
============================================================
// INSANYCK STEP 4
import Head from "next/head";
import type { GetStaticProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useRouter } from "next/router";
import { useTranslation } from "next-i18next";
import Navbar from "../components/Navbar";
import HeroHome from "../sections/HeroHome";
import { seoHome } from "../lib/seo";

export default function HomePage() {
  const { locale } = useRouter();
  const { t } = useTranslation('home');
  const seo = seoHome(locale);

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, index) => (
          <meta key={index} {...tag} />
        ))}
        {seo.link.map((link, index) => (
          <link key={index} {...link} />
        ))}
        {seo.jsonLd.map((schema, index) => (
          <script
            key={index}
            type="application/ld+json"
            dangerouslySetInnerHTML={{ __html: JSON.stringify(schema) }}
          />
        ))}
      </Head>
      {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Skip link para navega√ß√£o A11y + neutraliza√ß√£o de layout */}
      <a 
        href="#conteudo" 
        className="sr-only focus:not-sr-only focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 absolute left-2 top-2 z-50 px-3 py-2 rounded-2xl bg-black/60 backdrop-blur text-white"
      >
        Pular para conte√∫do
      </a>
      <Navbar />
      <main id="conteudo" className="pt-24">
        {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî H1 sr-only para hierarquia A11y */}
        <h1 className="sr-only">{t('hero.title', 'INSANYCK ‚Äî Essential luxury in motion')}</h1>
        <HeroHome />
      </main>
    </>
  );
}

export const getStaticProps: GetStaticProps = async ({ locale }) => {
  const lng = locale || 'pt';
  return {
    props: {
      ...(await serverSideTranslations(lng, ['common', 'nav', 'home', 'product'])),
    },
    revalidate: 60,
  };
};



    üìÑ login.tsx

============================================================
FILE: src\pages\login.tsx
============================================================
// src/pages/login.tsx
import { useState } from "react";
import { signIn } from "next-auth/react";
import { useRouter } from "next/router";

Login.getInitialProps = async () => {
  return {};
};

export default function Login() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [erro, setErro] = useState("");
  const router = useRouter();

  // Lida com erro enviado pela URL (?error=...)
  const errorParam = router.query.error;
  useState(() => {
    if (errorParam) setErro("E-mail ou senha inv√°lidos.");
  });

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setErro("");
    const res = await signIn("credentials", {
      redirect: false,
      email,
      password,
    });
    if (res?.ok) {
      router.push("/"); // ou redirecione para onde quiser
    } else {
      setErro("E-mail ou senha inv√°lidos.");
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-neutral-900 to-black">
      <div className="bg-neutral-900 border border-yellow-400/30 rounded-2xl p-8 w-full max-w-md shadow-2xl">
        <h2 className="text-3xl font-bold text-yellow-400 mb-6 text-center">Entrar na INSANYCK</h2>
        <button
          onClick={() => signIn("google", { callbackUrl: "/" })}
          className="w-full flex items-center justify-center gap-2 bg-yellow-400 hover:bg-yellow-300 text-black font-bold py-3 rounded-xl transition mb-6"
        >
          <svg width="22" height="22" viewBox="0 0 48 48"><g><path fill="#4285F4" d="M44.5 20H24v8.5h11.7C34.4 33.8 29.7 37 24 37c-7.2 0-13-5.8-13-13s5.8-13 13-13c3.1 0 6 .9 8.3 2.7l6.3-6.3C34.8 4.5 29.7 2.5 24 2.5 12.7 2.5 3.5 11.7 3.5 23S12.7 43.5 24 43.5c10.4 0 20.1-7.7 20.1-20 0-1.3-.1-2.2-.3-3.5z"></path><path fill="#34A853" d="M6.7 14.1l7 5.1C15.3 16.5 19.3 13 24 13c3.1 0 6 .9 8.3 2.7l6.3-6.3C34.8 4.5 29.7 2.5 24 2.5c-7.8 0-14.5 4.6-17.8 11.6z"></path><path fill="#FBBC05" d="M24 43.5c5.5 0 10.4-1.8 14.1-5l-6.5-5.3c-2 1.5-4.7 2.6-7.6 2.6-5.8 0-10.6-3.9-12.3-9.1l-7 5.4C8.6 39.3 15.7 43.5 24 43.5z"></path><path fill="#EA4335" d="M44.5 20H24v8.5h11.7C34.4 33.8 29.7 37 24 37c-7.2 0-13-5.8-13-13s5.8-13 13-13c3.1 0 6 .9 8.3 2.7l6.3-6.3C34.8 4.5 29.7 2.5 24 2.5c-7.8 0-14.5 4.6-17.8 11.6z"></path></g></svg>
          Entrar com Google
        </button>

        <div className="mb-6 text-center text-gray-400">ou entre com e-mail</div>

        <form onSubmit={handleSubmit} className="flex flex-col gap-4">
          <input
            type="email"
            required
            placeholder="Seu e-mail"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            className="p-3 rounded-xl bg-neutral-800 border border-neutral-700 text-white"
          />
          <input
            type="password"
            required
            placeholder="Sua senha"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="p-3 rounded-xl bg-neutral-800 border border-neutral-700 text-white"
          />
          {erro && <div className="text-red-500 font-bold text-center">{erro}</div>}
          <button
            type="submit"
            className="w-full bg-yellow-400 hover:bg-yellow-300 text-black font-bold py-3 rounded-xl transition"
          >
            Entrar
          </button>
        </form>
      </div>
    </div>
  );
}



    üìÑ loja.tsx

============================================================
FILE: src\pages\loja.tsx
============================================================
// INSANYCK STEP 10 ‚Äî PLP lendo DB com filtros reais
// INSANYCK STEP 5 + STEP 9 (bloom sutil) + DB integration

import Head from "next/head";
import { seoPLP } from "@/lib/seo";
import { GetServerSideProps, InferGetServerSidePropsType } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import { useRouter } from "next/router";
import { useState, useEffect, useCallback } from "react";
import ProductGrid from "@/components/ProductGrid";

interface Product {
  id: string;
  title: string;
  slug: string;
  description: string | null;
  image: string | undefined;
  pricing: {
    minCents: number;
    maxCents: number;
    currency: string;
  };
  availability: {
    inStock: boolean;
    totalStock: number;
  };
  variantCount: number;
  isFeatured: boolean;
}

interface Category {
  id: string;
  name: string;
  slug: string;
}

interface LojaProps {
  initialProducts: Product[];
  categories: Category[];
  totalProducts: number;
}

export default function Loja({
  initialProducts,
  categories,
  totalProducts,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const { t } = useTranslation(["plp", "catalog"]);
  const router = useRouter();
  const [products, setProducts] = useState(initialProducts);
  const [loading, setLoading] = useState(false);

  const { category, size, color, inStock, sort = "newest" } = router.query;
  // Normalize category param for SEO
  const categorySlug = Array.isArray(category) ? category[0] : category;
  const categoryName = categories.find(c => c.slug === (categorySlug ?? ""))?.name;

  // INSANYCK STEP 10 ‚Äî Normalizar tipos de query (evitar string[])
  const asStr = (v: string | string[] | undefined) => Array.isArray(v) ? v[0] : (v ?? '');

  const fetchProducts = useCallback(async () => {
    setLoading(true);
    try {
      const params = new URLSearchParams();
      
      if (category) params.set("category", asStr(category));
      if (size)     params.set("size",     asStr(size));
      if (color)    params.set("color",    asStr(color));
      if (inStock)  params.set("inStock",  asStr(inStock));
      if (sort)     params.set("sort",     asStr(sort));

      const response = await fetch(`/api/products?${params}`);
      if (response.ok) {
        const data = await response.json();
        setProducts(data.products);
      }
    } catch (error) {
      console.error("Error fetching products:", error);
    } finally {
      setLoading(false);
    }
  }, [category, color, inStock, size, sort]);

  useEffect(() => {
    fetchProducts();
  }, [router.query, fetchProducts]);

  const updateFilter = (key: string, value: string | null) => {
    const newQuery = { ...router.query };
    
    if (value) {
      newQuery[key] = value;
    } else {
      delete newQuery[key];
    }

    router.push({ pathname: router.pathname, query: newQuery }, undefined, {
      shallow: true,
    });
  };

  const isFilterActive = (key: string, value: string) => {
    return router.query[key] === value;
  };

  // INSANYCK STEP 10 ‚Äî Converter produtos para formato do ProductGrid existente
  const gridProducts = products.map((product) => ({
    id: product.id,
    slug: product.slug,
    title: product.title,
    price: (product.pricing.minCents / 100).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }),
    status: product.availability.inStock ? undefined : ("soldout" as const),
    images: {
      front: product.image,
    },
    thumbs: {
      front: product.image,
    },
  }));

  return (
    <>
      <Head>
        {(() => {
          const seo = seoPLP({
            locale: router.locale ?? "pt",
            categorySlug: categorySlug ?? undefined,
            categoryName,
            productCount: totalProducts,
          });
          return (
            <>
              <title>{seo.title}</title>
              {seo.meta.map((tag, i) => <meta key={i} {...tag} />)}
              {seo.link.map((l, i) => <link key={i} {...l} />)}
              {seo.jsonLd.map((schema, i) => (
                <script key={i} type="application/ld+json"
                  dangerouslySetInnerHTML={{ __html: JSON.stringify(schema) }} />
              ))}
            </>
          );
        })()}
      </Head>

      {/* INSANYCK STEP 9 ‚Äî bloom sutil; n√£o altera layout/tipografia */}
      <main className="mx-auto max-w-[1200px] px-6 pt-24 pb-16 insanyck-bloom insanyck-bloom--soft">
        <h1 className="text-white/95 text-[40px] font-semibold tracking-[-0.01em]">
          {t("plp:title", "Loja INSANYCK")}
        </h1>
        <p className="mt-2 text-white/60">
          {t("plp:subtitle", `${totalProducts} produto(s) ‚Ä¢ Vidro leve ‚Ä¢ borda hairline`)}
        </p>

        {/* INSANYCK STEP 10 ‚Äî Filtros reais funcionais */}
        <div className="mt-8 flex flex-wrap items-center gap-3 text-white/75">
          {/* Categorias */}
          <label htmlFor="category-filter" className="sr-only">
            {t("catalog:filters.category_label", "Filtrar por categoria")}
          </label>
          <select
            id="category-filter"
            value={Array.isArray(category) ? category[0] : (category ?? "")}
            onChange={(e) => updateFilter("category", e.target.value || null)}
            className="rounded-full px-4 py-2 border border-white/15 bg-black/50 hover:bg-white/5 text-white"
            aria-label={t("catalog:filters.category_label", "Filtrar por categoria")}
          >
            <option value="">{t("catalog:filters.all_categories", "Todas Categorias")}</option>
            {categories.map((cat) => (
              <option key={cat.id} value={cat.slug}>
                {cat.name}
              </option>
            ))}
          </select>

          {/* Tamanhos */}
          {["P", "M", "G", "EG"].map((sizeOption) => (
            <button
              key={sizeOption}
              onClick={() =>
                updateFilter("size", isFilterActive("size", sizeOption) ? null : sizeOption)
              }
              className={`rounded-full px-3 py-2 border border-white/15 hover:bg-white/5 transition-colors ${
                isFilterActive("size", sizeOption) ? "bg-white/20 text-white" : ""
              }`}
            >
              {sizeOption}
            </button>
          ))}

          {/* Filtro de estoque */}
          <button
            onClick={() =>
              updateFilter("inStock", isFilterActive("inStock", "true") ? null : "true")
            }
            className={`rounded-full px-4 py-2 border border-white/15 hover:bg-white/5 transition-colors ${
              isFilterActive("inStock", "true") ? "bg-white/20 text-white" : ""
            }`}
          >
            {t("catalog:filters.in_stock", "Em Estoque")}
          </button>

          {/* Ordena√ß√£o */}
          <label htmlFor="sort-filter" className="sr-only">
            {t("catalog:sort.label", "Ordenar por")}
          </label>
          <select
            id="sort-filter"
            value={String(sort ?? 'newest')}
            onChange={(e) => updateFilter("sort", e.target.value)}
            className="rounded-full px-4 py-2 border border-white/15 bg-black/50 hover:bg-white/5 text-white"
            aria-label={t("catalog:sort.label", "Ordenar por")}
          >
            <option value="newest">{t("catalog:sort.newest", "Mais Recentes")}</option>
            <option value="name">{t("catalog:sort.name", "Nome")}</option>
            <option value="price_asc">{t("catalog:sort.price_asc", "Menor Pre√ßo")}</option>
            <option value="price_desc">{t("catalog:sort.price_desc", "Maior Pre√ßo")}</option>
          </select>
        </div>

        <div className="mt-8">
          {loading ? (
            <div className="flex justify-center py-12">
              <div className="animate-spin h-8 w-8 border-2 border-white/20 border-t-white rounded-full"></div>
            </div>
          ) : (
            <ProductGrid items={gridProducts} />
          )}
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<LojaProps> = async ({
  locale,
  query,
  res
}) => {
  // INSANYCK STEP 10 ‚Äî ISR usando res.revalidate (Pages Router)
  res.setHeader(
    'Cache-Control',
    'public, s-maxage=600, stale-while-revalidate=86400'
  );

  try {
    const { category, size, color, inStock, sort = "newest" } = query;

    // INSANYCK STEP 10 ‚Äî Import din√¢mico (server-only)  
    const { prisma } = await import('@/lib/prisma');

    // Construir filtros
    const where: any = { status: "active" };

    if (category) {
      where.category = { slug: category as string };
    }

    if (size || color || inStock === "true") {
      where.variants = {
        some: {
          status: "active",
          ...(size ? {
            options: {
              some: {
                optionValue: {
                  option: { slug: "size" },
                  value: size as string,
                },
              },
            },
          } : {}),
          ...(color ? {
            options: {
              some: {
                optionValue: {
                  option: { slug: "color" },
                  slug: color as string,
                },
              },
            },
          } : {}),
          ...(inStock === "true" ? {
            inventory: { quantity: { gt: 0 } },
          } : {}),
        },
      };
    }

    // Buscar produtos e categorias
    const [products, categories, totalProducts] = await Promise.all([
      prisma.product.findMany({
        where,
        include: {
          category: true,
          images: {
            where: { order: 1 },
            take: 1,
          },
          variants: {
            where: { status: "active" },
            include: {
              price: true,
              inventory: true,
            },
          },
        },
        orderBy: sort === "name" ? { title: "asc" } : { updatedAt: "desc" },
        take: 12,
      }),
      prisma.category.findMany({
        orderBy: { name: "asc" },
      }),
      prisma.product.count({ where }),
    ]);

    // Transformar produtos
    const transformedProducts = products.map((product) => {
      const activeVariants = product.variants.filter((v) => v.status === "active");
      const prices = activeVariants.map((v) => v.price?.cents || 0).filter((p) => p > 0);
      
      const minPrice = prices.length > 0 ? Math.min(...prices) : 0;
      const maxPrice = prices.length > 0 ? Math.max(...prices) : 0;
      
      const totalStock = activeVariants.reduce((sum, v) => {
        const available = (v.inventory?.quantity || 0) - (v.inventory?.reserved || 0);
        return sum + Math.max(0, available);
      }, 0);

      return {
        id: product.id,
        title: product.title,
        slug: product.slug,
        description: product.description,
        image: product.images[0]?.url,
        pricing: {
          minCents: minPrice,
          maxCents: maxPrice,
          currency: "BRL",
        },
        availability: {
          inStock: totalStock > 0,
          totalStock,
        },
        variantCount: activeVariants.length,
        isFeatured: product.isFeatured,
      };
    });

    return {
      props: {
        initialProducts: transformedProducts,
        categories: categories.map((cat) => ({
          id: cat.id,
          name: cat.name,
          slug: cat.slug,
        })),
        totalProducts,
        ...(await serverSideTranslations(locale ?? "pt", ["common", "nav", "plp", "catalog"])),
      },
    };
  } catch (error) {
    console.error("Error in getServerSideProps:", error);
    return {
      props: {
        initialProducts: [],
        categories: [],
        totalProducts: 0,
        ...(await serverSideTranslations(locale ?? "pt", ["common", "nav", "plp", "catalog"])),
      },
    };
  }
};



    üìÅ pedido/
      üìÑ [id].tsx

============================================================
FILE: src\pages\pedido\[id].tsx
============================================================
// INSANYCK STEP 7.1 ‚Äî Pedido com halo sutil
import React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";

export default function Pedido() {
  const { t } = useTranslation(["order"]);
  const { query } = useRouter();
  const id = String(query.id || "");

  const jsonLd = {
    "@context": "https://schema.org",
    "@type": "Order",
    orderNumber: id || "mock",
    merchant: { "@type": "Organization", name: "INSANYCK" },
    orderStatus: "https://schema.org/OrderProcessing",
  };

  return (
    <>
      <Head>
        <title>{`${t("order:confirmed", "Pedido confirmado")} ‚Äî INSANYCK`}</title>
        <script
          type="application/ld+json"
          // eslint-disable-next-line react/no-danger
          dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
        />
      </Head>
      <main className="relative pt-[120px] pb-20 px-6 mx-auto max-w-[1200px] section-halo">
        <div
          aria-hidden
          className="pointer-events-none absolute inset-x-0 -top-8 h-16 -z-10"
          style={{
            background:
              "radial-gradient(60% 100% at 50% 0%, rgba(255,255,255,0.14) 0%, rgba(255,255,255,0.06) 30%, rgba(255,255,255,0.0) 70%)",
          }}
        />
        <h1 className="text-white text-3xl font-semibold tracking-wide">
          {t("order:confirmed", "Pedido confirmado")}
        </h1>
        <p className="mt-2 text-white/70">
          {t("order:id", "ID do pedido")}:{" "}
          <span className="text-white/90 font-mono">{id}</span>
        </p>

        <div className="mt-8 space-x-3">
          <Link
            href="/loja"
            className="inline-block rounded-xl px-4 py-2 font-semibold border border-white/15 text-white hover:bg-white/5 transition"
          >
            {t("order:viewStore", "Ver loja")}
          </Link>
          <Link
            href="#"
            className="inline-block rounded-xl px-4 py-2 font-semibold bg-white text-black hover:bg-white/90 transition"
          >
            {t("order:trackOrder", "Acompanhar pedido")}
          </Link>
        </div>
      </main>
    </>
  );
}

export async function getStaticPaths() {
  return { paths: [], fallback: "blocking" };
}

export async function getStaticProps({ locale }: { locale: string }) {
  return {
    props: {
      ...(await serverSideTranslations(locale ?? "pt", ["order", "nav", "common"])),
    },
  };
}



    üìÑ Products.tsx

============================================================
FILE: src\pages\Products.tsx
============================================================
import React from "react";
import dynamic from "next/dynamic";

const ProductCard3D = dynamic(
  () => import("@/components/three/ProductCard3D").then((mod) => ({ default: mod.ProductCard3D })),
  {
    ssr: false,
    loading: () => (
      <div className="bg-gray-900 rounded-xl p-6 h-96 flex items-center justify-center">
        <div className="text-yellow-400 font-bold animate-pulse">Carregando...</div>
      </div>
    ),
  }
);

const produtos3D = [
  {
    glbUrl: "/assets/models/oversized_classic.glb",
    image: "/assets/oversized_classic.jpg",
    name: "Oversized Classic",
    price: "R$ 199,00",
    isNew: true,
    isFeatured: true,
  },
  {
    glbUrl: "/assets/models/regata_essential.glb",
    image: "/assets/regata_essential.jpg",
    name: "Regata Essential",
    price: "R$ 179,00",
    isNew: true,
    isFeatured: false,
  },
];

Products.getInitialProps = async () => {
  return {};
};

export default function Products() {
  return (
    <section className="bg-black min-h-screen py-8">
      <h1 className="text-center text-3xl text-yellow-400 font-black mb-10 tracking-widest">
        COLE√á√ÉO INSANYCK
      </h1>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10 w-full max-w-7xl mx-auto">
        {produtos3D.map((produto, i) => (
          <ProductCard3D
            key={i}
            glbUrl={produto.glbUrl}
            image={produto.image}
            name={produto.name}
            price={produto.price}
            isNew={produto.isNew}
            isFeatured={produto.isFeatured}
            onDetails={() => alert(`Detalhes do produto: ${produto.name}`)}
          />
        ))}
      </div>
    </section>
  );
}



    üìÅ produto/
      üìÑ [slug].tsx

============================================================
FILE: src\pages\produto\[slug].tsx
============================================================
// INSANYCK STEP 10 ‚Äî PDP robusto (SSR seguro + mapeamento compat√≠vel)
import Head from "next/head";
import Link from "next/link";
import { GetServerSideProps, InferGetServerSidePropsType } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import { useState } from "react";
import { useRouter } from "next/router";
import dynamic from "next/dynamic";
import AddToCartButton from "@/components/AddToCartButton";
import PdpGallery from "@/components/PdpGallery";

const VariantSelector = dynamic(() => import("@/components/VariantSelector"), {
  ssr: true,
  loading: () => <div className="h-[120px] w-full animate-pulse bg-white/5 rounded-xl" />,
});
import { seoPDP } from "@/lib/seo";

type OptionValue = { slug: string; name: string; value: string };
type Option = {
  slug: string;
  name: string;
  type?: "color" | "size" | "select";
  values: OptionValue[];
};

type PDPVariant = {
  id: string;
  sku: string;
  title?: string;
  priceCents: number;
  currency: string;
  inventory: { quantity: number; reserved: number; available: number };
  options: { option: string; value: string }[];
};

type PDPProps = {
  product: {
    id: string;
    slug: string;
    title: string;
    description: string | null;
    image: string | null;
  };
  options: Option[];
  variants: PDPVariant[];
};

export default function ProdutoPage({
  product,
  options,
  variants,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const { t } = useTranslation(["pdp", "common", "cart"]);
  const router = useRouter();
  const [selectedVariant, setSelectedVariant] = useState<PDPVariant | null>(null);

  const handleVariantChange = (variant: PDPVariant | null) => {
    setSelectedVariant(variant);
  };

  const displayPrice = selectedVariant
    ? (selectedVariant.priceCents / 100).toLocaleString("pt-BR", {
        style: "currency",
        currency: selectedVariant.currency,
      })
    : variants.length > 0
      ? (variants[0].priceCents / 100).toLocaleString("pt-BR", {
          style: "currency",
          currency: variants[0].currency,
        })
      : "";

  const seo = seoPDP(
    {
      title: product.title,
      description: product.description || undefined,
      images: product.image ? [product.image] : [],
      slug: product.slug,
      price: selectedVariant?.priceCents
        ? selectedVariant.priceCents / 100
        : (variants[0]?.priceCents || 0) / 100,
      currency: selectedVariant?.currency || variants[0]?.currency || "BRL",
      inStock:
        (selectedVariant?.inventory?.available || 0) > 0 ||
        variants.some((v) => (v.inventory?.available || 0) > 0),
      sku: selectedVariant?.sku || variants[0]?.sku,
    },
    router.locale
  );

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, i) => (
          <meta key={i} {...tag} />
        ))}
        {seo.link.map((l, i) => (
          <link key={i} {...l} />
        ))}
        {seo.jsonLd.map((schema, i) => (
          <script
            key={i}
            type="application/ld+json"
            dangerouslySetInnerHTML={{ __html: JSON.stringify(schema) }}
          />
        ))}
      </Head>

      <main className="mx-auto max-w-[1200px] px-6 pt-24 pb-16 insanyck-bloom insanyck-bloom--soft">
        {/* Link voltar */}
        <div className="mb-8">
          <Link
            href="/loja"
            prefetch={true}
            className="text-white/80 underline underline-offset-4 hover:text-white transition"
          >
            ‚Üê {t("common:back", "Voltar para loja")}
          </Link>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-12">
          {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî PdpGallery com 3D fallback para zero CLS */}
          <PdpGallery product={product} />

          {/* Detalhes */}
          <div className="space-y-6">
            <div>
              <h1 className="text-white text-3xl font-semibold tracking-tight">{product.title}</h1>
              {product.description && (
                <p className="text-white/70 mt-3 text-lg">{product.description}</p>
              )}
            </div>

            {displayPrice && (
              <div className="text-white text-2xl font-semibold">{displayPrice}</div>
            )}

            {/* Seletor de Variantes */}
            {options.length > 0 && variants.length > 0 && (
              <div className="space-y-6">
                <VariantSelector
                  options={options}
                  variants={variants}
                  onVariantChange={handleVariantChange}
                />
              </div>
            )}

            {/* A√ß√µes */}
            <div className="flex items-center gap-4 pt-4">
              {selectedVariant && (
                <AddToCartButton
                  product={{
                    slug: product.slug,
                    title: product.title,
                    image: product.image || undefined,
                    variantId: selectedVariant.id,
                    sku: selectedVariant.sku,
                    priceCents: selectedVariant.priceCents,
                    currency: selectedVariant.currency,
                  }}
                  className="bg-white text-black rounded-xl px-8 py-3 font-semibold hover:brightness-95 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 transition flex-1"
                >
                  {t("cart:addToCart", "Adicionar ao carrinho")}
                </AddToCartButton>
              )}

              {!selectedVariant && variants.length > 0 && (
                <div className="flex-1 bg-white/10 text-white/60 rounded-xl px-8 py-3 font-semibold text-center">
                  {t("pdp:selectVariant", "Selecione as op√ß√µes")}
                </div>
              )}

              {variants.length === 0 && (
                <div className="flex-1 bg-white/10 text-white/60 rounded-xl px-8 py-3 font-semibold text-center">
                  {t("pdp:outOfStock", "Produto indispon√≠vel")}
                </div>
              )}
            </div>

            {/* Estoque */}
            {selectedVariant && (
              <div className="text-white/60 text-sm">
                {selectedVariant.inventory.available > 0
                  ? t("pdp:inStock", `${selectedVariant.inventory.available} em estoque`)
                  : t("pdp:outOfStock", "Fora de estoque")}
              </div>
            )}
          </div>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<PDPProps> = async ({ params, locale, res }) => {
  res.setHeader("Cache-Control", "public, s-maxage=600, stale-while-revalidate=86400");

  try {
    const slugParam = params?.slug;
    const slug = Array.isArray(slugParam) ? slugParam[0] : String(slugParam ?? "");

    if (!slug) {
      console.warn("PDP: Slug n√£o fornecido");
      return { notFound: true };
    }

    // INSANYCK STEP 10 ‚Äî Import din√¢mico do Prisma
    const { prisma } = await import("@/lib/prisma");

    const product = await prisma.product.findUnique({
      where: { slug },
      include: {
        category: true,
        images: { orderBy: { order: "asc" } },
        variants: {
          where: { status: "active" },
          include: {
            price: true,
            inventory: true,
            options: {
              include: {
                optionValue: {
                  include: { option: true },
                },
              },
            },
          },
        },
      },
    });

    if (!product) {
      console.warn(`PDP: Produto n√£o encontrado para slug: ${slug}`);
      return { notFound: true };
    }

    // INSANYCK STEP 10 ‚Äî Construir options (size, color, etc.)
    const byOption = new Map<string, Option>();

    for (const variant of product.variants) {
      for (const option of variant.options) {
        const opt = option.optionValue.option; // { id, slug, name }
        const val = option.optionValue; // { slug?, name?, value }
        const key = opt.slug;

        if (!byOption.has(key)) {
          byOption.set(key, {
            slug: opt.slug,
            name: opt.name ?? opt.slug,
            type: opt.slug === "color" ? "color" : opt.slug === "size" ? "size" : "select",
            values: [],
          });
        }

        const bucket = byOption.get(key)!;
        const vSlug = val.slug ?? val.value;

        if (!bucket.values.some((x) => x.slug === vSlug)) {
          bucket.values.push({
            slug: vSlug,
            name: val.name ?? val.value,
            value: val.value,
          });
        }
      }
    }

    const options: Option[] = Array.from(byOption.values());

    // INSANYCK STEP 10 ‚Äî Variants no shape do VariantSelector
    const variants: PDPVariant[] = product.variants.map((variant) => {
      const available = Math.max(
        0,
        (variant.inventory?.quantity ?? 0) - (variant.inventory?.reserved ?? 0)
      );

      return {
        id: variant.id,
        sku: variant.sku ?? "",
        title: variant.title ?? undefined,
        priceCents: variant.price?.cents ?? 0,
        currency: variant.price?.currency ?? "BRL",
        inventory: {
          quantity: variant.inventory?.quantity ?? 0,
          reserved: variant.inventory?.reserved ?? 0,
          available,
        },
        options: variant.options.map((o) => ({
          option: o.optionValue.option.slug,
          value: o.optionValue.slug ?? o.optionValue.value,
        })),
      };
    });

    const heroImage =
      product.images.find((i) => i.order === 1)?.url ?? product.images[0]?.url ?? null;

    return {
      props: {
        product: {
          id: product.id,
          slug: product.slug,
          title: product.title,
          description: product.description ?? null,
          image: heroImage,
        },
        options,
        variants,
        ...(await serverSideTranslations(locale ?? "pt", [
          "common",
          "nav",
          "pdp",
          "product",
          "catalog",
          "cart",
        ])),
      },
    };
  } catch (err) {
    console.error("PDP GSSP error:", err);
    return { redirect: { destination: "/loja", permanent: false } };
  }
};



    üìÑ produto.tsx

============================================================
FILE: src\pages\produto.tsx
============================================================
// INSANYCK STEP 3
import Navbar from "@/components/Navbar";
import HeroProduct from "@/sections/HeroProduct";

Produto.getInitialProps = async () => {
  return {};
};

export default function Produto() {
  return (
    <main className="min-h-dvh bg-[#0a0a0a] text-white">
      <Navbar />
      <HeroProduct />
    </main>
  );
}



    üìÑ robots.txt.ts

============================================================
FILE: src\pages\robots.txt.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Dynamic robots.txt
import { GetServerSideProps } from 'next';

export const getServerSideProps: GetServerSideProps = async ({ res }) => {
  const baseUrl = process.env.NEXT_PUBLIC_URL || 'https://insanyck.com';
  const isProduction = process.env.NODE_ENV === 'production';
  const isPreview = process.env.VERCEL_ENV === 'preview';
  
  // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Robots configuration based on environment
  const robots = isProduction && !isPreview
    ? `# INSANYCK Robots.txt
User-agent: *
Allow: /
Disallow: /api/
Disallow: /conta/
Disallow: /checkout/
Disallow: /admin/
Disallow: /_next/
Disallow: /auth/

# Sitemaps
Sitemap: ${baseUrl}/sitemap.xml

# Crawl delay (optional)
Crawl-delay: 1`
    : `# INSANYCK Robots.txt - Development/Preview
User-agent: *
Disallow: /

# No sitemaps for non-production environments`;

  res.setHeader('Content-Type', 'text/plain');
  res.setHeader('Cache-Control', 'public, s-maxage=86400');
  res.write(robots);
  res.end();

  return { props: {} };
};

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Component never renders (SSR only)
export default function RobotsTxt() {
  return null;
}


    üìÑ sacola.tsx

============================================================
FILE: src\pages\sacola.tsx
============================================================
// INSANYCK STEP 7 + 7.1 ‚Äî Sacola cinematogr√°fica (halo), SSR-safe, cupom+frete

import React, { useMemo, useState } from "react";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { useRouter } from "next/router";
import { useTranslation } from "next-i18next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import dynamic from "next/dynamic";
import { useCartStore, useCartHydrated, useCartSubtotal } from "@/store/cart";

const OrderSummary = dynamic(() => import("@/components/OrderSummary"), {
  ssr: false,
  loading: () => <div className="h-[200px] w-full animate-pulse bg-white/5 rounded-xl" />,
});
import { formatPrice } from "@/lib/price";
import { applyCoupon } from "@/lib/coupon";
import { simulate } from "@/lib/shipping";
import { seoCart } from "@/lib/seo";
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Import CartEmpty para teste est√°vel
import CartEmpty from "@/components/EmptyStates/CartEmpty";

export default function SacolaPage() {
  const { t, i18n } = useTranslation(["bag", "checkout", "cart"]);
  const router = useRouter();
  const locale = i18n.language?.startsWith("en") ? "en" : "pt";

  const hydrated = useCartHydrated();
  const items = useCartStore((s) => s.items);
  const inc = useCartStore((s) => s.inc);
  const dec = useCartStore((s) => s.dec);
  const remove = useCartStore((s) => s.removeItem);

  // Subtotal direto do store (centavos, SSR-safe)
  const subtotalCents = useCartSubtotal();

  // Cupom + frete mock
  const [code, setCode] = useState("");
  const [applied, setApplied] = useState<{ discountCents: number; freeShip: boolean }>({
    discountCents: 0,
    freeShip: false,
  });
  const [cep, setCep] = useState("");
  const shippingQuote = useMemo(() => simulate(cep), [cep]);
  const shippingCents = applied.freeShip ? 0 : shippingQuote.priceCents;
  const discountCents = applied.discountCents;

  function onApplyCoupon() {
    const res = applyCoupon(code, subtotalCents);
    if (res.valid && code.trim().toUpperCase() === "FRETEGRATIS") {
      setApplied({ discountCents: 0, freeShip: true });
    } else if (res.valid) {
      setApplied({ discountCents: res.discountCents, freeShip: false });
    } else {
      setApplied({ discountCents: 0, freeShip: false });
      alert(t("checkout:errors.couponInvalid", res.message || "Cupom inv√°lido"));
    }
  }

  if (!hydrated) return null; // evita hydration mismatch

  const seo = seoCart(locale);

  return (
    <>
      <Head>
        <title>{seo.title}</title>
        {seo.meta.map((tag, i) => (
          <meta key={i} {...tag} />
        ))}
        {seo.link.map((l, i) => (
          <link key={i} {...l} />
        ))}
      </Head>
      <main className="relative pt-[120px] pb-20 px-6 mx-auto max-w-[1200px] section-halo">
        {/* Vinheta/Halo cinematogr√°fico discreto */}
        <div
          aria-hidden
          className="pointer-events-none absolute inset-0 -z-10"
          style={{
            background:
              "radial-gradient(80% 120% at 50% 20%, rgba(255,255,255,0.06) 0%, rgba(255,255,255,0.03) 22%, rgba(0,0,0,0) 55%)",
            WebkitMaskImage:
              "radial-gradient(90% 120% at 50% 40%, #000 0%, #000 70%, transparent 100%)",
            maskImage: "radial-gradient(90% 120% at 50% 40%, #000 0%, #000 70%, transparent 100%)",
          }}
        />

        <h1 className="text-white text-3xl font-semibold tracking-wide">
          {t("bag:title", "Sua sacola")}
        </h1>

        {items.length === 0 ? (
          <div data-testid="empty-cart" className="mt-10">
            <CartEmpty />
          </div>
        ) : (
          <div data-testid="cart-items" className="mt-8 grid grid-cols-1 lg:grid-cols-[1fr_360px] gap-8">
            {/* Lista de itens */}
            <section aria-label={t("bag:items", "Itens")} className="space-y-4">
              {items.map((it) => (
                <article
                  key={it.id}
                  className="rounded-2xl border border-white/10 bg-black/40 p-4 flex gap-4 items-center shadow-[inset_0_1px_0_rgba(255,255,255,0.06)]"
                >
                  <div className="relative w-[92px] h-[92px] overflow-hidden rounded-xl bg-black/60">
                    <Image
                      src={it.image || "/products/placeholder/front.webp"}
                      alt={it.title}
                      width={92}
                      height={92}
                      sizes="92px"
                      className="object-cover"
                      loading="lazy"
                    />
                  </div>

                  <div className="flex-1 min-w-0">
                    <div className="flex items-start justify-between gap-3">
                      <div className="insanyck-reset-text">
                        <div className="text-white/90 font-medium truncate">{it.title}</div>
                        {it.options?.variant && (
                          <div className="text-white/60 text-sm mt-0.5">{it.options.variant}</div>
                        )}
                      </div>
                      <button
                        className="ml-2 text-white/60 hover:text-white"
                        aria-label={t("bag:remove", "Remover")}
                        onClick={() => remove(it.id)}
                      >
                        ‚úï
                      </button>
                    </div>

                    <div className="mt-3 flex items-center justify-between">
                      <div className="inline-flex items-center rounded-xl border border-white/10">
                        <button
                          onClick={() => dec(it.id)}
                          className="px-3 py-1 text-white/80 hover:text-white"
                          aria-label={t("bag:dec", "Diminuir quantidade")}
                        >
                          ‚àí
                        </button>
                        <span className="px-3 py-1 text-white/80" aria-live="polite">
                          {t("bag:qty", "Qtd")}: {it.qty}
                        </span>
                        <button
                          onClick={() => inc(it.id)}
                          className="px-3 py-1 text-white/80 hover:text-white"
                          aria-label={t("bag:inc", "Aumentar quantidade")}
                        >
                          +
                        </button>
                      </div>

                      <div className="text-white/80">
                        {formatPrice((it.priceCents || 0) * it.qty, locale as any)}
                      </div>
                    </div>
                  </div>
                </article>
              ))}
            </section>

            {/* Resumo */}
            <aside className="space-y-4">
              {/* Cupom */}
              <div className="rounded-2xl border border-white/10 bg-black/40 p-4 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)]">
                <label className="block text-sm text-white/70 mb-2">
                  {t("bag:coupon.label", "Cupom de desconto")}
                </label>
                <div className="flex gap-2">
                  <input
                    value={code}
                    onChange={(e) => setCode(e.target.value)}
                    className="flex-1 rounded-xl bg-black/40 border border-white/10 px-3 py-2 text-white placeholder-white/30 focus:outline-none focus:ring-2 focus:ring-white/20"
                    placeholder="INSANY10"
                    aria-label={t("bag:coupon.label", "Cupom de desconto")}
                  />
                  <button
                    onClick={onApplyCoupon}
                    className="rounded-xl px-4 py-2 border border-white/15 text-white hover:bg-white/5 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/30 transition"
                  >
                    {t("bag:coupon.apply", "Aplicar")}
                  </button>
                </div>
              </div>

              {/* Frete */}
              <div className="rounded-2xl border border-white/10 bg-black/40 p-4 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)]">
                <label className="block text-sm text-white/70 mb-2">
                  {t("bag:shipping.simulate", "Simular frete")}
                </label>
                <div className="flex gap-2">
                  <input
                    value={cep}
                    onChange={(e) => {
                      // mask simples 00000-000
                      const digits = e.target.value.replace(/\D/g, "").slice(0, 8);
                      setCep(digits.replace(/^(\d{5})(\d)/, "$1-$2"));
                    }}
                    className="flex-1 rounded-xl bg-black/40 border border-white/10 px-3 py-2 text-white placeholder-white/30 focus:outline-none focus:ring-2 focus:ring-white/20"
                    placeholder={t("bag:shipping.cep", "CEP")}
                    aria-label={t("bag:shipping.cep", "CEP")}
                    maxLength={9}
                    inputMode="numeric"
                  />
                  <span className="inline-flex items-center text-white/70 text-sm px-2">
                    {shippingCents
                      ? formatPrice(shippingCents, locale as any)
                      : t("bag:free", "Gr√°tis")}
                  </span>
                </div>
                <p className="mt-2 text-xs text-white/50">
                  {shippingQuote.label === "express"
                    ? t("checkout:shipping.eta2", "2 dias √∫teis")
                    : t("checkout:shipping.eta5", "5 dias √∫teis")}
                </p>
              </div>

              <OrderSummary
                subtotalCents={subtotalCents}
                shippingCents={shippingCents}
                discountCents={discountCents}
                locale={locale as any}
                noteBelow={
                  <span>{t("bag:installments", "Parcele em at√© 6x sem juros (mock)")}</span>
                }
              />

              <div className="mt-2">
                <Link
                  href="/checkout"
                  prefetch={true}
                  className="block text-center rounded-xl px-4 py-3 font-semibold bg-white text-black hover:bg-white/90 transition"
                >
                  {t("bag:checkoutCta", "Ir para checkout")}
                </Link>
                <button
                  onClick={() => {
                    if (typeof window !== "undefined" && router.isReady) {
                      router.push("/loja");
                    }
                  }}
                  className="block w-full text-center mt-2 text-white/70 hover:text-white underline underline-offset-4"
                >
                  {t("bag:continue", "Continuar comprando")}
                </button>
              </div>
            </aside>
          </div>
        )}
      </main>
    </>
  );
}

// SSR/i18n
export async function getServerSideProps({ locale }: { locale: string }) {
  return {
    props: {
      ...(await serverSideTranslations(locale ?? "pt", [
        "bag",
        "checkout",
        "cart",
        "nav",
        "common",
      ])),
    },
  };
}



    üìÑ sitemap.xml.ts

============================================================
FILE: src\pages\sitemap.xml.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Dynamic sitemap with hreflang alternates
import { GetServerSideProps } from 'next';
import { prisma } from '@/lib/prisma';

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Static routes configuration
const STATIC_ROUTES = [
  { path: '', priority: 1.0, changefreq: 'daily' },
  { path: '/loja', priority: 0.9, changefreq: 'daily' },
  { path: '/favoritos', priority: 0.5, changefreq: 'weekly' },
  { path: '/sobre', priority: 0.6, changefreq: 'monthly' },
  { path: '/faq', priority: 0.4, changefreq: 'monthly' },
];

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Routes to exclude from sitemap
const _EXCLUDED_ROUTES = [
  '/conta',
  '/checkout',
  '/api',
  '/admin',
  '/login',
  '/cadastro'
];

function generateSitemapXML(urls: string[]): string {
  return `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:xhtml="http://www.w3.org/1999/xhtml">
${urls.join('\n')}
</urlset>`;
}

function generateUrlEntry({
  loc,
  lastmod,
  changefreq = 'weekly',
  priority = 0.7,
  alternates = []
}: {
  loc: string;
  lastmod?: string;
  changefreq?: string;
  priority?: number;
  alternates?: { hreflang: string; href: string }[];
}): string {
  return `  <url>
    <loc>${loc}</loc>
    ${lastmod ? `<lastmod>${lastmod}</lastmod>` : ''}
    <changefreq>${changefreq}</changefreq>
    <priority>${priority}</priority>
    ${alternates.map(alt => 
      `<xhtml:link rel="alternate" hreflang="${alt.hreflang}" href="${alt.href}" />`
    ).join('\n    ')}
  </url>`;
}

export const getServerSideProps: GetServerSideProps = async ({ res }) => {
  try {
    const baseUrl = process.env.NEXT_PUBLIC_URL || 'https://insanyck.com';
    const lastmod = new Date().toISOString().split('T')[0];
    const urls: string[] = [];

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Static routes with locales and alternates
    for (const route of STATIC_ROUTES) {
      const ptPath = `/pt${route.path}`;
      const enPath = `/en${route.path}`;
      
      // PT version
      urls.push(generateUrlEntry({
        loc: `${baseUrl}${ptPath}`,
        lastmod,
        changefreq: route.changefreq,
        priority: route.priority,
        alternates: [
          { hreflang: 'pt-BR', href: `${baseUrl}${ptPath}` },
          { hreflang: 'en', href: `${baseUrl}${enPath}` },
          { hreflang: 'x-default', href: `${baseUrl}${ptPath}` }
        ]
      }));
      
      // EN version
      urls.push(generateUrlEntry({
        loc: `${baseUrl}${enPath}`,
        lastmod,
        changefreq: route.changefreq,
        priority: route.priority * 0.9, // Slightly lower priority for EN
        alternates: [
          { hreflang: 'pt-BR', href: `${baseUrl}${ptPath}` },
          { hreflang: 'en', href: `${baseUrl}${enPath}` },
          { hreflang: 'x-default', href: `${baseUrl}${ptPath}` }
        ]
      }));
    }

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Dynamic product routes
    try {
      const products = await prisma.product.findMany({
        where: { 
          // Only include products with valid slugs
          slug: {
            not: null as any
          }
        },
        select: {
          slug: true,
          updatedAt: true,
        },
        orderBy: { updatedAt: 'desc' }
      });

      for (const product of products) {
        if (product.slug) {
          const productLastmod = product.updatedAt?.toISOString().split('T')[0] || lastmod;
          const ptPath = `/pt/produto/${product.slug}`;
          const enPath = `/en/produto/${product.slug}`;
          
          // PT version
          urls.push(generateUrlEntry({
            loc: `${baseUrl}${ptPath}`,
            lastmod: productLastmod,
            changefreq: 'weekly',
            priority: 0.8,
            alternates: [
              { hreflang: 'pt-BR', href: `${baseUrl}${ptPath}` },
              { hreflang: 'en', href: `${baseUrl}${enPath}` },
              { hreflang: 'x-default', href: `${baseUrl}${ptPath}` }
            ]
          }));
          
          // EN version
          urls.push(generateUrlEntry({
            loc: `${baseUrl}${enPath}`,
            lastmod: productLastmod,
            changefreq: 'weekly',
            priority: 0.7,
            alternates: [
              { hreflang: 'pt-BR', href: `${baseUrl}${ptPath}` },
              { hreflang: 'en', href: `${baseUrl}${enPath}` },
              { hreflang: 'x-default', href: `${baseUrl}${ptPath}` }
            ]
          }));
        }
      }
    } catch (dbError) {
      console.warn('Database error in sitemap generation:', dbError);
      // Continue without dynamic routes if DB is unavailable
    }

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Generate and return sitemap
    const sitemap = generateSitemapXML(urls);

    res.setHeader('Content-Type', 'text/xml');
    res.setHeader('Cache-Control', 'public, s-maxage=86400, stale-while-revalidate');
    res.write(sitemap);
    res.end();

    return { props: {} };
  } catch (error) {
    console.error('Sitemap generation error:', error);
    
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Minimal fallback sitemap
    const fallbackSitemap = generateSitemapXML([
      generateUrlEntry({
        loc: `${process.env.NEXT_PUBLIC_URL || 'https://insanyck.com'}/pt`,
        lastmod: new Date().toISOString().split('T')[0],
        priority: 1.0
      })
    ]);
    
    res.setHeader('Content-Type', 'text/xml');
    res.write(fallbackSitemap);
    res.end();

    return { props: {} };
  }
};

// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Component never renders (SSR only)
export default function Sitemap() {
  return null;
}


    üìÑ _app.tsx

============================================================
FILE: src\pages\_app.tsx
============================================================
// INSANYCK STEP 4 + STEP 8 + HOTFIX + Lote 4
import type { AppProps } from "next/app";
import { appWithTranslation } from "next-i18next";
import dynamic from "next/dynamic";

// importa o CSS global
import "../styles/globals.css";

// INSANYCK STEP 8 ‚Äî NextAuth Provider
import { SessionProvider } from "next-auth/react";
import type { Session } from "next-auth";

// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî PWA update functionality
import { useServiceWorkerUpdate } from "@/lib/pwa/useServiceWorkerUpdate";
import { UpdateBanner } from "@/components/pwa/UpdateBanner";

// Layout global components
const Navbar = dynamic(() => import("@/components/Navbar"), { ssr: false });
const MiniCart = dynamic(() => import("@/components/MiniCart"), { ssr: false });

// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî LayoutShell with PWA update functionality
function LayoutShell({ children }: { children: React.ReactNode }) {
  const { hasUpdate, updating, update } = useServiceWorkerUpdate();

  // INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî hide SW banner under test
  const hideUpdateBanner = process.env.INSANYCK_TEST_HIDE_UPDATE_BANNER === '1';

  return (
    <>
      {hasUpdate && !hideUpdateBanner && <UpdateBanner onUpdate={update} updating={updating} />}
      <Navbar />
      {children}
      <MiniCart />
    </>
  );
}

function MyApp({
  Component,
  pageProps: { session, ...pageProps },
}: AppProps<{ session: Session | null }>) {
  return (
    <SessionProvider session={session}>
      <LayoutShell>
        <Component {...pageProps} />
      </LayoutShell>
    </SessionProvider>
  );
}

export default appWithTranslation(MyApp);



    üìÑ _document.tsx

============================================================
FILE: src\pages\_document.tsx
============================================================
// INSANYCK STEP 4
import Document, { Html, Head, Main, NextScript, DocumentContext } from "next/document";

class MyDocument extends Document {
  static async getInitialProps(ctx: DocumentContext) {
    const initialProps = await Document.getInitialProps(ctx);
    return { ...initialProps };
  }

  render() {
    // Locale resolvido pelo Next (Pages Router) em SSR
    const currentLocale = (this.props as any).__NEXT_DATA__?.locale || "pt";
    const pagePath = (this.props as any).__NEXT_DATA__?.page || "/";
    const ogLocale = currentLocale === "pt" ? "pt_BR" : "en_US";

    // Base URL para hreflang absolutos
    const baseUrl = process.env.NEXT_PUBLIC_URL || "https://insanyck.com";
    
    // Helpers com URLs absolutos para alternates
    const hrefPt = `${baseUrl}${pagePath === "/" ? "/" : pagePath}`;
    const hrefEn = `${baseUrl}${pagePath === "/" ? "/en" : `/en${pagePath}`}`;

    return (
      <Html lang={currentLocale}>
        <Head>
          {/* DNS prefetch control */}
          <meta httpEquiv="x-dns-prefetch-control" content="on" />
          
          {/* Resource hints for Google Fonts */}
          <link rel="preconnect" href="https://fonts.googleapis.com" crossOrigin="" />
          <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="" />
          <link rel="dns-prefetch" href="//fonts.googleapis.com" />
          <link rel="dns-prefetch" href="//fonts.gstatic.com" />
          
          {/* Resource hints for Stripe */}
          <link rel="preconnect" href="https://js.stripe.com" />
          <link rel="dns-prefetch" href="//js.stripe.com" />

          {/* OG locale por idioma */}
          <meta property="og:locale" content={ogLocale} />

          {/* Alternates hreflang */}
          <link rel="alternate" hrefLang="pt" href={hrefPt} />
          <link rel="alternate" hrefLang="en" href={hrefEn} />
          <link rel="alternate" hrefLang="x-default" href={hrefPt} />

          {/* Mant√©m PWA funcionando */}
          <link rel="manifest" href="/manifest.json" />
          <meta name="theme-color" content="#000000" />
        </Head>
        <body>
          <Main />
          <NextScript />
        </body>
      </Html>
    );
  }
}

export default MyDocument;



    üìÑ _error.tsx

============================================================
FILE: src\pages\_error.tsx
============================================================
// src/pages/_error.tsx
import Head from "next/head";
import Link from "next/link";
import { NextPageContext } from "next";

function ErrorPage({ statusCode }: { statusCode?: number }) {
  return (
    <>
      <Head><title>{`Erro ${statusCode || ""} ‚Äî INSANYCK`}</title></Head>
      <main className="pt-[120px] px-6 max-w-[900px] mx-auto text-white">
        <h1 className="text-3xl font-bold mb-3">Ocorreu um erro</h1>
        <p className="text-white/70">Tente novamente ou volte para a <Link className="underline" href="/">home</Link>.</p>
      </main>
    </>
  );
}

ErrorPage.getInitialProps = ({ res, err }: NextPageContext) => {
  const statusCode = res ? res.statusCode : err ? (err as any).statusCode : 404;
  return { statusCode };
};

export default ErrorPage;


  üìÅ sections/
    üìÑ HeroHome.tsx

============================================================
FILE: src\sections\HeroHome.tsx
============================================================
"use client";

import { CTA } from "@/components/CTA";
import Link from "next/link";
import { useRef } from "react";
import { motion } from "framer-motion";
import { useTranslation } from "next-i18next"; // INSANYCK STEP 4
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî OptimizedImage para zero CLS
import OptimizedImage from "@/components/ui/OptimizedImage";

// INSANYCK STEP 4 ‚Äî tipagem das chaves usadas neste componente
type HomeKey =
  | "carousel.dropZero"
  | "carousel.oversizedClassic"
  | "carousel.regatas"
  | "carousel.acessorios";

// INSANYCK STEP 4 ‚Äî n√£o repita o namespace no item; usamos useTranslation("home")
const ITEMS: ReadonlyArray<{ titleKey: HomeKey; img: string }> = [
  { titleKey: "carousel.dropZero",         img: "/thumbs/drop-zero.png" },
  { titleKey: "carousel.oversizedClassic", img: "/thumbs/oversized-classic.png" },
  { titleKey: "carousel.regatas",          img: "/thumbs/regatas.png" },
  { titleKey: "carousel.acessorios",       img: "/thumbs/acessorios.png" },
] as const;

export default function HeroHome() {
  const scroller = useRef<HTMLDivElement>(null);
  const { t } = useTranslation("home"); // INSANYCK STEP 4 ‚Äî use string √∫nica, n√£o array

  return (
    <section
      className="relative pt-[120px] pb-[80px] overflow-hidden"
      aria-labelledby="hero-home"
    >
      {/* Halo/aneis de fundo (leve) */}
      <div
        aria-hidden
        className="pointer-events-none absolute inset-0 -z-10"
        style={{
          background:
            "radial-gradient(60% 60% at 50% 40%, rgba(255,255,255,0.06) 0%, rgba(255,255,255,0.02) 35%, rgba(0,0,0,0) 60%)",
          maskImage:
            "radial-gradient(60% 60% at 50% 40%, #000 0%, #000 55%, transparent 70%)",
          WebkitMaskImage:
            "radial-gradient(60% 60% at 50% 40%, #000 0%, #000 55%, transparent 70%)",
        }}
      />
      <div className="mx-auto max-w-[1200px] px-6">
        {/* H2 caps com tracking exato (h1 j√° est√° na p√°gina principal) */}
        <h2
          id="hero-home"
          className="text-center text-[120px] leading-[1] font-semibold tracking-[0.25em] text-white/90 select-none"
          style={{ textTransform: "uppercase" }}
        >
          {/* Mant√©m o wordmark como texto simples, n√£o traduzimos o nome da marca */}
          INSANYCK
        </h2>

        {/* Manifesto */}
        <p className="mt-8 text-center text-[28px] leading-[1.4] text-white/80">
          {/* INSANYCK STEP 4 ‚Äî sem prefixo 'home:' porque o namespace j√° est√° resolvido */}
          {t("manifesto.line1", "Desconstruir o ordin√°rio.")}
          <br />
          {t("manifesto.line2", "Reconstruir o extraordin√°rio.")}
        </p>

        {/* CTAs */}
        <div className="mt-10 flex items-center justify-center gap-4">
          <Link href="/loja" prefetch={true}>
            <CTA>
              {t("cta.shop", "Entrar na loja") /* INSANYCK STEP 4 */}
            </CTA>
          </Link>
          <Link href="/manifesto" prefetch={true}>
            <CTA variant="ghost">
              {t("cta.manifesto", "Manifesto") /* INSANYCK STEP 4 */}
            </CTA>
          </Link>
        </div>

        {/* "Role para explorar" + bullets - MAIS ESPA√áO */}
        <div className="mt-20 text-center text-white/70">
          {t("scrollToExplore", "Role para explorar") /* INSANYCK STEP 4 */}
        </div>
        <div className="mt-3 flex justify-center gap-2">
          <span className="w-1.5 h-1.5 rounded-full bg-white/30" />
          <span className="w-1.5 h-1.5 rounded-full bg-white/30" />
          <span className="w-1.5 h-1.5 rounded-full bg-white/30" />
          <span className="w-1.5 h-1.5 rounded-full bg-white/30" />
        </div>

        {/* Carrossel CENTRALIZADO e com mais espa√ßo */}
        <div className="mt-16 flex justify-center">
          <div
            ref={scroller}
            className="flex gap-6 overflow-x-auto pb-6 snap-x snap-mandatory [-ms-overflow-style:none] [scrollbar-width:none] max-w-fit px-6"
            style={{ WebkitOverflowScrolling: "touch" }}
            aria-label={t("aria.carousel", "Carrossel de cole√ß√µes") /* INSANYCK STEP 4 */}
          >
            <style jsx global>{`
              /* esconder scrollbar; mant√©m acessibilidade por teclado */
              .snap-x::-webkit-scrollbar { display: none; }
            `}</style>
            {ITEMS.map((it, index) => (
              <motion.article
                key={it.titleKey}
                whileHover={{ y: -2, borderColor: "rgba(255,255,255,0.15)" }}
                transition={{ duration: 0.15, ease: [0.2, 0, 0, 1] }}
                className="snap-start shrink-0 w-[220px] h-[140px] rounded-2xl bg-[#0f0f10] border border-white/10 shadow-[inset_0_1px_0_rgba(255,255,255,0.06)] relative overflow-hidden focus-within:ring-2 focus-within:ring-white/40 focus-within:ring-offset-2 focus-within:ring-offset-black"
              >
              {/* INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî OptimizedImage para zero CLS */}
              <OptimizedImage
                src={it.img}
                alt={`${t(it.titleKey)} ‚Äî ${t("aria.collection", "Cole√ß√£o INSANYCK")}`}
                aspectRatio="22/14"
                sizes="(max-width: 768px) 100vw, (max-width: 1200px) 100vw, 220px"
                className="object-cover opacity-[0.92]"
                priority={index === 0}
                loading={index === 0 ? "eager" : "lazy"}
                fallbackSrc="/thumbs/placeholder.webp"
              />

                <div className="absolute inset-0 bg-[linear-gradient(180deg,rgba(0,0,0,0)_0%,rgba(0,0,0,0.5)_100%)]" />
                <div className="absolute bottom-3 left-4 text-white/90 text-sm font-medium">
                  {t(it.titleKey) /* INSANYCK STEP 4 ‚Äî exibir√° 'Drop Zero', etc. */}
                </div>
              </motion.article>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
}



    üìÑ HeroProduct.tsx

============================================================
FILE: src\sections\HeroProduct.tsx
============================================================
// INSANYCK STEP 3 ‚Äî Produto (switch entre est√°tico e 3D)

import { CTA } from "@/components/CTA";
import ProductImageView from "@/components/ProductImageView";
import { useState } from "react";
import { useTranslation } from "next-i18next"; // INSANYCK STEP 4
import dynamic from "next/dynamic";

const Product3DView = dynamic(() => import("@/components/three/Product3DView"), {
  ssr: false,
  loading: () => (
    <div className="aspect-square bg-gray-900 rounded-xl flex items-center justify-center">
      <div className="text-yellow-400 font-bold animate-pulse">Carregando modelo 3D...</div>
    </div>
  ),
});

type Variant = "front" | "back" | "detail";

// mude para false se quiser voltar ao 3D
const USE_STATIC_VIEW = true;

export default function HeroProduct() {
  const [variant, setVariant] = useState<Variant>("front");
  const { t } = useTranslation(["product"]); // INSANYCK STEP 4

  return (
    <section className="relative pt-[120px] pb-[60px]" aria-labelledby="hero-prod">
      <div className="mx-auto max-w-[1200px] px-6 grid grid-cols-1 lg:grid-cols-2 gap-10 items-center">
        {/* Viewer (imagens est√°ticas ou 3D) */}
        <div className="relative">
          {USE_STATIC_VIEW ? (
            <ProductImageView initial={variant} />
          ) : (
            <Product3DView modelUrl="/models/shirt.glb" variant={variant} />
          )}
        </div>

        {/* textos e CTAs */}
        <div className="text-center lg:text-left">
          <h2 className="text-white/92 text-[56px] md:text-[64px] font-semibold leading-tight">
            {t("product:title", "Oversized Classic") /* INSANYCK STEP 4 */}
          </h2>
          <p className="mt-3 text-white/75 text-[20px]">
            {t("product:subtitle", "Drop-shoulder ‚Ä¢ 100% algod√£o premium") /* INSANYCK STEP 4 */}
          </p>

          <div className="mt-8 flex flex-wrap gap-4 justify-center lg:justify-start">
            <CTA>{t("product:cta.buyNow", "Comprar agora") /* INSANYCK STEP 4 */}</CTA>
            <CTA variant="ghost">
              {t("product:cta.viewDetails", "Ver detalhes") /* INSANYCK STEP 4 */}
            </CTA>
          </div>

          <div className="mt-6 text-white/75">
            {/* instru√ß√£o muda conforme viewer */}
            {
              USE_STATIC_VIEW
                ? t("product:hint.thumbs", "Use as miniaturas para ver frente/verso/detalhes")
                : t("product:hint.drag", "Arraste para girar ‚Äî passe o mouse") /* INSANYCK STEP 4 */
            }
          </div>

          {/* bot√µes de texto (Frente/Verso) como na ref */}
          <div className="mt-8 flex gap-6 justify-center lg:justify-start text-white/85">
            {[
              { k: "front", label: t("product:thumbs.front", "Frente") },
              { k: "back", label: t("product:thumbs.back", "Verso") },
            ].map((o) => (
              <button
                key={o.k}
                onClick={() => setVariant(o.k as Variant)}
                className={
                  o.k === variant ? "underline underline-offset-4" : "opacity-80 hover:opacity-100"
                }
                aria-pressed={o.k === variant}
              >
                {o.label}
              </button>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
}



  üìÅ server/
    üìÅ db/
      üìÑ prisma.ts

============================================================
FILE: src\server\db\prisma.ts
============================================================
// src/server/db/prisma.ts
import { PrismaClient } from "@prisma/client";

const globalForPrisma = globalThis as unknown as { prisma?: PrismaClient };

export const prisma =
  globalForPrisma.prisma ??
  new PrismaClient({
    log: process.env.NODE_ENV === "development" ? ["query", "error", "warn"] : ["error"],
  });

if (process.env.NODE_ENV !== "production") globalForPrisma.prisma = prisma;

export default prisma;



  üìÅ signature/
    üìÅ Cart/
      üìÑ animations.ts

============================================================
FILE: src\signature\Cart\animations.ts
============================================================



      üìÑ CartDrawerSignature.tsx

============================================================
FILE: src\signature\Cart\CartDrawerSignature.tsx
============================================================



      üìÑ design-system.ts

============================================================
FILE: src\signature\Cart\design-system.ts
============================================================
// src/signature/design-system.ts
export const luxuryTheme = {
    cartDrawer: {
      background: "linear-gradient(120deg,#1a1a1a 60%,#D4AF37 180%)"
    },
    spacings: [0, 4, 8, 16, 32, 64],
    palette: {
      primary: '#000',
      secondary: '#D4AF37',
      accent: '#fff'
    }
  };
  


      üìÑ enhancements.ts

============================================================
FILE: src\signature\Cart\enhancements.ts
============================================================
// src/signature/enhancements.ts
import { ReactElement, createElement } from "react"; // INSANYCK STEP Z0
export const applyUltraLuxury = (component: ReactElement) => {
  if (process.env.NEXT_PUBLIC_LUXURY_MODE === "ULTRA") {
    // Aqui pode envolver com glass, glow, etc
    // INSANYCK STEP Z0 ‚Äî JSX convertido para createElement (fix sintaxe .ts)
    return createElement("div", {
      style: {
        filter: "drop-shadow(0px 0px 36px #FFD700aa) blur(0.5px)",
        border: "2px solid #D4AF37",
        borderRadius: 28
      }
    }, component);
  }
  return component;
};



      üìÑ visuals.tsx

============================================================
FILE: src\signature\Cart\visuals.tsx
============================================================
// INSANYCK  Cart visuals signature (minimal export)
export const CartDrawerSignature = () => null;


  üìÅ store/
    üìÑ cart.ts

============================================================
FILE: src\store\cart.ts
============================================================
// INSANYCK STEP 10 ‚Äî STORE UNIFICADO, ENTERPRISE-SAFE
// src/store/cart.ts
import { create } from "zustand";
import { persist, createJSONStorage } from "zustand/middleware";

export type Currency = "BRL"; // expande p/ "USD" no STEP 12 (checkout internacional)

export interface CartItem {
  id: string;           // uid local do item no carrinho (n√£o √© productId)
  slug: string;
  title: string;
  image?: string;
  // Variantes (preferir variantId/sku)
  variantId?: string;
  sku?: string;
  // Op√ß√µes legadas (ex.: { size: "M", color: "preto" })
  options?: Record<string, string>;
  priceCents: number;
  currency: Currency;
  qty: number;
}

// === Helpers ===

// Chave est√°vel para ‚Äúdedupe‚Äù: se houver variantId, usa; sen√£o slug + options ordenadas.
function getItemKey(it: Pick<CartItem, "variantId" | "slug" | "options">): string {
  if (it.variantId) return `v:${it.variantId}`;
  const opt = it.options
    ? Object.entries(it.options)
        .sort(([a], [b]) => a.localeCompare(b))
        .map(([k, v]) => `${k}=${v}`)
        .join("&")
    : "";
  return `s:${it.slug}|${opt}`;
}

type CartState = {
  items: CartItem[];
  hydrated: boolean;     // evita mismatch SSR
  isOpen: boolean;       // drawer mini-cart (n√£o persisto)
  addItem: (_item: Omit<CartItem, "id">) => void;
  // Aceita id (antigo) OU key composta (nova). Mant√©m compatibilidade.
  removeItem: (_idOrKey: string) => void;
  updateQty: (_idOrKey: string, _qty: number) => void;
  clear: () => void;
  toggle: (_open?: boolean) => void;
  count: () => number;
  totalCents: () => number;

  // Retrocompat (APIs antigas que usam id direto)
  inc: (_id: string) => void;
  dec: (_id: string) => void;
  subtotalCents: () => number;
};

const uid = () => Math.random().toString(36).slice(2);

export const useCartStore = create<CartState>()(
  persist(
    (set, get) => ({
      items: [],
      hydrated: false,
      isOpen: false,

      // INSANYCK STEP 10 ‚Äî De-dupe por variantId OU slug+options (ordenadas)
      addItem: (item) => {
        set((state) => {
          // default de currency, caso algu√©m esque√ßa de enviar
          const normalized: Omit<CartItem, "id"> = {
            ...item,
            currency: item.currency || "BRL",
          };

          const keyNew = getItemKey(normalized);
          const idx = state.items.findIndex((x) => getItemKey(x) === keyNew);

          if (idx >= 0) {
            const next = [...state.items];
            next[idx] = { ...next[idx], qty: next[idx].qty + normalized.qty };
            return { items: next };
          }

          return { items: [...state.items, { ...normalized, id: uid() }] };
        });

        get().toggle(true);
      },

      removeItem: (idOrKey) =>
        set((state) => {
          return {
            items: state.items.filter(
              (x) => x.id !== idOrKey && getItemKey(x) !== idOrKey
            ),
          };
        }),

      updateQty: (idOrKey, qty) =>
        set((state) => {
          const q = Math.max(1, qty);
          return {
            items: state.items.map((x) =>
              x.id === idOrKey || getItemKey(x) === idOrKey ? { ...x, qty: q } : x
            ),
          };
        }),

      // Retrocompat: alguns componentes antigos ainda chamam inc/dec por id
      inc: (id) =>
        set((state) => ({
          items: state.items.map((x) =>
            x.id === id ? { ...x, qty: x.qty + 1 } : x
          ),
        })),
      dec: (id) =>
        set((state) => ({
          items: state.items.map((x) =>
            x.id === id ? { ...x, qty: Math.max(1, x.qty - 1) } : x
          ),
        })),
      clear: () => set({ items: [] }),

      toggle: (open) =>
        set((state) => ({
          isOpen: typeof open === "boolean" ? open : !state.isOpen,
        })),

      count: () => get().items.reduce((acc, x) => acc + x.qty, 0),

      totalCents: () =>
        get().items.reduce((acc, x) => acc + x.priceCents * x.qty, 0),

      // Alias retrocompat
      subtotalCents: () => get().totalCents(),
    }),
    {
      // Bump de vers√£o porque a dedupe key mudou (evita colis√µes com carrinhos antigos)
      name: "insanyck:cart:v2",
      storage: createJSONStorage(() =>
        typeof window !== "undefined"
          ? window.localStorage
          : (undefined as any)
      ),
      partialize: (state) => ({ items: state.items }),
      onRehydrateStorage: () => (state) => {
        // Migra√ß√£o leve: converte itens legados {variant?: string} -> options.variant
        if (state) {
          state.hydrated = true;
          if (Array.isArray(state.items)) {
            state.items = state.items.map((it: any) => {
              if (it && typeof it === "object") {
                // garantir currency
                if (!it.currency) it.currency = "BRL";
                // se vier de um shape antigo com `variant` (string), movemos para options
                if (it.variant && !it.options) {
                  it.options = { variant: it.variant };
                  delete it.variant;
                }
              }
              return it as CartItem;
            });
          }
        }
      },
    }
  )
);

// INSANYCK STEP 10 ‚Äî Helpers de formata√ß√£o e seletores
export const formatCurrency = (cents: number, currency = 'BRL') => {
  return (cents / 100).toLocaleString('pt-BR', {
    style: 'currency',
    currency,
  });
};

// Selectors auxiliares (SSR-safe)
export const useCartHydrated = () => useCartStore((s) => s.hydrated);
export const useCartCount = () =>
  useCartStore((s) => (s.hydrated ? s.items.reduce((a, x) => a + x.qty, 0) : 0));
export const useCartSubtotal = () =>
  useCartStore((s) =>
    s.hydrated ? s.items.reduce((a, x) => a + x.priceCents * x.qty, 0) : 0
  );
export const useCartTotal = () => useCartSubtotal(); // Alias



    üìÑ useCart.ts

============================================================
FILE: src\store\useCart.ts
============================================================
// src/store/useCart.ts
import { create } from "zustand";
import { persist } from "zustand/middleware";
import { set as idbSet, get as idbGet, del as idbDel } from "idb-keyval";

// -- Cart Item Tipo
export type CartItem = {
  id: string;
  nome: string;
  preco: number;
  cor: string;
  tamanho: string;
  quantidade: number;
  image?: string;
  currency?: "BRL" | "USD" | "EUR";
  variantId?: string;
};

type CartStore = {
  items: CartItem[];
  version: number;
  currency: "BRL" | "USD" | "EUR";
  isLoading: boolean;
  add: (_item: CartItem) => void;
  remove: (_id: string, _cor: string, _tamanho: string) => void;
  update: (_id: string, _cor: string, _tamanho: string, _data: Partial<CartItem>) => void;
  clear: () => void;
  sync: (_userId?: string) => Promise<void>;
  restore: (_userId?: string) => Promise<void>;
  setCurrency: (_currency: "BRL" | "USD" | "EUR") => void;
  checkout: () => Promise<void>;
};

const CART_VERSION = 2;

// Fun√ß√£o para gerar chave √∫nica (composta)
function cartKey(item: Pick<CartItem, "id" | "cor" | "tamanho">) {
  return `${item.id}-${item.cor}-${item.tamanho}`;
}

// Fun√ß√£o para persistir ap√≥s qualquer altera√ß√£o
async function autoSync(items: CartItem[], userId?: string) {
  await idbSet(`cart-${userId || "anon"}-v${CART_VERSION}`, items);
}

export const useCart = create<CartStore>()(
  persist(
    (set, get) => ({
      items: [],
      version: CART_VERSION,
      currency: "BRL",
      isLoading: false,

      add: (item) => set((state) => {
        // Atualiza item se j√° existir, soma quantidade
        const idx = state.items.findIndex(
          i => cartKey(i) === cartKey(item)
        );
        let items;
        if (idx > -1) {
          items = [...state.items];
          items[idx].quantidade += item.quantidade;
        } else {
          items = [...state.items, item];
        }
        autoSync(items);
        return { items };
      }),

      remove: (id, cor, tamanho) => set((state) => {
        const items = state.items.filter(
          i => !(i.id === id && i.cor === cor && i.tamanho === tamanho)
        );
        autoSync(items);
        return { items };
      }),

      update: (id, cor, tamanho, data) => set((state) => {
        const items = state.items.map(i =>
          i.id === id && i.cor === cor && i.tamanho === tamanho
            ? { ...i, ...data }
            : i
        );
        autoSync(items);
        return { items };
      }),

      clear: () => {
        autoSync([]);
        set({ items: [] });
      },

      setCurrency: (currency) => set({ currency }),

      sync: async (userId) => {
        await idbSet(`cart-${userId || "anon"}-v${CART_VERSION}`, get().items);
      },

      restore: async (userId) => {
        const saved = await idbGet<CartItem[]>(`cart-${userId || "anon"}-v${CART_VERSION}`);
        if (saved) set({ items: saved });
      },

      checkout: async () => {
        set({ isLoading: true });
        try {
          // Checkout implementation placeholder
          await new Promise(resolve => setTimeout(resolve, 1000));
        } finally {
          set({ isLoading: false });
        }
      },
    }),
    {
      name: "insanyck-cart-v2",
      storage: {
        getItem: async (name: string) => {
          try { return (await idbGet(name)) || null; }
          catch { return null; }
        },
        setItem: async (name: string, value: any) => { await idbSet(name, value); },
        removeItem: async (name: string) => { await idbDel(name); }
      }
    }
  )
);



    üìÑ wishlist.ts

============================================================
FILE: src\store\wishlist.ts
============================================================
// INSANYCK STEP 8
import { create } from "zustand";
import { persist } from "zustand/middleware";

export type WishlistItem = {
  id: string;       // uid local
  slug: string;
  title: string;
  priceCents: number;
  image?: string;
};

type WishlistState = {
  hydrated: boolean;
  items: WishlistItem[];
  has: (_slug: string) => boolean;
  add: (_item: Omit<WishlistItem, "id">) => void;
  removeBySlug: (_slug: string) => void;
  clear: () => void;
  syncWithServer: (_sessionUserId?: string) => Promise<void>;
};

export const useWishlist = create<WishlistState>()(
  persist(
    (set, get) => ({
      hydrated: false,
      items: [],
      has: (slug) => get().items.some((i) => i.slug === slug),
      add: (item) => {
        set((s) => {
          if (s.items.some((x) => x.slug === item.slug)) return s;
          const id = crypto?.randomUUID?.() ?? String(Date.now());
          return { items: [{ id, ...item }, ...s.items] };
        });
      },
      removeBySlug: (slug) => set((s) => ({ items: s.items.filter((i) => i.slug !== slug) })),
      clear: () => set({ items: [] }),
      syncWithServer: async (sessionUserId) => {
        if (!sessionUserId || typeof window === "undefined") return;
        try {
          // Puxa do servidor e faz uni√£o simples (server vence)
          const res = await fetch("/api/account/wishlist", { method: "GET" });
          if (!res.ok) return;
          const data = await res.json();
          const serverSlugs = new Set<string>((data.items ?? []).map((i: any) => i.slug));
          // Envia ao server os que s√≥ existem localmente
          for (const it of get().items) {
            if (!serverSlugs.has(it.slug)) {
              await fetch("/api/account/wishlist", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                  slug: it.slug,
                  title: it.title,
                  priceCents: it.priceCents,
                  image: it.image,
                }),
              });
            }
          }
          // Atualiza store com o servidor
          const merged = (data.items ?? []).map((x: any) => ({
            id: x.id,
            slug: x.slug,
            title: x.title,
            priceCents: x.priceCents,
            image: x.image ?? undefined,
          }));
          set({ items: merged });
        } catch {
          // silencioso
        }
      },
    }),
    {
      name: "insanyck:wishlist:v1",
      onRehydrateStorage: () => (state) => {
        if (state) state.hydrated = true;
      },
      partialize: (s) => ({ items: s.items }),
    }
  )
);



  üìÅ styles/
    üìÑ fonts.ts

============================================================
FILE: src\styles\fonts.ts
============================================================
// src/styles/fonts.ts
import { League_Spartan } from "next/font/google";

// Fonte de marca (geom√©trica/robusta). Ajuste os pesos conforme o gosto.
export const brandFont = League_Spartan({
  subsets: ["latin"],
  weight: ["700", "800", "900"],
  variable: "--font-brand", // exp√µe a vari√°vel para usarmos em CSS
});



    üìÑ globals.css

============================================================
FILE: src\styles\globals.css
============================================================
/* INSANYCK ‚Äî GLOBALS (Design System Premium, Tailwind v4) */
@import "tailwindcss";

/* =========================================================
   TOKENS (CSS Vars) ‚Äî cores, tipografia, motion, etc.
   ========================================================= */
:root {
  /* Surfaces */
  --bg-0: #0b0b0b;
  --bg-1: #111213;
  --bg-2: #1a1a1a;

  /* Texto */
  --text-primary: rgba(255,255,255,.95);
  --text-secondary: rgba(255,255,255,.75);
  --text-muted: rgba(255,255,255,.55);

  /* Stroke / Glass */
  --stroke-default: rgba(255,255,255,.12);
  --stroke-hover: rgba(255,255,255,.20);
  --glass-weak: rgba(255,255,255,.04);
  --glass-medium: rgba(255,255,255,.08);
  --glass-strong: rgba(255,255,255,.12);

  /* Brand (Gold) */
  --gold-300: #fde047;
  --gold-400: #facc15; /* prim√°ria */
  --gold-500: #eab308;
  --brand: var(--gold-400);

  /* Sombras */
  --shadow-sm: 0 1px 2px rgba(0,0,0,.15);
  --shadow-md: 0 4px 6px -1px rgba(0,0,0,.20), 0 2px 4px -1px rgba(0,0,0,.10);
  --shadow-lg: 0 10px 15px -3px rgba(0,0,0,.25), 0 4px 6px -2px rgba(0,0,0,.15);
  --shadow-xl: 0 20px 25px -5px rgba(0,0,0,.30), 0 10px 10px -5px rgba(0,0,0,.15);
  --shadow-glow: 0 0 30px rgba(250,204,21,.15);
  --shadow-glow-strong: 0 0 60px rgba(250,204,21,.25);

  /* Tipografia (usa sua vari√°vel se existir) */
  --font-display: var(--font-brand, ui-sans-serif, system-ui);
  --font-body: var(--font-brand, ui-sans-serif, system-ui);
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

  /* Motion */
  --duration-fast: 150ms;
  --duration-normal: 200ms;
  --duration-slow: 300ms;
  --ease-out: cubic-bezier(.25,.46,.45,.94);
  --ease-in-out: cubic-bezier(.4,0,.2,1);
  --ease-premium: cubic-bezier(.2,0,0,1);
  --spring: cubic-bezier(.34,1.56,.64,1);

  /* ===== Aliases p/ retrocompatibilidade (seu CSS antigo) ===== */
  --text: var(--text-primary);
  --muted: var(--text-secondary);
  --stroke: var(--stroke-default);
  --ghost: var(--glass-weak);
  --cta: #f3f3f3;
}

/* =========================================================
   MAPEAMENTO PARA TAILWIND v4 (@theme inline)
   ========================================================= */
@theme inline {
  --color-bg-0: var(--bg-0);
  --color-bg-1: var(--bg-1);
  --color-text: var(--text-primary);
  --color-text-muted: var(--text-secondary);
  --color-stroke: var(--stroke-default);
  --color-brand: var(--brand);
  --font-sans: var(--font-body);
  --font-mono: var(--font-mono);
}

/* =========================================================
   BASE
   ========================================================= */
html {
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

html, body, #__next { height: 100%; margin: 0; padding: 0; }

body {
  font-family: var(--font-body);
  color: var(--text-primary);
  background:
    radial-gradient(ellipse 1400px 800px at 20% -20%, rgba(250,204,21,.06), transparent 60%),
    radial-gradient(ellipse 1000px 600px at 80% 120%, rgba(255,255,255,.03), transparent 50%),
    var(--bg-0);
  line-height: 1.6;
  overflow-x: hidden;
}

/* A11y */
*:focus-visible {
  outline: 2px solid var(--gold-400);
  outline-offset: 2px;
}

/* Scrollbar (WebKit) */
::-webkit-scrollbar { width: 8px; height: 8px; }
::-webkit-scrollbar-track { background: var(--bg-1); }
::-webkit-scrollbar-thumb { background: var(--stroke-default); border-radius: 9999px; }
::-webkit-scrollbar-thumb:hover { background: var(--stroke-hover); }

/* Reduced Motion */
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: .01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: .01ms !important;
    scroll-behavior: auto !important;
  }
  html { scroll-behavior: auto !important; }
  
  /* Disable framer-motion animations */
  [data-framer-motion] {
    transform: none !important;
    animation: none !important;
  }
}

/* =========================================================
   TIPOGRAFIA UTIL (para t√≠tulos/manifesto, compat√≠vel com seu mock)
   ========================================================= */
.text-display-2xl {
  font-family: var(--font-display);
  font-size: clamp(56px, 9vw, 112px);
  font-weight: 700;
  line-height: 1.05;
  letter-spacing: .24em; /* tracking do mock */
}

.text-display-xl {
  font-family: var(--font-display);
  font-size: clamp(32px, 5vw, 72px);
  font-weight: 700;
  line-height: 1.1;
}

.text-body-lg { font-size: 1.125rem; line-height: 1.7; color: var(--text-secondary); }
.text-body    { font-size: 1rem;    line-height: 1.6; color: var(--text-secondary); }
.text-caption { font-size: .875rem; line-height: 1.5; color: var(--text-muted); }

/* =========================================================
   CONTAINERS / LAYOUT
   ========================================================= */
.insanyck-container { min-height: 100vh; position: relative; }

.insanyck-section {
  padding: 4rem 1rem; /* mobile */
  max-width: 1280px;
  margin-inline: auto;
}
@media (min-width: 768px)  { .insanyck-section { padding: 4rem 2rem; } }
@media (min-width: 1200px) { .insanyck-section { padding: 4rem 3rem; } }

/* Pequeno halo auxiliar pra qualquer se√ß√£o */
.section-halo {
  position: relative;
}
.section-halo::before {
  content: "";
  position: absolute; inset: 0;
  background: radial-gradient(60% 60% at 50% 35%, rgba(255,255,255,.06) 0%, rgba(255,255,255,0) 60%);
  pointer-events: none;
}

/* =========================================================
   BOT√ïES (padr√£o: usar duas classes no JSX, ex.: "btn btn--primary")
   ========================================================= */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: .5rem;
  padding: 1rem 1.5rem;
  border-radius: 1rem;
  font-weight: 600;
  font-size: 1rem;
  line-height: 1;
  cursor: pointer;
  text-decoration: none;
  user-select: none;
  position: relative;
  transition: transform var(--duration-normal) var(--ease-out), box-shadow var(--duration-normal) var(--ease-out), background var(--duration-normal) var(--ease-out);
}

.btn--primary {
  background: linear-gradient(135deg, var(--gold-400), var(--gold-500));
  color: var(--bg-0);
  box-shadow: var(--shadow-md), var(--shadow-glow);
}
.btn--primary:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg), var(--shadow-glow-strong);
  background: linear-gradient(135deg, var(--gold-300), var(--gold-400));
}
.btn--primary:active { transform: translateY(0); transition-duration: var(--duration-fast); }

.btn--ghost {
  background: var(--glass-weak);
  border: 1px solid var(--stroke-default);
  color: var(--text-primary);
  backdrop-filter: blur(12px);
}
.btn--ghost:hover {
  background: var(--glass-medium);
  border-color: var(--stroke-hover);
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

/* === Alias para compatibilidade com c√≥digo antigo === */
.btn-ghost { /* se em algum ponto do projeto s√≥ tiver "btn-ghost" */
  background: var(--glass-weak);
  border: 1px solid var(--stroke-default);
  color: var(--text-primary);
}

/* =========================================================
   GLASS SURFACES / NAV / MODAL
   ========================================================= */
.glass-card {
  background: var(--glass-weak);
  backdrop-filter: blur(16px);
  border: 1px solid var(--stroke-default);
  border-radius: 1.5rem;
  box-shadow: var(--shadow-lg);
}
.glass-navbar {
  background: rgba(11,11,11,.85);
  backdrop-filter: blur(24px) saturate(1.2);
  /* Remova/adicione a hairline conforme a tela de refer√™ncia */
  /* border-bottom: 1px solid var(--stroke-default); */
}
.glass-modal {
  background: rgba(17,18,19,.95);
  backdrop-filter: blur(32px);
  border: 1px solid var(--stroke-default);
  border-radius: 1rem;
}

/* =========================================================
   GRADIENTES / TEXTO DOURADO
   ========================================================= */
.gradient-gold { background: linear-gradient(135deg, var(--gold-400), var(--gold-500)); }
.gradient-text-gold {
  background: linear-gradient(135deg, var(--gold-300), var(--gold-500));
  -webkit-background-clip: text; background-clip: text;
  -webkit-text-fill-color: transparent;
}

/* =========================================================
   ANIMA√á√ïES (cinematogr√°ficas base)
   ========================================================= */
@keyframes fadeInUp   { from { opacity:0; transform: translateY(30px) } to { opacity:1; transform:none } }
@keyframes fadeInScal { from { opacity:0; transform: scale(.95) }     to { opacity:1; transform:scale(1) } }
@keyframes pulseGlow  { 0%,100% { opacity:.6; transform:scale(1) } 50% { opacity:1; transform:scale(1.02) } }
@keyframes shimmer    { from { transform: translateX(-100%) } to { transform: translateX(100%) } }

.animate-fade-in-up    { animation: fadeInUp var(--duration-slow) var(--ease-out) both; }
.animate-fade-in-scale { animation: fadeInScal var(--duration-slow) var(--ease-out) both; }
.animate-pulse-glow    { animation: pulseGlow 2s var(--ease-in-out) infinite; }

.shimmer-effect { position: relative; overflow: hidden; }
.shimmer-effect::after {
  content:""; position:absolute; inset:0;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,.12), transparent);
  animation: shimmer 2s infinite;
}

/* =========================================================
   MOBILE TUNING
   ========================================================= */
@media (max-width: 768px) {
  .text-display-2xl { font-size: 2.5rem; letter-spacing: .18em; }
  .insanyck-section { padding: 2rem 1rem; }
  .btn { padding: .75rem 1rem; min-height: 44px; }
}

/* =========================================================
   PRINT (seguran√ßa)
   ========================================================= */
@media print {
  * { background: #fff !important; color: #000 !important; box-shadow: none !important; }
}

/* =========================================================
   TRANSI√á√ïES PREMIUM - Utilit√°rias consistentes
   ========================================================= */
.transition-premium {
  transition: all var(--duration-fast) var(--ease-premium);
}

.transition-premium-slow {
  transition: all var(--duration-normal) var(--ease-premium);
}

.transition-colors-premium {
  transition: color var(--duration-fast) var(--ease-premium), 
              background-color var(--duration-fast) var(--ease-premium),
              border-color var(--duration-fast) var(--ease-premium);
}

.transition-transform-premium {
  transition: transform var(--duration-fast) var(--ease-premium);
}

.transition-shadow-premium {
  transition: box-shadow var(--duration-fast) var(--ease-premium);
}
/* INSANYCK STEP 7.1 PATCH ‚Äî defensivo para textos que apare√ßam verticais por engano */
.insanyck-reset-text {
  writing-mode: horizontal-tb;
  text-orientation: mixed;
}

/* INSANYCK STEP 7.1 PATCH ‚Äî acessibilidade: melhora foco em fundo escuro com hairline */
:focus-visible {
  outline-color: var(--gold-400);
  outline-width: 2px;
  outline-offset: 2px;
}

/* INSANYCK STEP 9 ‚Äî halo cinematogr√°fico leve */
.halo-cinema {
  position: relative;
}
.halo-cinema::before {
  content: "";
  position: absolute;
  inset: -10px;
  border-radius: 24px;
  background: radial-gradient(
    120% 60% at 80% 20%,
    rgba(255,255,255,.08) 0%,
    rgba(255,255,255,0) 60%
  );
  pointer-events: none;
  filter: blur(8px);
}

/* =========================================================
   INSANYCK STEP 9 ‚Äî Bot√µes premium (glass + hairline + micro-elevation)
   (Compat√≠vel com Tailwind v4: sem @apply de classe custom)
   ========================================================= */
   @layer components {
    /* Base (se quiser usar junto no futuro) */
    .btn-insanyck {
      @apply inline-flex items-center justify-center rounded-xl px-5 py-2.5
             text-[14px] font-semibold tracking-wide select-none
             border transition-all duration-150 ease-out
             focus:outline-none focus-visible:ring-2 focus-visible:ring-white/30
             disabled:opacity-60 disabled:cursor-not-allowed;
    }
  
    /* Variante PRIMARY ‚Äî inclui a base inteira (n√£o precisa usar duas classes no HTML) */
    .btn-insanyck--primary {
      @apply inline-flex items-center justify-center rounded-xl px-5 py-2.5
             text-[14px] font-semibold tracking-wide select-none
             border transition-all duration-150 ease-out
             focus:outline-none focus-visible:ring-2 focus-visible:ring-white/30
             disabled:opacity-60 disabled:cursor-not-allowed
             border-white/10 bg-white/90 text-black
             hover:bg-white hover:-translate-y-px active:translate-y-0;
    }
  
    /* Variante GHOST ‚Äî inclui a base inteira (n√£o precisa usar duas classes no HTML) */
    .btn-insanyck--ghost {
      @apply inline-flex items-center justify-center rounded-xl px-5 py-2.5
             text-[14px] font-semibold tracking-wide select-none
             border transition-all duration-150 ease-out
             focus:outline-none focus-visible:ring-2 focus-visible:ring-white/30
             disabled:opacity-60 disabled:cursor-not-allowed
             border-white/10 bg-white/5 text-white/90
             hover:bg-white/10 hover:border-white/20 hover:-translate-y-px active:translate-y-0;
    }
  }
  

/* =========================================================
   INSANYCK STEP 9 ‚Äî Cinematic Bloom (n√£o usar em checkout/pagamento)
   ========================================================= */
.insanyck-bloom {
  position: relative;
  isolation: isolate;
}
.insanyck-bloom::before {
  content: "";
  position: absolute;
  inset: -10%;
  pointer-events: none;
  z-index: -1;
  opacity: 0; /* base neutra; variantes ajustam */
  transition: opacity .3s ease-out;
  background:
    radial-gradient(60% 60% at 50% 30%, rgba(255,255,255,.06) 0%, rgba(255,255,255,0) 50%),
    radial-gradient(40% 40% at 80% 10%, rgba(250,204,21,.08) 0%, rgba(250,204,21,0) 60%); /* usa o dourado do projeto */
  filter: blur(12px);
  mix-blend-mode: screen;
}
@media (prefers-reduced-motion: no-preference) {
  .insanyck-bloom--soft::before { opacity: .24; }
  .insanyck-bloom--edge::before { opacity: .18; filter: blur(10px) saturate(1.05); }
}

/* =========================================================
   INSANYCK STEP 9 ‚Äî Skeletons (grid/list/text/thumb)
   ========================================================= */
@keyframes insanyck-shimmer {
  0%   { background-position: -200% 0; }
  100% { background-position:  200% 0; }
}
.skl {
  border-radius: 14px;
  background: linear-gradient(90deg,
               rgba(255,255,255,.05) 25%,
               rgba(255,255,255,.09) 37%,
               rgba(255,255,255,.05) 63%);
  background-size: 400% 100%;
  animation: insanyck-shimmer 1400ms linear infinite;
  border: 1px solid rgba(255,255,255,.08);
}
.skl--text    { height: 1rem; }
.skl--text-lg { height: 1.25rem; }
.skl--thumb   { aspect-ratio: 4 / 5; width: 100%; }



  üìÑ tsconfig.json

============================================================
FILE: src\tsconfig.json
============================================================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "incremental": true,
    "module": "esnext",
    "esModuleInterop": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve"
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}



  üìÅ types/
    üìÑ global.d.ts

============================================================
FILE: src\types\global.d.ts
============================================================
// src/types/global.d.ts

import { MongoClient } from "mongodb";

// Permite adicionar propriedades customizadas ao globalThis no TypeScript
declare global {
  // eslint-disable-next-line no-var
  var _mongoClientPromise: Promise<MongoClient> | undefined;
}

export {};



    üìÑ i18n-tfunction.d.ts

============================================================
FILE: src\types\i18n-tfunction.d.ts
============================================================
// Loosen TFunction just enough to accept string keys
import "i18next";

declare module "i18next" {
  interface _TFunction {
    (_key: string, _options?: any): string;
    (_keys: string[], _options?: any): string;
  }
}


    üìÑ i18next.d.ts

============================================================
FILE: src\types\i18next.d.ts
============================================================
// INSANYCK STEP 10 ‚Äî Tipagem estrita i18next (todos os namespaces reais)
import 'i18next';

import common from '../../public/locales/pt/common.json';
import nav from '../../public/locales/pt/nav.json';
import home from '../../public/locales/pt/home.json';
import product from '../../public/locales/pt/product.json';
import pdp from '../../public/locales/pt/pdp.json';
import plp from '../../public/locales/pt/plp.json';
import catalog from '../../public/locales/pt/catalog.json';
import cart from '../../public/locales/pt/cart.json';
import bag from '../../public/locales/pt/bag.json';
import checkout from '../../public/locales/pt/checkout.json';
import account from '../../public/locales/pt/account.json';
import wishlist from '../../public/locales/pt/wishlist.json';
import search from '../../public/locales/pt/search.json';
import order from '../../public/locales/pt/order.json';
import ui from '../../public/locales/pt/ui.json';
import admin from '../../public/locales/pt/admin.json';

declare module 'i18next' {
  interface _CustomTypeOptions {
    defaultNS: 'common';
    resources: {
      common: typeof common;
      nav: typeof nav;
      home: typeof home;
      product: typeof product;
      pdp: typeof pdp;
      plp: typeof plp;
      catalog: typeof catalog;
      cart: typeof cart;
      bag: typeof bag;
      checkout: typeof checkout;
      account: typeof account;
      wishlist: typeof wishlist;
      search: typeof search;
      order: typeof order;
      ui: typeof ui;
      admin: typeof admin;
    };
  }
}



    üìÑ next-auth.d.ts

============================================================
FILE: src\types\next-auth.d.ts
============================================================
// INSANYCK ‚Äî NextAuth augmentations
import { DefaultSession } from "next-auth";
import "next-auth/jwt";

declare module "next-auth" {
  // eslint-disable-next-line no-unused-vars
  interface Session {
    user?: DefaultSession["user"] & { id?: string | null };
  }
}
declare module "next-auth/jwt" {
  // eslint-disable-next-line no-unused-vars
  interface JWT {
    id?: string | null;
  }
}



    üìÑ next-i18next.d.ts

============================================================
FILE: src\types\next-i18next.d.ts
============================================================
// i18n Custom Types (lenient but typed)
import "i18next";

declare module "i18next" {
  interface _CustomTypeOptions {
    resources: Record<string, Record<string, string>>;
    defaultNS: "common";
    returnNull: false;
    nsSeparator: ":";     // usamos "namespace:key"
    keySeparator: ".";    // "path.to.key"
  }
}


    üìÑ product.ts

============================================================
FILE: src\types\product.ts
============================================================
// INSANYCK STEP 11 ‚Äî Real Product Types from Prisma Schema
import { Product as PrismaProduct, ProductImage, Variant, Price, Inventory, Category, VariantOption, OptionValue, Option } from '@prisma/client';

// Extended Product type with all relations we typically need
export type Product = PrismaProduct & {
  category?: Category | null;
  images?: ProductImage[];
  variants?: (Variant & {
    price?: Price | null;
    inventory?: Inventory | null;
    options?: (VariantOption & {
      optionValue: OptionValue & {
        option: Option;
      };
    })[];
  })[];
};

// Simplified Product for cards/grids (matches mock interface for compatibility)
export type ProductCardData = {
  id: string;
  slug: string;
  title: string;
  price: string | number; // display price, calculated from variants
  thumbs?: {
    front?: string;
  };
  images?: {
    front?: string;
  };
  status?: "new" | "soldout" | string;
};

// Product for API responses
export type ProductWithVariants = Product;

// Helper to convert Prisma Product to Card format
export function productToCardData(product: Product): ProductCardData {
  // Get first image
  const firstImage = product.images?.[0]?.url || "/products/placeholder/front.webp";
  
  // Get price from first active variant
  const activeVariant = product.variants?.find(v => v.status === 'active');
  const priceCents = activeVariant?.price?.cents || 0;
  const priceDisplay = priceCents > 0 
    ? `R$ ${(priceCents / 100).toFixed(2).replace('.', ',')}`
    : "Consulte";

  // Check if sold out (no inventory or all variants out of stock)
  const isSoldOut = !product.variants?.some(v => 
    v.status === 'active' && 
    (v.inventory?.quantity || 0) > (v.inventory?.reserved || 0)
  );

  return {
    id: product.id,
    slug: product.slug,
    title: product.title,
    price: priceDisplay,
    thumbs: {
      front: firstImage
    },
    images: {
      front: firstImage
    },
    status: isSoldOut ? "soldout" : (product.status === "active" ? undefined : "new")
  };
}


üìÑ STRIPE_DEV_SETUP.md

============================================================
FILE: STRIPE_DEV_SETUP.md
============================================================
# INSANYCK ‚Äî Stripe Development Setup

## Overview

This guide explains how to set up Stripe CLI for local development testing, especially for webhook endpoints.

## Prerequisites

1. Stripe account (test mode)
2. Stripe CLI installed locally
3. Local development environment running on `http://localhost:3000`

## Installation

### Install Stripe CLI

**Windows:**
```bash
# Using Scoop
scoop install stripe

# Or download from https://github.com/stripe/stripe-cli/releases
```

**macOS:**
```bash
# Using Homebrew
brew install stripe/stripe-cli/stripe
```

**Linux:**
```bash
# Download and install from GitHub releases
wget https://github.com/stripe/stripe-cli/releases/latest/download/stripe_linux_x86_64.tar.gz
tar -xvf stripe_linux_x86_64.tar.gz
sudo mv stripe /usr/local/bin/
```

## Configuration

### 1. Login to Stripe

```bash
stripe login
```

This will open your browser to authenticate with your Stripe account.

### 2. Test the Installation

```bash
stripe --version
stripe config --list
```

## Webhook Development Setup

### 1. Start the Webhook Listener

In a separate terminal, run:

```bash
stripe listen --forward-to localhost:3000/api/stripe/webhook
```

This command will:
- Listen for all Stripe events in your account
- Forward them to your local webhook endpoint
- Display a webhook signing secret (starts with `whsec_`)

### 2. Copy the Webhook Secret

From the output, copy the webhook signing secret and add it to your `.env.local`:

```bash
# Example output:
# > Ready! Your webhook signing secret is whsec_1234567890abcdef...

# Add to .env.local:
STRIPE_WEBHOOK_SECRET="whsec_1234567890abcdef..."
```

### 3. Required Environment Variables

Ensure these variables are set in your `.env.local`:

```bash
# Stripe Keys (from https://dashboard.stripe.com/test/apikeys)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_51..."  # Client-side (public)
STRIPE_SECRET_KEY="sk_test_51..."                    # Server-side (private)

# Webhook Secret (from stripe listen command)
STRIPE_WEBHOOK_SECRET="whsec_..."

# API Version (pinned for consistency)
STRIPE_API_VERSION="2025-07-30.basil"
```

## Testing Webhooks

### 1. Test Payment Flow

1. Start your Next.js development server:
   ```bash
   npm run dev
   ```

2. In another terminal, start the Stripe listener:
   ```bash
   stripe listen --forward-to localhost:3000/api/stripe/webhook
   ```

3. Create a test checkout session through your app

4. Monitor the webhook events in the Stripe CLI terminal

### 2. Trigger Test Events

You can manually trigger webhook events for testing:

```bash
# Trigger a successful payment
stripe trigger checkout.session.completed

# Trigger a failed payment
stripe trigger payment_intent.payment_failed

# List all available events
stripe trigger --help
```

### 3. View Event Logs

```bash
# View recent events
stripe events list

# View specific event details
stripe events retrieve evt_1234567890
```

## Webhook Endpoint Details

**Endpoint:** `/api/stripe/webhook`
**Method:** `POST`
**Content-Type:** `application/json`

The webhook handler:
- Verifies the signature using `STRIPE_WEBHOOK_SECRET`
- Processes `checkout.session.completed` events
- Logs events in development mode
- Returns `{ received: true }` on success

## Common Events

| Event | Description | When it's triggered |
|-------|-------------|-------------------|
| `checkout.session.completed` | Checkout successful | Customer completes payment |
| `payment_intent.succeeded` | Payment confirmed | Payment is successfully processed |
| `invoice.payment_succeeded` | Invoice paid | Subscription or invoice payment |
| `customer.subscription.created` | New subscription | Customer subscribes to a plan |

## Development Workflow

1. **Start development server:**
   ```bash
   npm run dev
   ```

2. **Start webhook listener:**
   ```bash
   stripe listen --forward-to localhost:3000/api/stripe/webhook
   ```

3. **Test payment flows:**
   - Use test card numbers (e.g., `4242424242424242`)
   - Complete checkout processes
   - Monitor webhook events in terminal

4. **Debug webhook issues:**
   ```bash
   # View webhook attempts
   stripe events list --type=checkout.session.completed
   
   # Retry failed webhook
   stripe events resend evt_1234567890
   ```

## Production Considerations

When deploying to production:

1. **Create production webhook endpoint** in Stripe Dashboard:
   - URL: `https://yourdomain.com/api/stripe/webhook`
   - Events: Select specific events you need

2. **Update environment variables:**
   - Use live keys (`pk_live_*`, `sk_live_*`)
   - Use production webhook secret from Dashboard

3. **Test thoroughly:**
   - Use live card processing in test mode first
   - Monitor webhook delivery in Stripe Dashboard

## Troubleshooting

### Common Issues

**"Webhook signature verification failed"**
- Ensure `STRIPE_WEBHOOK_SECRET` matches the CLI output
- Check that the raw body is being passed to `stripe.webhooks.constructEvent`

**"Connection refused"**
- Ensure Next.js dev server is running on port 3000
- Check that the webhook URL is correct

**"No webhook secret found"**
- Copy the secret from `stripe listen` output
- Restart your development server after adding the secret

### Debug Commands

```bash
# Check Stripe CLI configuration
stripe config --list

# Test webhook endpoint directly
curl -X POST localhost:3000/api/stripe/webhook \
  -H "Content-Type: application/json" \
  -d '{"test": true}'

# View recent webhook attempts
stripe events list --limit 10
```

## Resources

- [Stripe CLI Documentation](https://stripe.com/docs/stripe-cli)
- [Testing Webhooks](https://stripe.com/docs/webhooks/test)
- [Webhook Event Reference](https://stripe.com/docs/api/events/types)
- [Test Card Numbers](https://stripe.com/docs/testing#cards)


üìÅ test-results/
  üìÑ .last-run.json

============================================================
FILE: test-results\.last-run.json
============================================================
{
  "status": "failed",
  "failedTests": [
    "af1958ff6ea671c83a77-1868c4f8e074c5d4ea54",
    "a2e47942fbbf24ff7ed9-9fde0e863b38805eedfc"
  ]
}


  üìÅ favoritos-Favoritos-Wishli-6e462-or-populated-wishlist-state-chromium/
    üìÑ error-context.md

============================================================
FILE: test-results\favoritos-Favoritos-Wishli-6e462-or-populated-wishlist-state-chromium\error-context.md
============================================================
# Page snapshot

```yaml
- generic [active] [ref=e1]:
  - generic [ref=e2]:
    - navigation "Principal" [ref=e3]:
      - generic [ref=e4]:
        - link "Ir para a Home" [ref=e5] [cursor=pointer]:
          - /url: /
          - generic [ref=e6] [cursor=pointer]: INSANYCK
        - navigation [ref=e7]:
          - link "Novidades" [ref=e8] [cursor=pointer]:
            - /url: /novidades
          - link "Loja" [ref=e9] [cursor=pointer]:
            - /url: /loja
          - link "Cole√ß√£o" [ref=e10] [cursor=pointer]:
            - /url: /colecao
        - generic [ref=e11]:
          - generic "Idioma" [ref=e12]:
            - button "PT" [pressed] [ref=e13]
            - generic [ref=e14]: /
            - button "EN" [ref=e15]
          - button "Buscar/" [ref=e17]:
            - text: Buscar
            - generic [ref=e18]: /
          - link "Entrar" [ref=e19] [cursor=pointer]:
            - /url: /conta/login
          - link "Pesquisar" [ref=e20] [cursor=pointer]:
            - /url: /buscar
            - generic [ref=e21] [cursor=pointer]: Pesquisar
            - img [ref=e22] [cursor=pointer]
          - link "Favoritos" [ref=e25] [cursor=pointer]:
            - /url: /favoritos
            - generic [ref=e26] [cursor=pointer]: Favoritos
            - img [ref=e27] [cursor=pointer]
          - button "Carrinho" [ref=e29]:
            - generic [ref=e30]: Carrinho
            - img [ref=e31]
    - main [ref=e34]:
      - generic [ref=e35]:
        - heading "Favoritos (0)" [level=1] [ref=e36]:
          - text: Favoritos
          - generic [ref=e37]: (0)
        - generic [ref=e39]:
          - generic [ref=e40]:
            - img [ref=e44]
            - img [ref=e47]
          - generic [ref=e53]:
            - heading "Seus favoritos aguardam" [level=3] [ref=e54]
            - paragraph [ref=e55]: Salve as pe√ßas que capturam sua ess√™ncia e volte quando estiver pronto para decidir
            - generic [ref=e56]:
              - link "Descobrir pe√ßas" [ref=e57] [cursor=pointer]:
                - /url: /pt/loja
                - button "Descobrir pe√ßas" [ref=e58]
              - link "Voltar ao in√≠cio" [ref=e59] [cursor=pointer]:
                - /url: /pt
                - button "Voltar ao in√≠cio" [ref=e60]
            - generic [ref=e61]:
              - img [ref=e62]
              - text: Toque no cora√ß√£o para salvar suas pe√ßas favoritas
  - button "Open Next.js Dev Tools" [ref=e69] [cursor=pointer]:
    - img [ref=e70] [cursor=pointer]
  - alert [ref=e73]
```


  üìÅ sacola-Sacola-Cart-Page-sh-768c7--empty-cart-state-correctly-chromium/
    üìÑ error-context.md

============================================================
FILE: test-results\sacola-Sacola-Cart-Page-sh-768c7--empty-cart-state-correctly-chromium\error-context.md
============================================================
# Page snapshot

```yaml
- generic [active] [ref=e1]:
  - generic [ref=e2]:
    - navigation "Principal" [ref=e3]:
      - generic [ref=e4]:
        - link "Ir para a Home" [ref=e5] [cursor=pointer]:
          - /url: /
          - generic [ref=e6] [cursor=pointer]: INSANYCK
        - navigation [ref=e7]:
          - link "Novidades" [ref=e8] [cursor=pointer]:
            - /url: /novidades
          - link "Loja" [ref=e9] [cursor=pointer]:
            - /url: /loja
          - link "Cole√ß√£o" [ref=e10] [cursor=pointer]:
            - /url: /colecao
        - generic [ref=e11]:
          - generic "Idioma" [ref=e12]:
            - button "PT" [pressed] [ref=e13]
            - generic [ref=e14]: /
            - button "EN" [ref=e15]
          - button "Buscar/" [ref=e17]:
            - text: Buscar
            - generic [ref=e18]: /
          - link "Entrar" [ref=e19] [cursor=pointer]:
            - /url: /conta/login
          - link "Pesquisar" [ref=e20] [cursor=pointer]:
            - /url: /buscar
            - generic [ref=e21] [cursor=pointer]: Pesquisar
            - img [ref=e22] [cursor=pointer]
          - link "Favoritos" [ref=e25] [cursor=pointer]:
            - /url: /favoritos
            - generic [ref=e26] [cursor=pointer]: Favoritos
            - img [ref=e27] [cursor=pointer]
          - button "Carrinho" [ref=e29]:
            - generic [ref=e30]: Carrinho
            - img [ref=e31]
    - main [ref=e34]:
      - heading "Sua sacola" [level=1] [ref=e35]
      - generic [ref=e37]:
        - generic [ref=e38]:
          - img [ref=e42]
          - img [ref=e46]
        - generic [ref=e48]:
          - heading "Sua sacola est√° vazia" [level=3] [ref=e49]
          - paragraph [ref=e50]: Descubra pe√ßas exclusivas que definem seu estilo √∫nico
          - generic [ref=e51]:
            - link "Explorar cole√ß√£o" [ref=e52] [cursor=pointer]:
              - /url: /pt/loja
              - button "Explorar cole√ß√£o" [ref=e53]
            - link "Ver favoritos" [ref=e54] [cursor=pointer]:
              - /url: /pt/favoritos
              - button "Ver favoritos" [ref=e55]:
                - img [ref=e56]
                - text: Ver favoritos
          - generic [ref=e58]: Frete gr√°tis para todo Brasil
  - button "Open Next.js Dev Tools" [ref=e64] [cursor=pointer]:
    - img [ref=e65] [cursor=pointer]
  - alert [ref=e68]
```


üìÅ test-results-a11y/
  üìÑ .last-run.json

============================================================
FILE: test-results-a11y\.last-run.json
============================================================
{
  "status": "passed",
  "failedTests": []
}


üìÅ tests/
  üìÅ a11y/
    üìÑ home.spec.ts

============================================================
FILE: tests\a11y\home.spec.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî A11y testing for home page
import { test, expect } from '@playwright/test';
import AxeBuilder from '@axe-core/playwright';
import { blockThirdParties } from './_utils/network';

test.describe('Home Page A11y', () => {
  test('should not have any automatically detectable accessibility issues', async ({ page }) => {
    await page.goto('/pt');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Ignorar skip link no foco inicial
    const active = await page.evaluate(() => (document.activeElement as HTMLElement)?.getAttribute?.('href'));
    if (active === '#conteudo') { await page.keyboard.press('Tab'); }
    await page.waitForSelector('h1', { timeout: 5000 }).catch(()=>{});

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Run axe scan with serious/critical violations only
    const results = await new AxeBuilder({ page }).include('main').analyze();
    expect(results.violations).toEqual([]);
  });

  test('should have proper focus management', async ({ page }) => {
    await page.goto('/pt');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Focar explicitamente o primeiro link do nav para ignorar skip link
    await page.locator('nav a').first().focus();
    
    // Check that focus is visible
    const focusedElement = await page.locator(':focus').first();
    await expect(focusedElement).toBeVisible();

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Test that focused element has proper outline/ring
    const focusedStyles = await focusedElement.evaluate((el) => {
      const styles = window.getComputedStyle(el);
      return {
        outline: styles.outline,
        outlineWidth: styles.outlineWidth,
        boxShadow: styles.boxShadow
      };
    });

    // Should have either outline or box-shadow for focus indicator
    const hasFocusIndicator = 
      focusedStyles.outline !== 'none' || 
      focusedStyles.outlineWidth !== '0px' ||
      focusedStyles.boxShadow.includes('rgb') ||
      focusedStyles.boxShadow !== 'none';

    expect(hasFocusIndicator).toBe(true);
  });

  test('should have proper heading hierarchy', async ({ page }) => {
    await page.goto('/pt');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });
    await page.waitForSelector('h1', { timeout: 5000 }).catch(()=>{});

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check heading hierarchy
    const headings = await page.locator('h1, h2, h3, h4, h5, h6').all();
    const headingLevels = [];

    for (const heading of headings) {
      const tagName = await heading.evaluate(el => el.tagName.toLowerCase());
      const level = parseInt(tagName.replace('h', ''));
      headingLevels.push(level);
    }

    // Should have at least one h1
    expect(headingLevels.filter(level => level === 1).length).toBeGreaterThanOrEqual(1);

    // Check that heading levels don't skip (no h3 without h2, etc.)
    for (let i = 1; i < headingLevels.length; i++) {
      const diff = headingLevels[i] - headingLevels[i - 1];
      expect(diff).toBeLessThanOrEqual(1);
    }
  });

  test('should have accessible images', async ({ page }) => {
    await page.goto('/pt');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check that critical images have alt text
    const images = await page.locator('img[src*="logo"], img[src*="hero"], img[src*="product"]').all();
    
    for (const img of images) {
      const alt = await img.getAttribute('alt');
      const ariaLabel = await img.getAttribute('aria-label');
      const role = await img.getAttribute('role');
      
      // Should have alt text or aria-label, unless decorative (role="presentation")
      if (role !== 'presentation' && role !== 'none') {
        expect(alt || ariaLabel).toBeTruthy();
        if (alt) {
          expect(alt.trim().length).toBeGreaterThan(0);
        }
      }
    }
  });
});


    üìÑ pdp.spec.ts

============================================================
FILE: tests\a11y\pdp.spec.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî A11y testing for product detail page
import { test, expect } from '@playwright/test';
import AxeBuilder from '@axe-core/playwright';
import { blockThirdParties } from './_utils/network';

test.describe('Product Detail A11y', () => {
  test('should not have any automatically detectable accessibility issues', async ({ page }) => {
    await page.goto('/pt/produto/oversized-classic');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Ignorar skip link no foco inicial
    const active = await page.evaluate(() => (document.activeElement as HTMLElement)?.getAttribute?.('href'));
    if (active === '#conteudo') { await page.keyboard.press('Tab'); }
    await page.waitForSelector('h1', { timeout: 5000 }).catch(()=>{});

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Run axe scan on product page
    const results = await new AxeBuilder({ page }).include('main').analyze();
    expect(results.violations).toEqual([]);
  });

  test('should have accessible product images', async ({ page }) => {
    await page.goto('/pt/produto/oversized-classic');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check product images
    const productImages = await page.locator('img[src*="product"], img[alt*="produto"], [data-testid="product-image"]').all();
    
    if (productImages.length > 0) {
      for (const img of productImages) {
        const alt = await img.getAttribute('alt');
        const ariaLabel = await img.getAttribute('aria-label');
        
        // Product images should have meaningful alt text
        expect(alt || ariaLabel).toBeTruthy();
        
        if (alt) {
          // Alt text should be descriptive, not just "image" or empty
          expect(alt.trim().length).toBeGreaterThan(3);
          expect(alt.toLowerCase()).not.toBe('image');
          expect(alt.toLowerCase()).not.toBe('img');
        }
      }
    }
  });

  test('should have accessible add to cart button', async ({ page }) => {
    await page.goto('/pt/produto/oversized-classic');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check add to cart button
    const addToCartButtons = await page.locator('button:has-text("Adicionar"), button:has-text("Carrinho"), [data-testid="add-to-cart"]').all();
    
    if (addToCartButtons.length > 0) {
      const button = addToCartButtons[0];
      
      // Should be focusable and have accessible name
      await button.focus();
      await expect(button).toBeFocused();
      
      const ariaLabel = await button.getAttribute('aria-label');
      const innerText = await button.innerText();
      
      expect(ariaLabel || innerText.trim()).toBeTruthy();
      
      // Should indicate loading state accessibly when clicked
      const ariaLive = await button.getAttribute('aria-live');
      const ariaBusy = await button.getAttribute('aria-busy');
      
      // Either should have aria-live region or aria-busy support
      if (!ariaLive) {
        // Button should support aria-busy for loading states
        expect(typeof ariaBusy === 'string' || ariaBusy === null).toBe(true);
      }
    }
  });

  test('should have accessible variant selector', async ({ page }) => {
    await page.goto('/pt/produto/oversized-classic');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check variant selector buttons and fieldsets
    const variantSelectors = await page.locator('select, [role="listbox"], [role="radiogroup"], fieldset').all();
    
    if (variantSelectors.length > 0) {
      for (const selector of variantSelectors) {
        const tagName = await selector.evaluate(el => el.tagName.toLowerCase());
        const role = await selector.getAttribute('role');
        
        // Should have label or legend
        if (tagName === 'select') {
          const id = await selector.getAttribute('id');
          if (id) {
            const label = await page.locator(`label[for="${id}"]`).count();
            const ariaLabel = await selector.getAttribute('aria-label');
            const ariaLabelledby = await selector.getAttribute('aria-labelledby');
            
            expect(label > 0 || ariaLabel || ariaLabelledby).toBeTruthy();
          }
        } else if (tagName === 'fieldset') {
          const legend = await selector.locator('legend').count();
          expect(legend).toBeGreaterThan(0);
          
          // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Test that variant buttons within fieldset are focusable
          const buttons = await selector.locator('button').all();
          if (buttons.length > 0) {
            await buttons[0].focus();
            await expect(buttons[0]).toBeFocused();
          }
        } else {
          // Should be keyboard navigable (for non-fieldset elements)
          await selector.focus();
          await expect(selector).toBeFocused();
        }
      }
    }
  });

  test('should have proper heading structure for product info', async ({ page }) => {
    await page.goto('/pt/produto/oversized-classic');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });
    await page.waitForSelector('h1', { timeout: 5000 }).catch(()=>{});

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check product page heading structure
    const productTitle = await page.locator('h1').count();
    expect(productTitle).toBeGreaterThanOrEqual(1);

    // Product title should contain meaningful text
    if (productTitle > 0) {
      const titleText = await page.locator('h1').first().innerText();
      expect(titleText.trim().length).toBeGreaterThan(0);
    }
    
    // Check section headings
    const allHeadings = await page.locator('h1, h2, h3, h4, h5, h6').all();
    
    for (const heading of allHeadings) {
      const text = await heading.innerText();
      expect(text.trim().length).toBeGreaterThan(0);
    }
  });
});


    üìÑ plp.spec.ts

============================================================
FILE: tests\a11y\plp.spec.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî A11y testing for product listing page
import { test, expect } from '@playwright/test';
import AxeBuilder from '@axe-core/playwright';
import { blockThirdParties } from './_utils/network';

test.describe('Product Listing A11y', () => {
  test('should not have any automatically detectable accessibility issues', async ({ page }) => {
    await page.goto('/pt/loja');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Ignorar skip link no foco inicial
    const active = await page.evaluate(() => (document.activeElement as HTMLElement)?.getAttribute?.('href'));
    if (active === '#conteudo') { await page.keyboard.press('Tab'); }
    await page.waitForSelector('h1', { timeout: 5000 }).catch(()=>{});

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Run axe scan focusing on product grid
    const results = await new AxeBuilder({ page }).include('main').analyze();
    expect(results.violations).toEqual([]);
  });

  test('should have accessible product cards', async ({ page }) => {
    await page.goto('/pt/loja');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check product cards accessibility
    const productCards = await page.locator('[data-testid="product-card"], article, .product-card').all();
    
    if (productCards.length > 0) {
      for (let i = 0; i < Math.min(3, productCards.length); i++) {
        const card = productCards[i];
        
        // Should have accessible name (either aria-label or inner text)
        const ariaLabel = await card.getAttribute('aria-label');
        const innerText = await card.innerText();
        
        expect(ariaLabel || innerText.trim()).toBeTruthy();
        
        // Should have proper role or semantic element
        const tagName = await card.evaluate(el => el.tagName.toLowerCase());
        const role = await card.getAttribute('role');
        
        // Should be article, section, or have proper role
        const isSemanticElement = ['article', 'section'].includes(tagName);
        const hasProperRole = role && ['article', 'listitem'].includes(role);
        
        expect(isSemanticElement || hasProperRole).toBe(true);
      }
    }
  });

  test('should have keyboard navigable filters', async ({ page }) => {
    await page.goto('/pt/loja');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check for filter controls
    const filterButtons = await page.locator('button:has-text("Filtro"), button:has-text("Filter"), [data-testid="filter"], .filter-button').all();
    
    if (filterButtons.length > 0) {
      const firstFilter = filterButtons[0];
      
      // Should be focusable
      await firstFilter.focus();
      await expect(firstFilter).toBeFocused();
      
      // Should have accessible name
      const ariaLabel = await firstFilter.getAttribute('aria-label');
      const innerText = await firstFilter.innerText();
      
      expect(ariaLabel || innerText.trim()).toBeTruthy();
      
      // Should be keyboard activatable
      await firstFilter.press('Enter');
      // Note: We don't check for actual filter panel opening as it depends on implementation
    }
  });

  test('should have proper list structure for products', async ({ page }) => {
    await page.goto('/pt/loja');
    await blockThirdParties(page);
    await page.waitForLoadState('domcontentloaded');
    await page.waitForSelector('main', { state: 'visible' });

    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî Check if products are in a list structure
    const productContainer = await page.locator('[role="list"], ul, ol, .product-grid, .products-list').first();
    
    if (await productContainer.count() > 0) {
      const role = await productContainer.getAttribute('role');
      const tagName = await productContainer.evaluate(el => el.tagName.toLowerCase());
      
      // Should be a list or have list role
      const isList = ['ul', 'ol'].includes(tagName) || role === 'list';
      expect(isList).toBe(true);
      
      // If it's a list, items should have listitem role or be li elements
      if (isList) {
        const items = await productContainer.locator('li, [role="listitem"]').all();
        expect(items.length).toBeGreaterThan(0);
      }
    }
  });
});


    üìÅ _utils/
      üìÑ network.ts

============================================================
FILE: tests\a11y\_utils\network.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî A11y network noise block
import { Page } from '@playwright/test';

export async function blockThirdParties(page: Page) {
  const re = /(googletagmanager|google-analytics|analytics|facebook|hotjar|sentry|vercel-analytics|doubleclick)\./i;
  await page.route('**/*', route => {
    const url = route.request().url();
    if (re.test(url)) return route.abort();
    return route.continue();
  });
}


  üìÅ e2e/
    üìÑ checkout.spec.ts

============================================================
FILE: tests\e2e\checkout.spec.ts
============================================================
import { test, expect } from '@playwright/test';

test.describe('Checkout Page', () => {
  // INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî freeze time for visual snapshots
  test.beforeEach(async ({ page }) => {
    await page.addInitScript(() => { 
      const fixed = 1700000000000; 
      Date.now = () => fixed as any; 
    });
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(120);
  });
  test('should load checkout page successfully', async ({ page }) => {
    await page.goto('/pt/checkout');
    
    // Check page loads successfully
    expect(page.url()).toContain('/checkout');
    
    // Check essential elements are present
    await expect(page.locator('header')).toBeVisible();
    await expect(page.locator('main')).toBeVisible();
  });

  test('should display checkout form or redirect appropriately', async ({ page }) => {
    // Mock Stripe API calls to prevent real API calls
    await page.route('**/api/stripe/**', async route => {
      await route.fulfill({
        status: 200,
        contentType: 'application/json',
        body: JSON.stringify({ 
          client_secret: 'pi_test_1234567890',
          status: 'requires_payment_method'
        }),
      });
    });

    await page.route('**/api/create-payment-intent', async route => {
      await route.fulfill({
        status: 200,
        contentType: 'application/json',
        body: JSON.stringify({ 
          client_secret: 'pi_test_1234567890',
          status: 'requires_payment_method'
        }),
      });
    });

    await page.goto('/pt/checkout');
    await page.waitForLoadState('networkidle');
    
    // Check for checkout form elements or empty cart redirect message
    const formSelectors = [
      'form',
      '[data-testid="checkout-form"]',
      '[class*="checkout-form"]',
      'input[type="email"]',
      'input[name="email"]'
    ];
    
    const emptyCartSelectors = [
      'text="carrinho vazio"',
      'text="sacola vazia"',
      '[data-testid="empty-cart"]',
      'a[href*="loja"]',
      'a[href*="produto"]'
    ];
    
    let hasForm = false;
    for (const selector of formSelectors) {
      const element = page.locator(selector);
      if (await element.count() > 0 && await element.first().isVisible()) {
        hasForm = true;
        break;
      }
    }
    
    let hasEmptyCartMessage = false;
    for (const selector of emptyCartSelectors) {
      const element = page.locator(selector);
      if (await element.count() > 0) {
        hasEmptyCartMessage = true;
        break;
      }
    }
    
    // Either checkout form or empty cart message should be present
    expect(hasForm || hasEmptyCartMessage).toBe(true);
    
    // Take visual snapshot
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî reduced motion and wait
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(100);
    await expect(page.locator('main')).toHaveScreenshot('checkout-main.png');
  });

  test('should display order summary section', async ({ page }) => {
    // Mock Stripe API calls
    await page.route('**/api/stripe/**', async route => {
      await route.fulfill({
        status: 200,
        contentType: 'application/json',
        body: JSON.stringify({ 
          client_secret: 'pi_test_1234567890' 
        }),
      });
    });

    await page.goto('/pt/checkout');
    await page.waitForLoadState('networkidle');
    
    // Check for order summary or cart summary elements
    const summarySelectors = [
      '[data-testid="order-summary"]',
      '[data-testid="cart-summary"]',
      '[class*="summary"]',
      '[class*="order-total"]',
      'text="Total"',
      'text="Subtotal"'
    ];
    
    let hasSummary = false;
    for (const selector of summarySelectors) {
      const element = page.locator(selector);
      if (await element.count() > 0) {
        hasSummary = true;
        break;
      }
    }
    
    // Summary section should be present if we have items in cart
    // If cart is empty, this test is still valid as the page should handle it gracefully
    if (hasSummary) {
      expect(hasSummary).toBe(true);
    }
  });
});


    üìÅ checkout.spec.ts-snapshots/
    üìÑ favoritos.spec.ts

============================================================
FILE: tests\e2e\favoritos.spec.ts
============================================================
import { test, expect } from '@playwright/test';

test.describe('Favoritos (Wishlist) Page', () => {
  // INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî freeze time for visual snapshots
  test.beforeEach(async ({ page }) => {
    await page.addInitScript(() => { 
      const fixed = 1700000000000; 
      Date.now = () => fixed as any; 
    });
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(120);
  });
  test('should load favorites page successfully', async ({ page }) => {
    await page.goto('/pt/favoritos');
    
    // Check page loads successfully
    expect(page.url()).toContain('/favoritos');
    
    // Check essential elements are present
    await expect(page.locator('header')).toBeVisible();
    await expect(page.locator('main')).toBeVisible();
  });

  test('should handle empty or populated wishlist state', async ({ page }) => {
    await page.goto('/pt/favoritos');
    await page.waitForLoadState('networkidle');
    
    // Check for either empty state or wishlist items
    const emptyState = page.locator('[data-testid="empty-wishlist"], .empty-wishlist, [class*="empty"]');
    const wishlistItems = page.locator('[data-testid="wishlist-items"], .wishlist-items, [class*="wishlist-item"]');
    const productGrid = page.locator('[data-testid="product-grid"], .product-grid, [class*="grid"]');
    
    // Either empty state or wishlist content should be present
    await expect(
      emptyState.or(wishlistItems).or(productGrid)
    ).toBeVisible();
    
    // Take visual snapshot
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî reduced motion and wait
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(100);
    await expect(page.locator('main')).toHaveScreenshot('wishlist-main.png');
  });

  test('should display page title correctly', async ({ page }) => {
    await page.goto('/pt/favoritos');
    
    // Check for page title/heading
    const titleSelectors = [
      'h1',
      '[data-testid="page-title"]',
      'text="Favoritos"',
      'text="Wishlist"',
      'text="Lista de Desejos"'
    ];
    
    let hasTitleElement = false;
    for (const selector of titleSelectors) {
      const element = page.locator(selector);
      if (await element.count() > 0 && await element.first().isVisible()) {
        hasTitleElement = true;
        break;
      }
    }
    
    // At least one title element should be present
    expect(hasTitleElement).toBe(true);
  });
});


    üìÅ favoritos.spec.ts-snapshots/
    üìÑ home.spec.ts

============================================================
FILE: tests\e2e\home.spec.ts
============================================================
import { test, expect } from '@playwright/test';

test.describe('Home Page', () => {
  // INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî freeze time for visual snapshots
  test.beforeEach(async ({ page }) => {
    await page.addInitScript(() => { 
      const fixed = 1700000000000; 
      Date.now = () => fixed as any; 
    });
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(120);
  });

  test('should load home page successfully', async ({ page }) => {
    await page.goto('/pt');
    
    // Check page loads successfully
    expect(page.url()).toContain('/pt');
    
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî reduced motion and wait
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(100);

    // Check essential elements are present
    await expect(page.locator('header').first()).toBeVisible();
    await expect(page.locator('[data-testid="logo"], img[alt*="INSANYCK"], img[alt*="logo"]').first()).toBeVisible();
    
    // Check hero section is present
    await expect(page.locator('main')).toBeVisible();
    
    // Take visual snapshot of hero area
    await expect(page.locator('header').first()).toHaveScreenshot('header-home.png');
    
    // Check navigation is present
    await expect(page.locator('nav, [role="navigation"]').first()).toBeVisible();
  });

  test('should have working navigation links', async ({ page }) => {
    await page.goto('/pt');
    
    // Wait for page to be fully loaded
    await page.waitForLoadState('domcontentloaded');
    
    // Check if sacola/cart link exists and is clickable
    const cartLink = page.locator('a[href*="sacola"], [data-testid="cart-link"], [aria-label*="carrinho"], [aria-label*="sacola"]');
    if (await cartLink.count() > 0) {
      await expect(cartLink.first()).toBeVisible();
    }
    
    // Check if products/loja link exists
    const shopLink = page.locator('a[href*="loja"], a[href*="produto"], [data-testid="shop-link"]');
    if (await shopLink.count() > 0) {
      await expect(shopLink.first()).toBeVisible();
    }
  });
});


    üìÅ home.spec.ts-snapshots/
    üìÑ pdp.spec.ts

============================================================
FILE: tests\e2e\pdp.spec.ts
============================================================
import { test, expect } from '@playwright/test';

test.describe('Product Detail Page (PDP)', () => {
  // INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî freeze time for visual snapshots
  test.beforeEach(async ({ page }) => {
    await page.addInitScript(() => { 
      const fixed = 1700000000000; 
      Date.now = () => fixed as any; 
    });
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(120);
  });
  test('should load product page successfully', async ({ page }) => {
    // Try to navigate to a product page
    // First try the slug route structure
    await page.goto('/pt/produto/oversized-classic');
    
    // If the specific product doesn't exist, the page might redirect or show 404
    // Let's check if we're still on a product page or got redirected
    const currentUrl = page.url();
    
    if (currentUrl.includes('/produto/') || currentUrl.includes('/pt')) {
      // We're on a product page or got redirected to home
      await expect(page.locator('header')).toBeVisible();
      await expect(page.locator('main')).toBeVisible();
    }
  });

  test('should display product information when product exists', async ({ page }) => {
    await page.goto('/pt/produto/oversized-classic');
    await page.waitForLoadState('domcontentloaded');
    
    const currentUrl = page.url();
    
    // Only run product-specific checks if we're actually on a product page
    if (currentUrl.includes('/produto/')) {
      // Check for product title
      const titleSelectors = [
        'h1',
        '[data-testid="product-title"]',
        '[class*="product-title"]',
        '[class*="title"]'
      ];
      
      let hasTitle = false;
      for (const selector of titleSelectors) {
        const element = page.locator(selector);
        if (await element.count() > 0 && await element.first().isVisible()) {
          hasTitle = true;
          break;
        }
      }
      
      // Check for price information
      const priceSelectors = [
        '[data-testid="product-price"]',
        '[class*="price"]',
        'text=/R\\$\\s*\\d+/',
        '[data-testid="price"]'
      ];
      
      let hasPrice = false;
      for (const selector of priceSelectors) {
        const element = page.locator(selector);
        if (await element.count() > 0) {
          hasPrice = true;
          break;
        }
      }
      
      // Check for add to cart button
      const addToCartSelectors = [
        '[data-testid="add-to-cart"]',
        'button:has-text("Adicionar")',
        'button:has-text("Carrinho")',
        '[class*="add-to-cart"]'
      ];
      
      let hasAddToCart = false;
      for (const selector of addToCartSelectors) {
        const element = page.locator(selector);
        if (await element.count() > 0) {
          hasAddToCart = true;
          break;
        }
      }
      
      // At least some product elements should be present
      expect(hasTitle || hasPrice || hasAddToCart).toBe(true);
      
      // Take visual snapshot of product hero area
      // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî reduced motion and wait
      await page.emulateMedia({ reducedMotion: 'reduce' });
      await page.waitForTimeout(100);
      await page.waitForLoadState('networkidle');
      await expect(page.locator('main').first()).toHaveScreenshot('pdp-hero.png');
    }
  });

  test('PDP hero √© est√°vel (3D ou imagem)', async ({ page }) => {
    await page.goto('/pt/produto/oversized-classic');
    await page.waitForLoadState('domcontentloaded');
    
    const currentUrl = page.url();
    
    // Only run checks if we're actually on a product page
    if (currentUrl.includes('/produto/')) {
      const model = page.locator('[data-testid="model-viewer"]').first();
      const has3D = await model.isVisible().catch(() => false);

      if (has3D) {
        await expect(model).toBeVisible();
      } else {
        await expect(page.locator('[data-testid="pdp-hero"] img').first()).toBeVisible();
      }

      await page.waitForLoadState('networkidle');
      await expect(page.locator('[data-testid="pdp-hero"]').first()).toHaveScreenshot('pdp-hero-stable.png');
    }
  });
});


    üìÅ pdp.spec.ts-snapshots/
    üìÑ sacola.spec.ts

============================================================
FILE: tests\e2e\sacola.spec.ts
============================================================
import { test, expect } from '@playwright/test';

test.describe('Sacola (Cart) Page', () => {
  // INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî freeze time for visual snapshots
  test.beforeEach(async ({ page }) => {
    await page.addInitScript(() => { 
      const fixed = 1700000000000; 
      Date.now = () => fixed as any; 
    });
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(120);
  });
  test('should load cart page successfully', async ({ page }) => {
    await page.goto('/pt/sacola');
    
    // Check page loads successfully
    expect(page.url()).toContain('/sacola');
    
    // Check essential elements are present
    await expect(page.locator('header')).toBeVisible();
    await expect(page.locator('main')).toBeVisible();
    
    // Check for cart content or empty state
    const emptyState = page.locator('[data-testid="empty-cart"], .empty-cart, [class*="empty"]');
    const cartItems = page.locator('[data-testid="cart-items"], .cart-items, [class*="cart-item"]');
    
    // Either empty state or cart items should be present
    await expect(
      emptyState.or(cartItems)
    ).toBeVisible();
  });

  test('should show empty cart state correctly', async ({ page }) => {
    await page.goto('/pt/sacola');
    await page.waitForLoadState('networkidle');
    
    // Look for empty cart indicators
    const emptyIndicators = [
      '[data-testid="empty-cart"]',
      '.empty-cart',
      '[class*="empty"]',
      'text="carrinho vazio"',
      'text="sacola vazia"',
      'text="Sua sacola est√° vazia"',
      'text="Seu carrinho est√° vazio"'
    ];
    
    let hasEmptyState = false;
    for (const selector of emptyIndicators) {
      const element = page.locator(selector);
      if (await element.count() > 0) {
        hasEmptyState = true;
        break;
      }
    }
    
    // If cart is empty, should have continue shopping link
    if (hasEmptyState) {
      const continueShoppingLink = page.locator(
        'a[href*="loja"], a[href*="produto"], [data-testid="continue-shopping"]'
      );
      
      if (await continueShoppingLink.count() > 0) {
        await expect(continueShoppingLink.first()).toBeVisible();
      }
    }
    
    // Take visual snapshot of cart page
    // INSANYCK STEP 4 ¬∑ Lote 3 ‚Äî reduced motion and wait
    await page.emulateMedia({ reducedMotion: 'reduce' });
    await page.waitForTimeout(100);
    await expect(page.locator('main')).toHaveScreenshot('cart-main.png');
  });
});


    üìÅ sacola.spec.ts-snapshots/
  üìÅ emails/
    üìÑ templates.spec.ts

============================================================
FILE: tests\emails\templates.spec.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî Email templates test (conditional)
import { test, expect } from '@playwright/test';

// Only run these tests if EMAIL_PREVIEW_TOKEN is set
const EMAIL_PREVIEW_TOKEN = process.env.EMAIL_PREVIEW_TOKEN;

test.describe.configure({ mode: 'serial' });

test.describe('Email Templates', () => {
  test.skip(!EMAIL_PREVIEW_TOKEN, 'EMAIL_PREVIEW_TOKEN not set, skipping email tests');

  const emailTypes = [
    'welcome',
    'order-confirmation',
    'shipping-notification',
    'password-reset'
  ];

  for (const emailType of emailTypes) {
    test(`should render ${emailType} email template`, async ({ request }) => {
      const response = await request.get(`/api/emails/preview?type=${emailType}&token=${EMAIL_PREVIEW_TOKEN}`);
      
      // Should return 200 and HTML content
      expect(response.status()).toBe(200);
      expect(response.headers()['content-type']).toContain('text/html');
      
      const html = await response.text();
      
      // Should contain basic HTML structure
      expect(html).toContain('<html');
      expect(html).toContain('<body');
      expect(html).toContain('</html>');
      
      // Should contain some email-specific content
      expect(html.length).toBeGreaterThan(100);
      
      // Should not contain obvious error messages
      expect(html).not.toContain('Error:');
      expect(html).not.toContain('404');
      expect(html).not.toContain('Not Found');
    });
  }

  test('should reject requests without valid token', async ({ request }) => {
    const response = await request.get('/api/emails/preview?type=welcome&token=invalid');
    
    // Should return 401 or 403
    expect([401, 403]).toContain(response.status());
  });

  test('should reject requests without token', async ({ request }) => {
    const response = await request.get('/api/emails/preview?type=welcome');
    
    // Should return 401 or 403
    expect([401, 403]).toContain(response.status());
  });

  test('should handle unknown email types gracefully', async ({ request }) => {
    const response = await request.get(`/api/emails/preview?type=nonexistent&token=${EMAIL_PREVIEW_TOKEN}`);
    
    // Should return 400 or 404
    expect([400, 404]).toContain(response.status());
  });
});


  üìÅ pwa/
    üìÑ manifest.spec.ts

============================================================
FILE: tests\pwa\manifest.spec.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî PWA manifest test
import { test, expect } from '@playwright/test';

test.describe('PWA Manifest', () => {
  test('should have manifest link in HTML head', async ({ page }) => {
    await page.goto('/');
    
    // Check for manifest link
    const manifestLink = page.locator('link[rel="manifest"]');
    await expect(manifestLink).toHaveCount(1);
    
    const href = await manifestLink.getAttribute('href');
    expect(href).toBe('/manifest.json');
  });

  test('should serve valid manifest.json', async ({ page, request }) => {
    // Fetch the manifest
    const response = await request.get('/manifest.json');
    expect(response.status()).toBe(200);
    expect(response.headers()['content-type']).toContain('application/json');
    
    const manifest = await response.json();
    
    // Check required PWA manifest fields
    expect(manifest.name).toBeTruthy();
    expect(manifest.short_name).toBeTruthy();
    expect(manifest.start_url).toBeTruthy();
    expect(manifest.display).toBeTruthy();
    expect(manifest.theme_color).toBeTruthy();
    expect(manifest.background_color).toBeTruthy();
    
    // Check icons array
    expect(Array.isArray(manifest.icons)).toBe(true);
    expect(manifest.icons.length).toBeGreaterThan(0);
    
    // Validate each icon has required properties
    for (const icon of manifest.icons) {
      expect(icon.src).toBeTruthy();
      expect(icon.sizes).toBeTruthy();
      expect(icon.type).toBeTruthy();
    }
  });

  test('should have valid icon paths', async ({ page, request }) => {
    // Get manifest first
    const manifestResponse = await request.get('/manifest.json');
    const manifest = await manifestResponse.json();
    
    // Check that icon files actually exist
    for (const icon of manifest.icons) {
      const iconResponse = await request.get(icon.src);
      expect(iconResponse.status()).toBe(200);
      expect(iconResponse.headers()['content-type']).toMatch(/image\/(png|jpeg|webp|svg)/);
    }
  });

  test('should have valid screenshots if present', async ({ page, request }) => {
    const manifestResponse = await request.get('/manifest.json');
    const manifest = await manifestResponse.json();
    
    // Screenshots are optional, but if present should be valid
    if (manifest.screenshots && manifest.screenshots.length > 0) {
      for (const screenshot of manifest.screenshots) {
        expect(screenshot.src).toBeTruthy();
        expect(screenshot.sizes).toBeTruthy();
        expect(screenshot.type).toBeTruthy();
        
        // Check that screenshot files exist
        const screenshotResponse = await request.get(screenshot.src);
        expect(screenshotResponse.status()).toBe(200);
        expect(screenshotResponse.headers()['content-type']).toMatch(/image\/(png|jpeg|webp)/);
      }
    }
  });

  test('should have proper start_url that loads correctly', async ({ page, request }) => {
    const manifestResponse = await request.get('/manifest.json');
    const manifest = await manifestResponse.json();
    
    // Navigate to the start_url
    await page.goto(manifest.start_url);
    
    // Should load successfully
    await expect(page).toHaveTitle(/.+/); // Should have some title
    await page.waitForLoadState('domcontentloaded');
    
    // Should not be an error page
    const bodyText = await page.textContent('body');
    expect(bodyText).not.toContain('404');
    expect(bodyText).not.toContain('Not Found');
  });
});


    üìÑ offline.spec.ts

============================================================
FILE: tests\pwa\offline.spec.ts
============================================================
// INSANYCK STEP 4 ¬∑ Lote 4 ‚Äî PWA offline test
import { test, expect } from '@playwright/test';

test.describe('PWA Offline Experience', () => {
  test('should handle offline navigation gracefully', async ({ page, context }) => {
    // Visit the homepage first 
    await page.goto('/');
    await page.waitForLoadState('domcontentloaded');
    
    // Check if service worker is available (but don't wait for activation)
    const hasServiceWorker = await page.evaluate(() => {
      return 'serviceWorker' in navigator;
    });
    expect(hasServiceWorker).toBe(true);

    // Simulate offline mode
    await context.setOffline(true);

    // Try to navigate to a page that should fallback to offline.html
    try {
      await page.goto('/nonexistent-page', { waitUntil: 'domcontentloaded' });
      // Should show some offline indication or error page
      const bodyText = await page.textContent('body');
      expect(bodyText).toBeTruthy();
    } catch (error) {
      // Expected behavior when offline - connection error
      expect(error.message).toContain('ERR_INTERNET_DISCONNECTED');
    }

    // Go back online
    await context.setOffline(false);

    // Navigate back to home should work
    await page.goto('/');
    await page.waitForLoadState('domcontentloaded');
    await expect(page.locator('body')).toBeVisible();
  });

  test('should serve cached content when offline', async ({ page, context }) => {
    // Visit homepage and let it cache
    await page.goto('/');
    await page.waitForLoadState('domcontentloaded');

    // Check basic page loaded
    await expect(page.locator('body')).toBeVisible();

    // Go offline
    await context.setOffline(true);

    // Try to reload - should work from cache or show meaningful error
    try {
      await page.reload({ waitUntil: 'domcontentloaded' });
      // Should still show some content
      await expect(page.locator('body')).toBeVisible();
    } catch (error) {
      // If fails, that's expected offline behavior
      console.log('Expected offline behavior:', error);
    }
  });
});


üìÑ tsconfig.json

============================================================
FILE: tsconfig.json
============================================================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "types": ["node", "react", "react-dom", "next", "next/types/global"],
    "incremental": true,
    "baseUrl": ".",
    "plugins": [{ "name": "next" }],
    "paths": {
      "@/*": ["src/*"]
    }
  },
  "include": [
    "next-env.d.ts",
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/types/**/*.d.ts",
    ".next/types/**/*.ts"
  ],
  "exclude": ["node_modules"]
}



üìÅ _app_backup/
  üìÑ layout.tsx

============================================================
FILE: _app_backup\layout.tsx
============================================================
// app/layout.tsx
import "../src/styles/globals.css"; // üîπ aplica Tailwind v4 + tokens no App Router

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "INSANYCK",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="pt-BR">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {children}
      </body>
    </html>
  );
}



  üìÑ page.tsx

============================================================
FILE: _app_backup\page.tsx
============================================================
import Image from "next/image";

export default function Home() {
  return (
    <div className="font-sans grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20">
      <main className="flex flex-col gap-[32px] row-start-2 items-center sm:items-start">
        <Image
          className="dark:invert"
          src="/next.svg"
          alt="Next.js logo"
          width={180}
          height={38}
          priority
        />
        <ol className="font-mono list-inside list-decimal text-sm/6 text-center sm:text-left">
          <li className="mb-2 tracking-[-.01em]">
            Get started by editing{" "}
            <code className="bg-black/[.05] dark:bg-white/[.06] font-mono font-semibold px-1 py-0.5 rounded">
              app/page.tsx
            </code>
            .
          </li>
          <li className="tracking-[-.01em]">
            Save and see your changes instantly.
          </li>
        </ol>

        <div className="flex gap-4 items-center flex-col sm:flex-row">
          <a
            className="rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto"
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            <Image
              className="dark:invert"
              src="/vercel.svg"
              alt="Vercel logomark"
              width={20}
              height={20}
            />
            Deploy now
          </a>
          <a
            className="rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[158px]"
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Read our docs
          </a>
        </div>
      </main>
      <footer className="row-start-3 flex gap-[24px] flex-wrap items-center justify-center">
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/file.svg"
            alt="File icon"
            width={16}
            height={16}
          />
          Learn
        </a>
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/window.svg"
            alt="Window icon"
            width={16}
            height={16}
          />
          Examples
        </a>
        <a
          className="flex items-center gap-2 hover:underline hover:underline-offset-4"
          href="https://nextjs.org?utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image
            aria-hidden
            src="/globe.svg"
            alt="Globe icon"
            width={16}
            height={16}
          />
          Go to nextjs.org ‚Üí
        </a>
      </footer>
    </div>
  );
}


